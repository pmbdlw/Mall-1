<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Himall.Entities</name>
    </assembly>
    <members>
        <member name="M:Himall.Entities.UnitTest.Basics">
            <summary>
            基础演示 添删改查
            </summary>
        </member>
        <member name="M:Himall.Entities.UnitTest.CombiningQueries">
            <summary>
            组合查询
            </summary>
        </member>
        <member name="T:Himall.Entities.UnitTest.DomeOrderItemDTO">
            <summary>
            演示数据模型
            </summary>
        </member>
        <member name="M:Himall.Entities.UnitTest.MultiTableQueries">
            <summary>
            多表链接查询查询
            </summary>
        </member>
        <member name="M:Himall.Entities.UnitTest.OtherQueries">
            <summary>
            其他查询(Group子句,聚合函数,子查询)
            </summary>
        </member>
        <member name="M:Himall.Entities.UnitTest.Transaction">
            <summary>
            事物执行
            </summary>
        </member>
        <member name="M:Himall.Entities.UnitTest.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:Himall.Entities.Db">
            <summary>
            
            </summary>
        </member>
        <member name="T:Himall.Entities.Db.Record`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Himall.Entities.Db.Record`1.MarkColumnModified(System.String)">
            <summary>
            Modified Field Notification Func
            </summary>
        </member>
        <member name="P:Himall.Entities.Db.Record`1.ModifiedColumns">
            <summary>
            Modified Fields List
            </summary>
        </member>
        <member name="M:Himall.Entities.Db.Record`1.ModifiedComplete">
            <summary>
            Modified Complete
            </summary>
        </member>
        <member name="F:Himall.Entities.Db.Record`1.Editabled">
            <summary>
            Is Edit Mode
            </summary>
        </member>
        <member name="P:Himall.Entities.Db.Record`1.EnableLazyLoad">
            <summary>
            是否开启延迟加载
            </summary>
        </member>
        <member name="P:Himall.Entities.Db.Record`1.IgnoreReference">
            <summary>
            是否开启关联属性(true则关联属性为null或空集合)
            </summary>
        </member>
        <member name="F:Himall.Entities.Db.Record`1.ImageServerUrl">
            <summary>
            获取图片服务器所在路径
            </summary>
        </member>
        <member name="T:Himall.Entities.AccountInfo">
            <summary>
            Himall_Account
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.AccountDate">
            <summary>
            ³öÕËÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.StartDate">
            <summary>
            ¿ªÊ¼Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.EndDate">
            <summary>
            ½áÊøÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.Status">
            <summary>
            Ã¶¾Ù 0Î´½áÕË£¬1ÒÑ½áÕË
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.ProductActualPaidAmount">
            <summary>
            ÉÌÆ·Êµ¸¶×Ü¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.FreightAmount">
            <summary>
            ÔË·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.CommissionAmount">
            <summary>
            Ó¶½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.RefundCommissionAmount">
            <summary>
            ÍË»¹Ó¶½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.RefundAmount">
            <summary>
            ÍË¿î½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.AdvancePaymentAmount">
            <summary>
            Ô¤¸¶¿î×Ü¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.PeriodSettlement">
            <summary>
            ±¾ÆÚÓ¦½á
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.Brokerage">
            <summary>
            ·ÖÏúÓ¶½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.ReturnBrokerage">
            <summary>
            ÍË»¹·ÖÏúÓ¶½ð
            </summary>
        </member>
        <member name="T:Himall.Entities.AccountInfo.AccountStatus">
            <summary>
            结算状态
            </summary>
        </member>
        <member name="F:Himall.Entities.AccountInfo.AccountStatus.UnAccount">
            <summary>
            未结算
            </summary>
        </member>
        <member name="F:Himall.Entities.AccountInfo.AccountStatus.Accounted">
            <summary>
            已结算
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountInfo.AccountAmount">
            <summary>
            结算金额
            </summary>
        </member>
        <member name="T:Himall.Entities.AccountDetailInfo">
            <summary>
            Himall_AccountDetail
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.AccountId">
            <summary>
            ½áËã¼ÇÂ¼Íâ¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.ShopName">
            <summary>
            ShopName
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.Date">
            <summary>
            Íê³ÉÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.OrderDate">
            <summary>
            ¶©µ¥ÏÂµ¥ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.OrderFinshDate">
            <summary>
            OrderFinshDate
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.OrderType">
            <summary>
            Ã¶¾Ù Íê³É¶©µ¥1£¬ÍË¶©µ¥0
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.OrderId">
            <summary>
            ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.OrderAmount">
            <summary>
            ¶©µ¥½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.ProductActualPaidAmount">
            <summary>
            ÉÌÆ·Êµ¸¶×Ü¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.FreightAmount">
            <summary>
            ÔË·Ñ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.TaxAmount">
            <summary>
            Ë°·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.IntegralDiscount">
            <summary>
            »ý·ÖµÖ¿Û½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.CommissionAmount">
            <summary>
            Ó¶½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.RefundTotalAmount">
            <summary>
            ÍË¿î½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.RefundCommisAmount">
            <summary>
            ÍË»¹Ó¶½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.OrderRefundsDates">
            <summary>
            ÍËµ¥µÄÈÕÆÚ¼¯ºÏÒÔ;·Ö¸ô
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.BrokerageAmount">
            <summary>
            ·ÖÏúÓ¶½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.ReturnBrokerageAmount">
            <summary>
            ÍË·ÖÏúÓ¶½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.SettlementAmount">
            <summary>
            ½áËã½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountDetailInfo.PaymentTypeName">
            <summary>
            PaymentTypeName
            </summary>
        </member>
        <member name="T:Himall.Entities.AccountDetailInfo.EnumOrderType">
            <summary>
            订单状态
            </summary>
        </member>
        <member name="F:Himall.Entities.AccountDetailInfo.EnumOrderType.ReturnOrder">
            <summary>
            退订单
            </summary>
        </member>
        <member name="F:Himall.Entities.AccountDetailInfo.EnumOrderType.FinishedOrder">
            <summary>
            已完成
            </summary>
        </member>
        <member name="T:Himall.Entities.AccountMetaInfo">
            <summary>
            Himall_AccountMeta
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountMetaInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountMetaInfo.AccountId">
            <summary>
            AccountId
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountMetaInfo.MetaKey">
            <summary>
            MetaKey
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountMetaInfo.MetaValue">
            <summary>
            MetaValue
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountMetaInfo.ServiceStartTime">
            <summary>
            ÓªÏú·þÎñ¿ªÊ¼Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.AccountMetaInfo.ServiceEndTime">
            <summary>
            ÓªÏú·þÎñ½áÊøÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.ActiveInfo">
            <summary>
            Himall_Active
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.ShopId">
            <summary>
            µêÆÌ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.ActiveName">
            <summary>
            »î¶¯Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.StartTime">
            <summary>
            ¿ªÊ¼Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.EndTime">
            <summary>
            ½áÊøÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.IsAllProduct">
            <summary>
            ÊÇ·ñÈ«²¿ÉÌÆ·
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.IsAllStore">
            <summary>
            ÊÇ·ñÈ«²¿ÃÅµê
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.ActiveType">
            <summary>
            »î¶¯ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.ActiveStatus">
            <summary>
            »î¶¯×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveInfo.Rules">
            <summary>
            满减规则(需自行填充)
            </summary>
            
        </member>
        <member name="P:Himall.Entities.ActiveInfo.Products">
            <summary>
            满减商品(需自行填充)
            </summary>
        </member>
        <member name="T:Himall.Entities.ActiveMarketServiceInfo">
            <summary>
            Himall_ActiveMarketService
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveMarketServiceInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveMarketServiceInfo.TypeId">
            <summary>
            ÓªÏú·þÎñÀàÐÍID
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveMarketServiceInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveMarketServiceInfo.ShopName">
            <summary>
            ShopName
            </summary>
        </member>
        <member name="T:Himall.Entities.ActiveProductInfo">
            <summary>
            Himall_ActiveProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveProductInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveProductInfo.ActiveId">
            <summary>
            »î¶¯±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ActiveProductInfo.ProductId">
            <summary>
            ²úÆ·±àºÅ -1±íÊ¾ËùÓÐÉÌÆ·
            </summary>
        </member>
        <member name="T:Himall.Entities.AgreementInfo">
            <summary>
            Himall_Agreement
            </summary>
        </member>
        <member name="P:Himall.Entities.AgreementInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.AgreementInfo.AgreementType">
            <summary>
            Ð­ÒéÀàÐÍ Ã¶¾Ù AgreementType£º0Âò¼Ò×¢²áÐ­Òé£¬1Âô¼ÒÈë×¤Ð­Òé
            </summary>
        </member>
        <member name="P:Himall.Entities.AgreementInfo.AgreementContent">
            <summary>
            Ð­ÒéÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.AgreementInfo.LastUpdateTime">
            <summary>
            ×îºóÐÞ¸ÄÈÕÆÚ
            </summary>
        </member>
        <member name="T:Himall.Entities.AgreementInfo.AgreementTypes">
            <summary>
            协议枚举
            </summary>
        </member>
        <member name="F:Himall.Entities.AgreementInfo.AgreementTypes.Buyers">
            <summary>
            买家
            </summary>
        </member>
        <member name="F:Himall.Entities.AgreementInfo.AgreementTypes.Seller">
            <summary>
            卖家
            </summary>
        </member>
        <member name="F:Himall.Entities.AgreementInfo.AgreementTypes.APP">
            <summary>
            APP关于我们
            </summary>
        </member>
        <member name="T:Himall.Entities.AppBaseSafeSettingInfo">
            <summary>
            Himall_AppBaseSafeSetting
            </summary>
        </member>
        <member name="P:Himall.Entities.AppBaseSafeSettingInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.AppBaseSafeSettingInfo.AppKey">
            <summary>
            AppKey
            </summary>
        </member>
        <member name="P:Himall.Entities.AppBaseSafeSettingInfo.AppSecret">
            <summary>
            AppSecret
            </summary>
        </member>
        <member name="T:Himall.Entities.AppMessageInfo">
            <summary>
            Himall_AppMessage
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.ShopId">
            <summary>
            ÉÌ¼ÒID
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.ShopBranchId">
            <summary>
            ÃÅµêID
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.TypeId">
            <summary>
            ÏûÏ¢ÀàÐÍ£¬¶ÔÓ¦Ã¶¾Ù(1=¶©µ¥£¬2=ÊÛºó)
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.SourceId">
            <summary>
            Êý¾ÝÀ´Ô´±àºÅ£¬¶ÔÓ¦¶©µ¥ID»òÕßÊÛºóID
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.Content">
            <summary>
            ÏûÏ¢ÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.IsRead">
            <summary>
            ÊÇ·ñÒÑ¶Á
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.sendtime">
            <summary>
            sendtime
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Himall.Entities.AppMessageInfo.OrderPayDate">
            <summary>
            OrderPayDate
            </summary>
        </member>
        <member name="T:Himall.Entities.ApplyWithDrawInfo">
            <summary>
            Himall_ApplyWithDraw
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.MemId">
            <summary>
            »áÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.NickName">
            <summary>
            Î¢ÐÅêÇ³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.ApplyStatus">
            <summary>
            ÉêÇë×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.ApplyAmount">
            <summary>
            ÌáÏÖ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.ApplyTime">
            <summary>
            ÉêÇëÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.ConfirmTime">
            <summary>
            ´¦ÀíÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.PayTime">
            <summary>
            ¸¶¿îÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.PayNo">
            <summary>
            ¸¶¿îÁ÷Ë®ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.OpUser">
            <summary>
            ²Ù×÷ÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.Remark">
            <summary>
            ±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.ApplyType">
            <summary>
            ÌáÏÖ·½Ê½
            </summary>
        </member>
        <member name="P:Himall.Entities.ApplyWithDrawInfo.Poundage">
            <summary>
            ÊÖÐø·Ñ
            </summary>
        </member>
        <member name="T:Himall.Entities.ApplyWithDrawInfo.ApplyWithDrawStatus">
            <summary>
            申请退款状态
            </summary>
        </member>
        <member name="F:Himall.Entities.ApplyWithDrawInfo.ApplyWithDrawStatus.WaitConfirm">
            <summary>
            待处理
            </summary>
        </member>
        <member name="F:Himall.Entities.ApplyWithDrawInfo.ApplyWithDrawStatus.PayFail">
            <summary>
            付款失败
            </summary>
        </member>
        <member name="F:Himall.Entities.ApplyWithDrawInfo.ApplyWithDrawStatus.WithDrawSuccess">
            <summary>
            提现成功
            </summary>
        </member>
        <member name="F:Himall.Entities.ApplyWithDrawInfo.ApplyWithDrawStatus.Refuse">
            <summary>
            已拒绝
            </summary>
        </member>
        <member name="F:Himall.Entities.ApplyWithDrawInfo.ApplyWithDrawStatus.PayPending">
            <summary>
            付款中
            <para>第三方付款中,取消后回到待处理状态</para>
            </summary>
        </member>
        <member name="T:Himall.Entities.ArticleInfo">
            <summary>
            Himall_Article
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.CategoryId">
            <summary>
            ÎÄÕÂ·ÖÀàID
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.Title">
            <summary>
            ÎÄÕÂ±êÌâ
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.IconUrl">
            <summary>
            IconUrl
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.Content">
            <summary>
            ÎÄµµÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.AddDate">
            <summary>
            AddDate
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.DisplaySequence">
            <summary>
            DisplaySequence
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.Meta_Title">
            <summary>
            SEO±êÌâ
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.Meta_Description">
            <summary>
            SEOËµÃ÷
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.Meta_Keywords">
            <summary>
            SEO¹Ø¼ü×Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleInfo.IsRelease">
            <summary>
            ÊÇ·ñÏÔÊ¾
            </summary>
        </member>
        <member name="T:Himall.Entities.ArticleCategoryInfo">
            <summary>
            Himall_ArticleCategory
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleCategoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleCategoryInfo.ParentCategoryId">
            <summary>
            ParentCategoryId
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleCategoryInfo.Name">
            <summary>
            ÎÄÕÂÀàÐÍÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleCategoryInfo.DisplaySequence">
            <summary>
            ÏÔÊ¾Ë³Ðò
            </summary>
        </member>
        <member name="P:Himall.Entities.ArticleCategoryInfo.IsDefault">
            <summary>
            ÊÇ·ñÎªÄ¬ÈÏ
            </summary>
        </member>
        <member name="T:Himall.Entities.AttributeInfo">
            <summary>
            Himall_Attribute
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeInfo.TypeId">
            <summary>
            TypeId
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeInfo.Name">
            <summary>
            Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeInfo.DisplaySequence">
            <summary>
            DisplaySequence
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeInfo.IsMust">
            <summary>
            ÊÇ·ñÎª±ØÑ¡
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeInfo.IsMulti">
            <summary>
            ÊÇ·ñ¿É¶àÑ¡
            </summary>
        </member>
        <member name="T:Himall.Entities.AttributeValueInfo">
            <summary>
            Himall_AttributeValue
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeValueInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeValueInfo.AttributeId">
            <summary>
            ÊôÐÔID
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeValueInfo.Value">
            <summary>
            ÊôÐÔÖµ
            </summary>
        </member>
        <member name="P:Himall.Entities.AttributeValueInfo.DisplaySequence">
            <summary>
            DisplaySequence
            </summary>
        </member>
        <member name="T:Himall.Entities.AutoReplyInfo">
            <summary>
            Himall_AutoReply
            </summary>
        </member>
        <member name="P:Himall.Entities.AutoReplyInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.AutoReplyInfo.RuleName">
            <summary>
            ¹æÔòÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.AutoReplyInfo.Keyword">
            <summary>
            ¹Ø¼ü´Ê
            </summary>
        </member>
        <member name="P:Himall.Entities.AutoReplyInfo.MatchType">
            <summary>
            Æ¥Åä·½Ê½(Ä£ºý£¬ÍêÈ«Æ¥Åä)
            </summary>
        </member>
        <member name="P:Himall.Entities.AutoReplyInfo.TextReply">
            <summary>
            ÎÄ×Ö»Ø¸´ÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.AutoReplyInfo.IsOpen">
            <summary>
            ÊÇ·ñ¿ªÆô
            </summary>
        </member>
        <member name="P:Himall.Entities.AutoReplyInfo.ReplyType">
            <summary>
            ÏûÏ¢»Ø¸´ÀàÐÍ-(¹Ø×¢»Ø¸´£¬¹Ø¼ü´Ê»Ø¸´£¬ÏûÏ¢×Ô¶¯»Ø¸´)
            </summary>
        </member>
        <member name="P:Himall.Entities.AutoReplyInfo.ReplyContentType">
            <summary>
            ÏûÏ¢ÄÚÈÝµÄÀàÐÍ£¬1=ÎÄ±¾£¬2=Í¼ÎÄËØ²Ä
            </summary>
        </member>
        <member name="P:Himall.Entities.AutoReplyInfo.MediaId">
            <summary>
            ËØ²ÄID
            </summary>
        </member>
        <member name="T:Himall.Entities.BannerInfo">
            <summary>
            Himall_Banner
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.Name">
            <summary>
            µ¼º½Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.Position">
            <summary>
            µ¼º½ÏÔÊ¾Î»ÖÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.DisplaySequence">
            <summary>
            DisplaySequence
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.Url">
            <summary>
            Ìø×ªURL
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.Platform">
            <summary>
            ÏÔÊ¾ÔÚÄÄ¸öÖÕ¶Ë
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.UrlType">
            <summary>
            UrlType
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.STATUS">
            <summary>
            ¿ªÆô»òÕß¹Ø±Õ
            </summary>
        </member>
        <member name="P:Himall.Entities.BannerInfo.EnableDelete">
            <summary>
            ÄÜ·ñÉ¾³ý
            </summary>
        </member>
        <member name="T:Himall.Entities.BannerInfo.BannerUrltypes">
            <summary>
            Url所属类型
            </summary>
        </member>
        <member name="F:Himall.Entities.BannerInfo.BannerUrltypes.Link">
            <summary>
            链接
            </summary>
        </member>
        <member name="F:Himall.Entities.BannerInfo.BannerUrltypes.AllProducts">
            <summary>
            全部商品
            </summary>
        </member>
        <member name="F:Himall.Entities.BannerInfo.BannerUrltypes.Category">
            <summary>
            商品分类
            </summary>
        </member>
        <member name="F:Himall.Entities.BannerInfo.BannerUrltypes.VShopIntroduce">
            <summary>
            店铺简介
            </summary>
        </member>
        <member name="T:Himall.Entities.BonusInfo">
            <summary>
            Himall_Bonus
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.Type">
            <summary>
            ÀàÐÍ£¬»î¶¯ºì°ü£¬¹Ø×¢ËÍºì°ü
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.Style">
            <summary>
            ÑùÊ½£¬Ä£°åÒ»£¨Ô´Éú·ç¸ñ£©£¬Ä£°å¶þ
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.Name">
            <summary>
            Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.MerchantsName">
            <summary>
            ÉÌ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.Remark">
            <summary>
            ±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.Blessing">
            <summary>
            ×£¸£Óï
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.TotalPrice">
            <summary>
            ×ÜÃæ¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.StartTime">
            <summary>
            ¿ªÊ¼ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.EndTime">
            <summary>
            ½áÊøÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.QRPath">
            <summary>
            ¶þÎ¬Âë
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.PriceType">
            <summary>
            ÊÇ·ñ¹Ì¶¨½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.FixedAmount">
            <summary>
            ¹Ì¶¨½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.RandomAmountStart">
            <summary>
            Ëæ»ú½ð¶îÆðÖ¹·¶Î§
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.RandomAmountEnd">
            <summary>
            Ëæ»ú½ð¶îÆðÖ¹·¶Î§
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.ReceiveCount">
            <summary>
            ReceiveCount
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.ImagePath">
            <summary>
            ImagePath
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.IsInvalid">
            <summary>
            IsInvalid
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.ReceivePrice">
            <summary>
            ReceivePrice
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.ReceiveHref">
            <summary>
            ReceiveHref
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.IsAttention">
            <summary>
            IsAttention
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusInfo.IsGuideShare">
            <summary>
            IsGuideShare
            </summary>
        </member>
        <member name="T:Himall.Entities.BonusReceiveInfo">
            <summary>
            Himall_BonusReceive
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusReceiveInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusReceiveInfo.BonusId">
            <summary>
            ºì°üId
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusReceiveInfo.OpenId">
            <summary>
            ÁìÈ¡ÈËÎ¢ÐÅId
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusReceiveInfo.ReceiveTime">
            <summary>
            ÁìÈ¡ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusReceiveInfo.Price">
            <summary>
            ÁìÈ¡½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusReceiveInfo.IsShare">
            <summary>
            IsShare
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusReceiveInfo.IsTransformedDeposit">
            <summary>
            ºì°ü½ð¶îÊÇ·ñÒÑ¾­×ªÈëÁËÔ¤´æ¿î
            </summary>
        </member>
        <member name="P:Himall.Entities.BonusReceiveInfo.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="T:Himall.Entities.BrandInfo">
            <summary>
            Himall_Brand
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.Name">
            <summary>
            Æ·ÅÆÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.DisplaySequence">
            <summary>
            Ë³Ðò
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.Logo">
            <summary>
            LOGO
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.RewriteName">
            <summary>
            Î´Ê¹ÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.Description">
            <summary>
            ËµÃ÷
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.Meta_Title">
            <summary>
            SEO
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.Meta_Description">
            <summary>
            Meta_Description
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.Meta_Keywords">
            <summary>
            Meta_Keywords
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.IsRecommend">
            <summary>
            IsRecommend
            </summary>
        </member>
        <member name="P:Himall.Entities.BrandInfo.IsDeleted">
            <summary>
            ÊÇ·ñÒÑÉ¾³ý
            </summary>
        </member>
        <member name="T:Himall.Entities.BrowsingHistoryInfo">
            <summary>
            Himall_BrowsingHistory
            </summary>
        </member>
        <member name="P:Himall.Entities.BrowsingHistoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.BrowsingHistoryInfo.MemberId">
            <summary>
            »áÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.BrowsingHistoryInfo.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="P:Himall.Entities.BrowsingHistoryInfo.BrowseTime">
            <summary>
            ä¯ÀÀÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.BusinessCategoryInfo">
            <summary>
            Himall_BusinessCategory
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryInfo.CategoryId">
            <summary>
            ·ÖÀàID
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryInfo.CommisRate">
            <summary>
            ·ÖÓ¶±ÈÀý
            </summary>
        </member>
        <member name="T:Himall.Entities.BusinessCategoryApplyInfo">
            <summary>
            Himall_BusinessCategoryApply
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyInfo.Id">
            <summary>
            Ö÷¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyInfo.ApplyDate">
            <summary>
            ÉêÇëÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyInfo.AuditedStatus">
            <summary>
            ÉóºË×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyInfo.AuditedDate">
            <summary>
            AuditedDate
            </summary>
        </member>
        <member name="T:Himall.Entities.BusinessCategoryApplyInfo.BusinessCateApplyStatus">
            <summary>
            审核状态
            </summary>
        </member>
        <member name="F:Himall.Entities.BusinessCategoryApplyInfo.BusinessCateApplyStatus.UnAudited">
            <summary>
            待审核
            </summary>
        </member>
        <member name="F:Himall.Entities.BusinessCategoryApplyInfo.BusinessCateApplyStatus.Audited">
            <summary>
            未结算
            </summary>
        </member>
        <member name="F:Himall.Entities.BusinessCategoryApplyInfo.BusinessCateApplyStatus.Refused">
            <summary>
            已结算
            </summary>
        </member>
        <member name="T:Himall.Entities.BusinessCategoryApplyDetailInfo">
            <summary>
            Himall_BusinessCategoryApplyDetail
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyDetailInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyDetailInfo.CommisRate">
            <summary>
            ·ÖÓ¶±ÈÀý
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyDetailInfo.CategoryId">
            <summary>
            ÀàÄ¿ID
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyDetailInfo.ApplyId">
            <summary>
            ÉêÇëId
            </summary>
        </member>
        <member name="P:Himall.Entities.BusinessCategoryApplyDetailInfo.CatePath">
            <summary>
            类目路径
            </summary>
        </member>
        <member name="T:Himall.Entities.CapitalInfo">
            <summary>
            Himall_Capital
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalInfo.MemId">
            <summary>
            »áÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalInfo.Balance">
            <summary>
            ¿ÉÓÃÓà¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalInfo.FreezeAmount">
            <summary>
            ¶³½á×Ê½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalInfo.ChargeAmount">
            <summary>
            ÀÛ¼Æ³äÖµ×Ü½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalInfo.PresentAmount">
            <summary>
            ÀÛ»ý³äÖµÔùËÍ
            </summary>
        </member>
        <member name="T:Himall.Entities.CapitalDetailInfo">
            <summary>
            Himall_CapitalDetail
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalDetailInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalDetailInfo.CapitalID">
            <summary>
            ×Ê²úÖ÷±íID
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalDetailInfo.SourceType">
            <summary>
            ×Ê²úÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalDetailInfo.Amount">
            <summary>
            ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalDetailInfo.SourceData">
            <summary>
            À´Ô´Êý¾Ý
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalDetailInfo.CreateTime">
            <summary>
            ½»Ò×Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalDetailInfo.Remark">
            <summary>
            ±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.CapitalDetailInfo.PresentAmount">
            <summary>
            ÔùËÍ
            </summary>
        </member>
        <member name="T:Himall.Entities.CapitalDetailInfo.CapitalDetailType">
            <summary>
            资产类型（帐号明细类型）
            </summary>
        </member>
        <member name="F:Himall.Entities.CapitalDetailInfo.CapitalDetailType.RedPacket">
            <summary>
            红包领取
            </summary>
        </member>
        <member name="F:Himall.Entities.CapitalDetailInfo.CapitalDetailType.ChargeAmount">
            <summary>
            充值
            </summary>
        </member>
        <member name="F:Himall.Entities.CapitalDetailInfo.CapitalDetailType.WithDraw">
            <summary>
            提现
            </summary>
        </member>
        <member name="F:Himall.Entities.CapitalDetailInfo.CapitalDetailType.Consume">
            <summary>
            消费
            </summary>
        </member>
        <member name="F:Himall.Entities.CapitalDetailInfo.CapitalDetailType.Refund">
            <summary>
            退款
            </summary>
        </member>
        <member name="T:Himall.Entities.CashDepositInfo">
            <summary>
            Himall_CashDeposit
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositInfo.Id">
            <summary>
            Ö÷¼üID
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositInfo.ShopId">
            <summary>
            Shop±íÍâ¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositInfo.CurrentBalance">
            <summary>
            ¿ÉÓÃ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositInfo.TotalBalance">
            <summary>
            ÒÑ½ÉÄÉ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositInfo.Date">
            <summary>
            ×îºóÒ»´Î½ÉÄÉÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositInfo.EnableLabels">
            <summary>
            ÊÇ·ñÏÔÊ¾±êÖ¾£¬Ö»ÓÐ±£Ö¤½ðÇ··Ñ¸Ã×Ö¶Î²ÅÓÐÓÃ£¬Ä¬ÈÏÏÔÊ¾
            </summary>
        </member>
        <member name="T:Himall.Entities.CashDepositDetailInfo">
            <summary>
            Himall_CashDepositDetail
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositDetailInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositDetailInfo.CashDepositId">
            <summary>
            CashDepositId
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositDetailInfo.AddDate">
            <summary>
            AddDate
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositDetailInfo.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositDetailInfo.Operator">
            <summary>
            ²Ù×÷ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositDetailInfo.Description">
            <summary>
            ËµÃ÷
            </summary>
        </member>
        <member name="P:Himall.Entities.CashDepositDetailInfo.RechargeWay">
            <summary>
            ³äÖµÀàÐÍ£¨ÒøÁª¡¢Ö§¸¶±¦Ö®ÀàµÄ£©
            </summary>
        </member>
        <member name="T:Himall.Entities.CategoryInfo">
            <summary>
            Himall_Category
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.Name">
            <summary>
            ·ÖÀàÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.Icon">
            <summary>
            ·ÖÀàÍ¼±ê
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.DisplaySequence">
            <summary>
            DisplaySequence
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.SupportVirtualProduct">
            <summary>
            ÊÇ·ñÖ§³ÖÐéÄâÉÌÆ·(0=·ñ£¬1=ÊÇ)
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.ParentCategoryId">
            <summary>
            ParentCategoryId
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.Depth">
            <summary>
            ·ÖÀàµÄÉî¶È
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.Path">
            <summary>
            ·ÖÀàµÄÂ·¾¶£¨ÒÔ|·ÖÀë£©
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.RewriteName">
            <summary>
            Î´Ê¹ÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.HasChildren">
            <summary>
            ÊÇ·ñÓÐ×Ó·ÖÀà
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.TypeId">
            <summary>
            TypeId
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.CommisRate">
            <summary>
            ·ÖÓ¶±ÈÀý
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.Meta_Title">
            <summary>
            Meta_Title
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.Meta_Description">
            <summary>
            Meta_Description
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.Meta_Keywords">
            <summary>
            Meta_Keywords
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.IsDeleted">
            <summary>
            ÊÇ·ñÒÑÉ¾³ý
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryInfo.IsShow">
            <summary>
            ÊÇ·ñÏÔÊ¾
            </summary>
        </member>
        <member name="T:Himall.Entities.CategoryCashDepositInfo">
            <summary>
            Himall_CategoryCashDeposit
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryCashDepositInfo.Id">
            <summary>
            Ö÷¼üId
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryCashDepositInfo.CategoryId">
            <summary>
            ·ÖÀàId
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryCashDepositInfo.NeedPayCashDeposit">
            <summary>
            ÐèÒª½ÉÄÉ±£Ö¤½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.CategoryCashDepositInfo.EnableNoReasonReturn">
            <summary>
            ÔÊÐíÆßÌìÎÞÀíÓÉÍË»õ
            </summary>
        </member>
        <member name="T:Himall.Entities.ChargeDetailInfo">
            <summary>
            Himall_ChargeDetail
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailInfo.MemId">
            <summary>
            »áÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailInfo.ChargeTime">
            <summary>
            ³äÖµÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailInfo.ChargeAmount">
            <summary>
            ³äÖµ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailInfo.ChargeWay">
            <summary>
            ³äÖµ·½Ê½
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailInfo.ChargeStatus">
            <summary>
            ³äÖµ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailInfo.CreateTime">
            <summary>
            Ìá½»³äÖµÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailInfo.PresentAmount">
            <summary>
            ÔùËÍ
            </summary>
        </member>
        <member name="T:Himall.Entities.ChargeDetailInfo.ChargeDetailStatus">
            <summary>
            申请退款状态
            </summary>
        </member>
        <member name="F:Himall.Entities.ChargeDetailInfo.ChargeDetailStatus.WaitPay">
            <summary>
            未付款
            </summary>
        </member>
        <member name="F:Himall.Entities.ChargeDetailInfo.ChargeDetailStatus.ChargeSuccess">
            <summary>
            充值成功
            </summary>
        </member>
        <member name="T:Himall.Entities.ChargeDetailShopInfo">
            <summary>
            Himall_ChargeDetailShop
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailShopInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailShopInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailShopInfo.ChargeTime">
            <summary>
            ³äÖµÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailShopInfo.ChargeAmount">
            <summary>
            ³äÖµ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailShopInfo.ChargeWay">
            <summary>
            ³äÖµ·½Ê½
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailShopInfo.ChargeStatus">
            <summary>
            ³äÖµ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ChargeDetailShopInfo.CreateTime">
            <summary>
            Ìá½»³äÖµÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.CityExpressConfigInfo">
            <summary>
            Himall_CityExpressConfig
            </summary>
        </member>
        <member name="P:Himall.Entities.CityExpressConfigInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CityExpressConfigInfo.ShopId">
            <summary>
            ÉÌ¼Ò±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.CityExpressConfigInfo.IsEnable">
            <summary>
            ÊÇ·ñ¿ªÆô
            </summary>
        </member>
        <member name="P:Himall.Entities.CityExpressConfigInfo.source_id">
            <summary>
            ÉÌ»§ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.CityExpressConfigInfo.app_key">
            <summary>
            appKey
            </summary>
        </member>
        <member name="P:Himall.Entities.CityExpressConfigInfo.app_secret">
            <summary>
            appSecret
            </summary>
        </member>
        <member name="T:Himall.Entities.CollocationInfo">
            <summary>
            Himall_Collocation
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.Id">
            <summary>
            ID×ÔÔö
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.Title">
            <summary>
            ×éºÏ¹º±êÌâ
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.StartTime">
            <summary>
            ¿ªÊ¼ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.EndTime">
            <summary>
            ½áÊøÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.ShortDesc">
            <summary>
            ×éºÏÃèÊö
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.ShopId">
            <summary>
            ×éºÏ¹ºµêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.CreateTime">
            <summary>
            Ìí¼ÓÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.ProductId">
            <summary>
            商品标识
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.ShopName">
            <summary>
            店铺名称
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationInfo.Status">
            <summary>
            组合购状态
            </summary>
        </member>
        <member name="T:Himall.Entities.CollocationPoruductInfo">
            <summary>
            Himall_CollocationPoruduct
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationPoruductInfo.Id">
            <summary>
            ID×ÔÔö
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationPoruductInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationPoruductInfo.ColloId">
            <summary>
            ×éºÏ¹ºID
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationPoruductInfo.IsMain">
            <summary>
            ÊÇ·ñÖ÷ÉÌÆ·
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationPoruductInfo.DisplaySequence">
            <summary>
            ÅÅÐò
            </summary>
        </member>
        <member name="T:Himall.Entities.CollocationSkuInfo">
            <summary>
            Himall_CollocationSku
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationSkuInfo.Id">
            <summary>
            ID×ÔÔö
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationSkuInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationSkuInfo.SkuID">
            <summary>
            ÉÌÆ·SkuId
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationSkuInfo.ColloProductId">
            <summary>
            ×éºÏÉÌÆ·±íID
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationSkuInfo.Price">
            <summary>
            ×éºÏ¹º¼Û¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.CollocationSkuInfo.SkuPirce">
            <summary>
            Ô­Ê¼¼Û¸ñ
            </summary>
        </member>
        <member name="T:Himall.Entities.CouponInfo">
            <summary>
            Himall_Coupon
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.Price">
            <summary>
            ¼Û¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.PerMax">
            <summary>
            ×î´ó¿ÉÁìÈ¡ÕÅÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.OrderAmount">
            <summary>
            ¶©µ¥½ð¶î£¨Âú×ã¶àÉÙÇ®²ÅÄÜÊ¹ÓÃ£©
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.Num">
            <summary>
            ·¢ÐÐÕÅÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.StartTime">
            <summary>
            ¿ªÊ¼Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.EndTime">
            <summary>
            EndTime
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.CouponName">
            <summary>
            ÓÅ»ÝÈ¯Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.CreateTime">
            <summary>
            CreateTime
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.ReceiveType">
            <summary>
            ÁìÈ¡·½Ê½ 0 µêÆÌÊ×Ò³ 1 »ý·Ö¶Ò»» 2 Ö÷¶¯·¢·Å
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.NeedIntegral">
            <summary>
            ËùÐè»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.EndIntegralExchange">
            <summary>
            ¶Ò»»½ØÖ¹Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.IntegralCover">
            <summary>
            »ý·ÖÉÌ³Ç·âÃæ
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.IsSyncWeiXin">
            <summary>
            ÊÇ·ñÍ¬²½µ½Î¢ÐÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.WXAuditStatus">
            <summary>
            Î¢ÐÅ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.CardLogId">
            <summary>
            Î¢ÐÅ¿¨È¯¼ÇÂ¼ºÅ ÓëÎ¢ÐÅ¿¨È¯¼ÇÂ¼¹ØÁª
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.UseArea">
            <summary>
            Ê¹ÓÃ·¶Î§£º0=È«³¡Í¨ÓÃ£¬1=²¿·ÖÉÌÆ·¿ÉÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="T:Himall.Entities.CouponInfo.CouponReceiveType">
            <summary>
            领取方式
            </summary>
        </member>
        <member name="F:Himall.Entities.CouponInfo.CouponReceiveType.ShopIndex">
            <summary>
            店铺首页
            </summary>
        </member>
        <member name="F:Himall.Entities.CouponInfo.CouponReceiveType.IntegralExchange">
            <summary>
            积分兑换
            </summary>
        </member>
        <member name="F:Himall.Entities.CouponInfo.CouponReceiveType.DirectHair">
            <summary>
            主动发放
            </summary>
        </member>
        <member name="T:Himall.Entities.CouponInfo.CouponReceiveStatus">
            <summary>
            领取状态
            </summary>
        </member>
        <member name="F:Himall.Entities.CouponInfo.CouponReceiveStatus.HasExpired">
            <summary>
            已过期
            </summary>
        </member>
        <member name="F:Himall.Entities.CouponInfo.CouponReceiveStatus.HasLimitOver">
            <summary>
            已超额
            <para>达个人领取上限</para>
            </summary>
        </member>
        <member name="F:Himall.Entities.CouponInfo.CouponReceiveStatus.HasReceiveOver">
            <summary>
            已领完
            <para>优惠券已领完</para>
            </summary>
        </member>
        <member name="F:Himall.Entities.CouponInfo.CouponReceiveStatus.IntegralLess">
            <summary>
            积分不足
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.WXCardInfo">
            <summary>
            微信关联信息
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.FormIsSyncWeiXin">
            <summary>
            是否同步微信
            <para>仅限表单使用</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.CanVshopIndex">
            <summary>
            是否可以发布到微店首页
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.CouponProductInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponInfo.CouponSettingInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Himall.Entities.CouponProductInfo">
            <summary>
            Himall_CouponProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponProductInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponProductInfo.CouponId">
            <summary>
            CouponId
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponProductInfo.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="T:Himall.Entities.CouponRecordInfo">
            <summary>
            Himall_CouponRecord
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.CouponId">
            <summary>
            CouponId
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.CounponSN">
            <summary>
            ÓÅ»ÝÈ¯µÄSN±êÊ¾
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.CounponTime">
            <summary>
            CounponTime
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.UserName">
            <summary>
            ÓÃ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.UsedTime">
            <summary>
            UsedTime
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.OrderId">
            <summary>
            Ê¹ÓÃµÄ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.ShopName">
            <summary>
            ShopName
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.CounponStatus">
            <summary>
            ÓÅ»ÝÈ¯×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.WXCodeId">
            <summary>
            Î¢ÐÅCode¼ÇÂ¼ºÅ ÓëÎ¢ÐÅ¿¨È¯Í¶·Å¼ÇÂ¼¹ØÁª
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.WXCardCodeInfo">
            <summary>
            卡券关联信息
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecordInfo.CouponInfo">
            <summary>
            CouponId == Id 
            </summary>
        </member>
        <member name="T:Himall.Entities.CouponSendByRegisterInfo">
            <summary>
            Himall_CouponSendByRegister
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSendByRegisterInfo.Id">
            <summary>
            Ö÷¼üID
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSendByRegisterInfo.Status">
            <summary>
            0¡¢¹Ø±Õ£»1¡¢¿ªÆô
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSendByRegisterInfo.Link">
            <summary>
            Link
            </summary>
        </member>
        <member name="T:Himall.Entities.CouponSendByRegisterDetailedInfo">
            <summary>
            Himall_CouponSendByRegisterDetailed
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSendByRegisterDetailedInfo.Id">
            <summary>
            Ö÷¼üID
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSendByRegisterDetailedInfo.CouponRegisterId">
            <summary>
            ×¢²á»î¶¯ID
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSendByRegisterDetailedInfo.CouponId">
            <summary>
            ÓÅ»ÝÈ¯ID
            </summary>
        </member>
        <member name="T:Himall.Entities.CouponSettingInfo">
            <summary>
            Himall_CouponSetting
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSettingInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSettingInfo.PlatForm">
            <summary>
            ÓÅ»ÝÈ¯µÄ·¢ÐÐÆ½Ì¨
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSettingInfo.CouponID">
            <summary>
            CouponID
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponSettingInfo.Display">
            <summary>
            ÊÇ·ñÏÔÊ¾
            </summary>
        </member>
        <member name="T:Himall.Entities.CustomerServiceInfo">
            <summary>
            Himall_CustomerService
            </summary>
        </member>
        <member name="P:Himall.Entities.CustomerServiceInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.CustomerServiceInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.CustomerServiceInfo.Tool">
            <summary>
            ¹¤¾ßÀàÐÍ£¨QQ¡¢ÍúÍú£©
            </summary>
        </member>
        <member name="P:Himall.Entities.CustomerServiceInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Himall.Entities.CustomerServiceInfo.Name">
            <summary>
            ¿Í·þÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.CustomerServiceInfo.AccountCode">
            <summary>
            Í¨ÐÅÕËºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.CustomerServiceInfo.TerminalType">
            <summary>
            ÖÕ¶ËÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.CustomerServiceInfo.ServerStatus">
            <summary>
            ¿Í·þ×´Ì¬
            </summary>
        </member>
        <member name="T:Himall.Entities.CustomerServiceInfo.ServiceTool">
            <summary>
            客服工具
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceTool.QQ">
            <summary>
            QQ
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceTool.Wangwang">
            <summary>
            旺旺
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceTool.MeiQia">
            <summary>
            美洽
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceType.PreSale">
            <summary>
            售前
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceType.AfterSale">
            <summary>
            售后
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceTerminalType.PC">
            <summary>
            PC
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceTerminalType.Mobile">
            <summary>
            Mobile
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceTerminalType.All">
            <summary>
            ALL （主平台客服使用）
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceStatusType.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="F:Himall.Entities.CustomerServiceInfo.ServiceStatusType.Open">
            <summary>
            开启
            </summary>
        </member>
        <member name="T:Himall.Entities.DistributionBrokerageInfo">
            <summary>
            Himall_DistributionBrokerage
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.Id">
            <summary>
            Á÷Ë®ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.OrderId">
            <summary>
            ¶©µ¥±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.OrderItemId">
            <summary>
            ¶©µ¥Ïî±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.ProductId">
            <summary>
            ÉÌÆ·±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.MemberId">
            <summary>
            ÏÂµ¥»áÔ±
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.ShopId">
            <summary>
            µêÆÌ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.Quantity">
            <summary>
            ¹ºÂòÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.RealPayAmount">
            <summary>
            Êµ¸¶½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.BrokerageStatus">
            <summary>
            Ó¶½ð×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.OrderDate">
            <summary>
            ÏÂµ¥Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.SettlementTime">
            <summary>
            ½áËãÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.SuperiorId1">
            <summary>
            Ò»¼¶·ÖÏúÔ±
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.BrokerageRate1">
            <summary>
            Ò»¼¶·ÖÓ¶±È
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.SuperiorId2">
            <summary>
            ¶þ¼¶·ÖÏúÔ±
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.BrokerageRate2">
            <summary>
            ¶þ¼¶·ÖÓ¶±È
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.SuperiorId3">
            <summary>
            Èý¼¶·ÖÏúÔ±
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionBrokerageInfo.BrokerageRate3">
            <summary>
            Èý¼¶·ÖÓ¶±È
            </summary>
        </member>
        <member name="T:Himall.Entities.DistributionProductInfo">
            <summary>
            Himall_DistributionProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.ProductId">
            <summary>
            ÉÌÆ·±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.ShopId">
            <summary>
            µêÆÌ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.ProductStatus">
            <summary>
            ÉÌÆ··ÖÏú×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.BrokerageRate1">
            <summary>
            Ò»¼¶·ÖÓ¶±È
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.BrokerageRate2">
            <summary>
            ¶þ¼¶·ÖÓ¶±È
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.BrokerageRate3">
            <summary>
            Èý¼¶·ÖÓ¶±È
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.SaleCount">
            <summary>
            ³É½»¼þÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.SaleAmount">
            <summary>
            ³É½»½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.SettlementAmount">
            <summary>
            ÒÑ½áËã½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionProductInfo.AddDate">
            <summary>
            Ìí¼ÓÍÆ¹ãÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.DistributionRankingInfo">
            <summary>
            Himall_DistributionRanking
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingInfo.BatchId">
            <summary>
            BatchId
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingInfo.MemberId">
            <summary>
            ÏúÊÛÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingInfo.Quantity">
            <summary>
            ³É½»ÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingInfo.Amount">
            <summary>
            ³É½»½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingInfo.Settlement">
            <summary>
            ÒÑ½áËã½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingInfo.NoSettlement">
            <summary>
            Î´½áËã½ð¶î
            </summary>
        </member>
        <member name="T:Himall.Entities.DistributionRankingBatchInfo">
            <summary>
            Himall_DistributionRankingBatch
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingBatchInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingBatchInfo.BeginTime">
            <summary>
            ¿ªÊ¼Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingBatchInfo.EndTime">
            <summary>
            ½ØÖ¹Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionRankingBatchInfo.CreateTime">
            <summary>
            ´´½¨Ê±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.DistributionShopRateConfigInfo">
            <summary>
            Himall_DistributionShopRateConfig
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionShopRateConfigInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionShopRateConfigInfo.ShopId">
            <summary>
            µêÆÌ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionShopRateConfigInfo.BrokerageRate1">
            <summary>
            Ò»¼¶·ÖÓ¶±È
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionShopRateConfigInfo.BrokerageRate2">
            <summary>
            ¶þ¼¶·ÖÓ¶±È
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionShopRateConfigInfo.BrokerageRate3">
            <summary>
            Èý¼¶·ÖÓ¶±È
            </summary>
        </member>
        <member name="T:Himall.Entities.DistributionWithdrawInfo">
            <summary>
            Himall_DistributionWithdraw
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.Id">
            <summary>
            Á÷Ë®ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.MemberId">
            <summary>
            »áÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.WithdrawName">
            <summary>
            ÌáÏÖÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.WithdrawAccount">
            <summary>
            ÌáÏÖÕËºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.WithdrawStatus">
            <summary>
            ÌáÏÖ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.Amount">
            <summary>
            ÌáÏÖ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.ApplyTime">
            <summary>
            ÉêÇëÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.ConfirmTime">
            <summary>
            ´¦ÀíÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.PayTime">
            <summary>
            ¸¶¿îÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.PayNo">
            <summary>
            ¸¶¿îÁ÷Ë®ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.Operator">
            <summary>
            ²Ù×÷ÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.Remark">
            <summary>
            ±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.WithdrawType">
            <summary>
            ÌáÏÖ·½Ê½
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributionWithdrawInfo.Poundage">
            <summary>
            ÊÖÐø·Ñ
            </summary>
        </member>
        <member name="T:Himall.Entities.DistributorInfo">
            <summary>
            Himall_Distributor
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.MemberId">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.SuperiorId">
            <summary>
            ÉÏ¼¶±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.GradeId">
            <summary>
            ËùÊôµÈ¼¶
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.OrderCount">
            <summary>
            ·ÖÏú¶©µ¥Êý
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.ShopName">
            <summary>
            Ð¡µêÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.ShopLogo">
            <summary>
            Ð¡µêÍ¼±ê
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.IsShowShopLogo">
            <summary>
            ÊÇ·ñÕ¹Ê¾Ð¡µêlogo
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.DistributionStatus">
            <summary>
            ÉóºË×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.ApplyTime">
            <summary>
            ÉêÇëÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.PassTime">
            <summary>
            Í¨¹ýÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.Remark">
            <summary>
            ±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.SubNumber">
            <summary>
            Ö±½ÓÏÂ¼¶Êý
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.Balance">
            <summary>
            Óà¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.SettlementAmount">
            <summary>
            ×Ü½áËãÊÕÈë
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.FreezeAmount">
            <summary>
            ¶³½á½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.WithdrawalsAmount">
            <summary>
            ÒÑÌáÏÖ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.ProductCount">
            <summary>
            ·ÖÏú³É½»ÉÌÆ·Êý
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.SaleAmount">
            <summary>
            ·ÖÏú³É½»½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.SubProductCount">
            <summary>
            ÏÂ¼¶·ÖÏú³É½»ÉÌÆ·Êý
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.SubSaleAmount">
            <summary>
            ÏÂ¼¶·ÖÏú³É½»½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.NoSettlementAmount">
            <summary>
            未结算金额(按需查询)
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.MemberName">
            <summary>
            用户名(后补)
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.SuperiorMemberName">
            <summary>
            上级用户名(后补)
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.GradeName">
            <summary>
            等级名称(后补)
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.SubNumber2">
            <summary>
            二级下级数(后补)
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.SubNumber3">
            <summary>
            三级下级数(后补)
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.RegDate">
            <summary>
            注册时间
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.ShowRegDate">
            <summary>
            注册时间
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.IsOnlyMember">
            <summary>
            是否仅为普通会员
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorInfo.IsNormalDistributor">
            <summary>
            是否为正常销售员
            </summary>
        </member>
        <member name="T:Himall.Entities.DistributorGradeInfo">
            <summary>
            Himall_DistributorGrade
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorGradeInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorGradeInfo.GradeName">
            <summary>
            Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorGradeInfo.Quota">
            <summary>
            Ìõ¼þ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorGradeInfo.MemberCount">
            <summary>
            销售员人数(后补)
            </summary>
        </member>
        <member name="T:Himall.Entities.DistributorRecordInfo">
            <summary>
            Himall_DistributorRecord
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorRecordInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorRecordInfo.MemberId">
            <summary>
            ·ÖÏúÔ±
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorRecordInfo.Type">
            <summary>
            Á÷Ë®ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorRecordInfo.Amount">
            <summary>
            ±ä¸ü½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorRecordInfo.Balance">
            <summary>
            ±ä¸üºóÓà¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorRecordInfo.CreateTime">
            <summary>
            ´´½¨Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.DistributorRecordInfo.Remark">
            <summary>
            ±¸×¢
            </summary>
        </member>
        <member name="T:Himall.Entities.ExpressElementInfo">
            <summary>
            Himall_ExpressElement
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressElementInfo.Id">
            <summary>
            Ö÷¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressElementInfo.ExpressId">
            <summary>
            ¿ìµÝ¹«Ë¾ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressElementInfo.ElementType">
            <summary>
            ÔªËØÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressElementInfo.LeftTopPointX">
            <summary>
            Ãæµ¥ÔªËØX×ø±ê1
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressElementInfo.LeftTopPointY">
            <summary>
            Ãæµ¥ÔªËØY×ø±ê1
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressElementInfo.RightBottomPointX">
            <summary>
            Ãæµ¥ÔªËØX×ø±ê2
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressElementInfo.RightBottomPointY">
            <summary>
            Ãæµ¥ÔªËØY×ø±ê2
            </summary>
        </member>
        <member name="T:Himall.Entities.ExpressInfoInfo">
            <summary>
            Himall_ExpressInfo
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.Id">
            <summary>
            Ö÷¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.Name">
            <summary>
            ¿ìµÝÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.TaobaoCode">
            <summary>
            ÌÔ±¦±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.Kuaidi100Code">
            <summary>
            ¿ìµÝ100¶ÔÓ¦ÎïÁ÷±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.KuaidiNiaoCode">
            <summary>
            ¿ìµÝÄñÎïÁ÷¹«Ë¾±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.Width">
            <summary>
            ¿ìµÝÃæµ¥¿í¶È
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.Height">
            <summary>
            ¿ìµÝÃæµ¥¸ß¶È
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.Logo">
            <summary>
            ¿ìµÝ¹«Ë¾logo
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.BackGroundImage">
            <summary>
            ¿ìµÝ¹«Ë¾Ãæµ¥±³¾°Í¼Æ¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.Status">
            <summary>
            ¿ìµÝ¹«Ë¾×´Ì¬£¨0£ºÕý³££¬1£ºÉ¾³ý£©
            </summary>
        </member>
        <member name="P:Himall.Entities.ExpressInfoInfo.CreateDate">
            <summary>
            ´´½¨ÈÕÆÚ
            </summary>
        </member>
        <member name="M:Himall.Entities.ExpressInfoInfo.CheckExpressCodeIsValid(System.String)">
            <summary>
            是否为数字
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Himall.Entities.ExpressInfoInfo.NextExpressCode(System.String,System.String)">
            <summary>
            生成快递单号
            </summary>
            <param name="expressName"></param>
            <param name="currentExpressCode"></param>
            <returns></returns>
        </member>
        <member name="M:Himall.Entities.ExpressInfoInfo.DefaultNextCode(System.String)">
            <summary>
            默认快递单号生成
            </summary>
            <param name="currentExpressCode"></param>
            <returns></returns>
        </member>
        <member name="M:Himall.Entities.ExpressInfoInfo.ZJS_NextExpressCode(System.String)">
            <summary>
            宅急送
            </summary>
            <param name="currentExpressCode"></param>
            <returns></returns>
        </member>
        <member name="M:Himall.Entities.ExpressInfoInfo.EMSNextCode(System.String)">
            <summary>
            EMS快递单号生成，最少9位
            </summary>
            <param name="currentExpressCode"></param>
            <returns></returns>
        </member>
        <member name="M:Himall.Entities.ExpressInfoInfo.SFNextCode(System.String)">
            <summary>
            顺丰快递单号生成，最少12位
            </summary>
            <param name="currentExpressCode"></param>
            <returns></returns>
        </member>
        <member name="T:Himall.Entities.FavoriteInfo">
            <summary>
            Himall_Favorite
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteInfo.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteInfo.Tags">
            <summary>
            ·ÖÀà±êÇ©
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteInfo.Date">
            <summary>
            ÊÕ²ØÈÕÆÚ
            </summary>
        </member>
        <member name="T:Himall.Entities.FavoriteShopInfo">
            <summary>
            Himall_FavoriteShop
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteShopInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteShopInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteShopInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteShopInfo.Tags">
            <summary>
            ·ÖÀà±êÇ©
            </summary>
        </member>
        <member name="P:Himall.Entities.FavoriteShopInfo.Date">
            <summary>
            ÊÕ²ØÈÕÆÚ
            </summary>
        </member>
        <member name="T:Himall.Entities.FightGroupInfo">
            <summary>
            Himall_FightGroup
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.HeadUserId">
            <summary>
            ÍÅ³¤ÓÃ»§±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.ActiveId">
            <summary>
            ¶ÔÓ¦»î¶¯
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.LimitedNumber">
            <summary>
            ²ÎÍÅÈËÊýÏÞÖÆ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.LimitedHour">
            <summary>
            Ê±¼äÏÞÖÆ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.JoinedNumber">
            <summary>
            ÒÑ²ÎÍÅÈËÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.IsException">
            <summary>
            ÊÇ·ñÒì³£
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.GroupStatus">
            <summary>
            Êý¾Ý×´Ì¬ ³õÊ¼ÖÐ  ³ÉÍÅÖÐ  ³É¹¦   Ê§°Ü
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.AddGroupTime">
            <summary>
            ¿ªÍÅÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.OverTime">
            <summary>
            ½áÊøÊ±¼ä ³É¹¦»òÊ§°ÜµÄÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.ProductId">
            <summary>
            ÉÌÆ·±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.ShopId">
            <summary>
            µêÆÌ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.ShopName">
            <summary>
            店铺名称
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.ProductName">
             <summary>
             商品名称
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.ProductImgPath">
            <summary>
            商品图片目录
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.ProductDefaultImage">
            <summary>
            商品默认图片
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.HeadUserName">
            <summary>
            团长用户名
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.HeadUserIcon">
            <summary>
            团长头像
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.ShowHeadUserIcon">
            <summary>
            团长头像显示
            <para>默认头像值补充</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.BuildStatus">
             <summary>
             数据状态 成团中  成功   失败
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.GroupOrders">
            <summary>
            拼团订单集
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupInfo.Seconds">
            <summary>
            团组时限（秒）
            </summary>
        </member>
        <member name="T:Himall.Entities.FightGroupActiveInfo">
            <summary>
            Himall_FightGroupActive
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ShopId">
            <summary>
            µêÆÌ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ProductId">
            <summary>
            ÉÌÆ·±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ProductName">
            <summary>
            ÉÌÆ·Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.IconUrl">
            <summary>
            Í¼Æ¬
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.StartTime">
            <summary>
            ¿ªÊ¼Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.EndTime">
            <summary>
            ½áÊøÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.LimitedNumber">
            <summary>
            ²ÎÍÅÈËÊýÏÞÖÆ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.LimitedHour">
            <summary>
            ³ÉÍÅÊ±ÏÞ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.LimitQuantity">
            <summary>
            ÊýÁ¿ÏÞÖÆ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.GroupCount">
            <summary>
            ³ÉÍÅÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.OkGroupCount">
            <summary>
            ³É¹¦³ÉÍÅÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.AddTime">
            <summary>
            »î¶¯Ìí¼ÓÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ManageAuditStatus">
            <summary>
            Æ½Ì¨²Ù×÷×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ManageRemark">
            <summary>
            Æ½Ì¨²Ù×÷ËµÃ÷
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ManageDate">
            <summary>
            Æ½Ì¨²Ù×÷Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ManagerId">
            <summary>
            Æ½Ì¨²Ù×÷ÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ActiveTimeStatus">
            <summary>
            »î¶¯µ±Ç°×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ShopName">
            <summary>
            店铺名
            <para>手动补充</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ProductImgPath">
            <summary>
            商品图片地址
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ActiveStatus">
            <summary>
            拼团活动状态
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ActiveItems">
            <summary>
            活动项
            <para>手动维护</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.MiniGroupPrice">
            <summary>
            火拼价
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.MiniSalePrice">
            <summary>
            最低售价
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.FreightTemplateId">
            <summary>
            运费模板
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ProductShortDescription">
            <summary>
            商品广告语
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ProductCommentNumber">
            <summary>
            商品评价数
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.ProductCode">
            <summary>
            商品编码
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.MeasureUnit">
            <summary>
            商品单位
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.CanBuy">
            <summary>
            商品是否可购买
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.HasStock">
            <summary>
            商品是否还有库存
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.FightGroupManageAuditStatus">
            <summary>
            管理审核状态
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveInfo.VideoPath">
            <summary>
            主图视频
            </summary>
        </member>
        <member name="T:Himall.Entities.FightGroupActiveItemInfo">
            <summary>
            Himall_FightGroupActiveItem
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.ActiveId">
            <summary>
            ËùÊô»î¶¯
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.ProductId">
            <summary>
            ÉÌÆ·±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.SkuId">
            <summary>
            ÉÌÆ·SKU
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.ActivePrice">
            <summary>
            »î¶¯ÊÛ¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.ActiveStock">
            <summary>
            »î¶¯¿â´æ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.BuyCount">
            <summary>
            ÒÑÊÛ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.SkuName">
            <summary>
            规格名称
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.ProductPrice">
            <summary>
            商品售价
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.ProductCostPrice">
            <summary>
            商品成本价
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.ProductStock">
             <summary>
             已售
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.Size">
            <summary>
            尺码
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupActiveItemInfo.ShowPic">
            <summary>
            显示图片
            <para>颜色独有</para>
            </summary>
        </member>
        <member name="T:Himall.Entities.FightGroupOrderInfo">
            <summary>
            Himall_FightGroupOrder
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.ActiveId">
            <summary>
            ¶ÔÓ¦»î¶¯
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.ProductId">
            <summary>
            ¶ÔÓ¦ÉÌÆ·
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.SkuId">
            <summary>
            ÉÌÆ·SKU
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.GroupId">
            <summary>
            ËùÊôÆ´ÍÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.OrderId">
            <summary>
            ¶©µ¥Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.OrderUserId">
            <summary>
            ¶©µ¥ÓÃ»§±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.IsFirstOrder">
            <summary>
            ÊÇ·ñÍÅÊ×¶©µ¥
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.JoinTime">
            <summary>
            ²ÎÍÅÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.JoinStatus">
            <summary>
            ²ÎÍÅ×´Ì¬ ²ÎÍÅÖÐ  ³É¹¦  Ê§°Ü
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.OverTime">
            <summary>
            ½áÊøÊ±¼ä ³É¹¦»òÊ§°ÜµÄÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.Quantity">
            <summary>
            ¹ºÂòÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.SalePrice">
            <summary>
            ÏúÊÛ¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.Photo">
            <summary>
            用户头像
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.UserName">
            <summary>
            订单用户名
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.GroupStatus">
            <summary>
            组团状态
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.LimitedNumber">
            <summary>
            参团人数限制
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.LimitedHour">
            <summary>
            时间限制
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.JoinedNumber">
            <summary>
            已参团人数
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.AddGroupTime">
            <summary>
            参团时间
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.ProductName">
            <summary>
            商品名称
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.IconUrl">
            <summary>
            商品图片
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.thumbs">
            <summary>
            分享商品图片
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.MiniGroupPrice">
            <summary>
            火拼价格
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.UserInfo">
            <summary>
            已团成功用户
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.HeadUserName">
            <summary>
            团长姓名
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.HeadUserIcon">
            <summary>
            团长头像
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.ShowHeadUserIcon">
            <summary>
            团长头像显示（默认头像值补充）
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.Seconds">
            <summary>
            团组时限（秒）
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.GetJoinStatus">
            <summary>
            参团状态
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.CanRefund">
            <summary>
            是否可以退款
            </summary>
        </member>
        <member name="P:Himall.Entities.FightGroupOrderInfo.CanSendGood">
            <summary>
            是否可以发货
            </summary>
        </member>
        <member name="T:Himall.Entities.FlashSaleInfo">
            <summary>
            Himall_FlashSale
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.Status">
            <summary>
            ´ýÉóºË,½øÐÐÖÐ,ÒÑ½áÊø,ÉóºËÎ´Í¨¹ý,¹ÜÀíÔ±È¡Ïû
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.BeginDate">
            <summary>
            »î¶¯¿ªÊ¼ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.EndDate">
            <summary>
            »î¶¯½áÊøÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.LimitCountOfThePeople">
            <summary>
            ÏÞÖÆÃ¿ÈË¹ºÂòµÄÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.SaleCount">
            <summary>
            ½ö½öÖ»¼ÆËãÔÚÏÞÊ±¹ºÀïµÄÏúÊÛÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.CategoryName">
            <summary>
            CategoryName
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.ImagePath">
            <summary>
            ImagePath
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleInfo.MinPrice">
            <summary>
            MinPrice
            </summary>
        </member>
        <member name="T:Himall.Entities.FlashSaleInfo.FlashSaleStatus">
            <summary>
            限时购状态
            </summary>
        </member>
        <member name="F:Himall.Entities.FlashSaleInfo.FlashSaleStatus.WaitForAuditing">
            <summary>
            等待审核
            </summary>
        </member>
        <member name="F:Himall.Entities.FlashSaleInfo.FlashSaleStatus.Ongoing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Himall.Entities.FlashSaleInfo.FlashSaleStatus.AuditFailed">
            <summary>
            未通过(审核失败)
            </summary>
        </member>
        <member name="F:Himall.Entities.FlashSaleInfo.FlashSaleStatus.Ended">
            <summary>
            已结束
            </summary>
        </member>
        <member name="F:Himall.Entities.FlashSaleInfo.FlashSaleStatus.Cancelled">
            <summary>
            已取消
            </summary>
        </member>
        <member name="T:Himall.Entities.FlashSaleConfigInfo">
            <summary>
            Himall_FlashSaleConfig
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleConfigInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleConfigInfo.Preheat">
            <summary>
            Ô¤ÈÈÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleConfigInfo.IsNormalPurchase">
            <summary>
            ÊÇ·ñÔÊÐíÕý³£¹ºÂò
            </summary>
        </member>
        <member name="T:Himall.Entities.FlashSaleDetailInfo">
            <summary>
            Himall_FlashSaleDetail
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleDetailInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleDetailInfo.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleDetailInfo.SkuId">
            <summary>
            SkuId
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleDetailInfo.Price">
            <summary>
            ÏÞÊ±¹ºÊ±½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleDetailInfo.TotalCount">
            <summary>
            »î¶¯¿â´æ
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleDetailInfo.FlashSaleId">
            <summary>
            ¶ÔÓ¦FlashSale±íÖ÷¼ü
            </summary>
        </member>
        <member name="T:Himall.Entities.FlashSaleRemindInfo">
            <summary>
            Himall_FlashSaleRemind
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleRemindInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleRemindInfo.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleRemindInfo.RecordDate">
            <summary>
            RecordDate
            </summary>
        </member>
        <member name="P:Himall.Entities.FlashSaleRemindInfo.FlashSaleId">
            <summary>
            FlashSaleId
            </summary>
        </member>
        <member name="T:Himall.Entities.FloorBrandInfo">
            <summary>
            Himall_FloorBrand
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorBrandInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorBrandInfo.FloorId">
            <summary>
            Â¥²ãID
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorBrandInfo.BrandId">
            <summary>
            Æ·ÅÆID
            </summary>
        </member>
        <member name="T:Himall.Entities.FloorCategoryInfo">
            <summary>
            Himall_FloorCategory
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorCategoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorCategoryInfo.FloorId">
            <summary>
            FloorId
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorCategoryInfo.CategoryId">
            <summary>
            CategoryId
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorCategoryInfo.Depth">
            <summary>
            Depth
            </summary>
        </member>
        <member name="T:Himall.Entities.FloorProductInfo">
            <summary>
            Himall_FloorProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorProductInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorProductInfo.FloorId">
            <summary>
            Â¥²ãID
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorProductInfo.Tab">
            <summary>
            Â¥²ã±êÇ©
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorProductInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="T:Himall.Entities.FloorTablInfo">
            <summary>
            Himall_FloorTabl
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTablInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTablInfo.FloorId">
            <summary>
            Â¥²ãID
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTablInfo.Name">
            <summary>
            Â¥²ãÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTablInfo.FloorTablDetailInfo">
            <summary>
            Id == TabId 
            </summary>
        </member>
        <member name="T:Himall.Entities.FloorTablDetailInfo">
            <summary>
            Himall_FloorTablDetail
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTablDetailInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTablDetailInfo.TabId">
            <summary>
            TabID
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTablDetailInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="T:Himall.Entities.FloorTopicInfo">
            <summary>
            Himall_FloorTopic
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTopicInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTopicInfo.FloorId">
            <summary>
            Â¥²ãID
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTopicInfo.TopicType">
            <summary>
            ×¨ÌâÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTopicInfo.TopicImage">
            <summary>
            ×¨Ìâ·âÃæÍ¼Æ¬
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTopicInfo.TopicName">
            <summary>
            ×¨ÌâÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.FloorTopicInfo.Url">
            <summary>
            ×¨ÌâÌø×ªURL
            </summary>
        </member>
        <member name="T:Himall.Entities.FreightAreaContentInfo">
            <summary>
            Himall_FreightAreaContent
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaContentInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaContentInfo.FreightTemplateId">
            <summary>
            ÔË·ÑÄ£°åID
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaContentInfo.AreaContent">
            <summary>
            µØÇøÑ¡Ôñ
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaContentInfo.FirstUnit">
            <summary>
            Ê×±Êµ¥Ôª¼ÆÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaContentInfo.FirstUnitMonry">
            <summary>
            Ê×±Êµ¥Ôª·ÑÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaContentInfo.AccumulationUnit">
            <summary>
            µÝÔöµ¥Ôª¼ÆÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaContentInfo.AccumulationUnitMoney">
            <summary>
            µÝÔöµ¥Ôª·ÑÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaContentInfo.IsDefault">
            <summary>
            ÊÇ·ñÎªÄ¬ÈÏ
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaContentInfo.FreightAreaDetailInfo">
            <summary>
            Id == FreightAreaId 
            </summary>
        </member>
        <member name="T:Himall.Entities.FreightAreaDetailInfo">
            <summary>
            Himall_FreightAreaDetail
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaDetailInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaDetailInfo.FreightTemplateId">
            <summary>
            ÔË·ÑÄ£°åID
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaDetailInfo.FreightAreaId">
            <summary>
            Ä£°åµØÇøId
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaDetailInfo.ProvinceId">
            <summary>
            Ê¡·ÝID
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaDetailInfo.CityId">
            <summary>
            ³ÇÊÐID
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaDetailInfo.CountyId">
            <summary>
            ÇøID
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightAreaDetailInfo.TownIds">
            <summary>
            ÏçÕòµÄIDÓÃ¶ººÅ¸ô¿ª
            </summary>
        </member>
        <member name="T:Himall.Entities.FreightTemplateInfo">
            <summary>
            Himall_FreightTemplate
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.Name">
            <summary>
            ÔË·ÑÄ£°åÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.SourceAddress">
            <summary>
            ±¦±´·¢»õµØ
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.SendTime">
            <summary>
            ·¢ËÍÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.IsFree">
            <summary>
            ÊÇ·ñÉÌ¼Ò¸ºÔðÔË·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.ValuationMethod">
            <summary>
            ¶¨¼Û·½·¨(°´Ìå»ý¡¢ÖØÁ¿¼ÆËã£©
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.ShippingMethod">
            <summary>
            ÔËËÍÀàÐÍ£¨ÎïÁ÷¡¢¿ìµÝ£©
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.ShopID">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.DepotAddress">
            <summary>
            仓库地址
            <para>手动补充</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.GetSendTime">
            <summary>
            获取发货时间
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.FreightAreaContentInfo">
            <summary>
            Id == FreightTemplateId 
            </summary>
        </member>
        <member name="P:Himall.Entities.FreightTemplateInfo.ShippingFreeGroupInfo">
            <summary>
            Id == TemplateId 
            </summary>
        </member>
        <member name="T:Himall.Entities.FullDiscountRuleInfo">
            <summary>
            Himall_FullDiscountRule
            </summary>
        </member>
        <member name="P:Himall.Entities.FullDiscountRuleInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FullDiscountRuleInfo.ActiveId">
            <summary>
            »î¶¯±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.FullDiscountRuleInfo.Quota">
            <summary>
            Ìõ¼þ
            </summary>
        </member>
        <member name="P:Himall.Entities.FullDiscountRuleInfo.Discount">
            <summary>
            ÓÅ»Ý
            </summary>
        </member>
        <member name="T:Himall.Entities.GiftInfo">
            <summary>
            Himall_Gift
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.GiftName">
            <summary>
            Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.NeedIntegral">
            <summary>
            ÐèÒª»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.LimtQuantity">
            <summary>
            ÏÞÖÆ¶Ò»»ÊýÁ¿ 0±íÊ¾²»ÏÞ¶Ò»»ÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.StockQuantity">
            <summary>
            ¿â´æÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.EndDate">
            <summary>
            ¶Ò»»½áÊøÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.NeedGrade">
            <summary>
            µÈ¼¶ÒªÇó 0±íÊ¾²»ÏÞ¶¨
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.VirtualSales">
            <summary>
            ÐéÄâÏúÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.RealSales">
            <summary>
            Êµ¼ÊÏúÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.SalesStatus">
            <summary>
            ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.ImagePath">
            <summary>
            Í¼Æ¬´æ·ÅµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.Sequence">
            <summary>
            Ë³Ðò Ä¬ÈÏ100 Êý×ÖÔ½Ð¡Ô½¿¿Ç°
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.GiftValue">
            <summary>
            ÀñÆ·¼ÛÖµ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.Description">
            <summary>
            ÃèÊö
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.AddDate">
            <summary>
            Ìí¼ÓÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.GiftInfo.GiftSalesStatus">
            <summary>
            礼品销售状态
            </summary>
        </member>
        <member name="F:Himall.Entities.GiftInfo.GiftSalesStatus.IsDelete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Himall.Entities.GiftInfo.GiftSalesStatus.OffShelves">
            <summary>
            下架
            </summary>
        </member>
        <member name="F:Himall.Entities.GiftInfo.GiftSalesStatus.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:Himall.Entities.GiftInfo.GiftSalesStatus.HasExpired">
            <summary>
            过期
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.NeedGradeName">
            <summary>
            等级需求
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.GradeIntegral">
            <summary>
            等级积分要求
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.DefaultShowImage">
            <summary>
            礼品默认显示图片
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.SumSales">
            <summary>
            销量总数
            <para>实际销量+虚拟销量</para>
            </summary>
        </member>
        <member name="M:Himall.Entities.GiftInfo.GetImage(Himall.CommonModel.ImageSize,System.Int32)">
            <summary>
            获取图片地址
            </summary>
            <param name="imageIndex">图片序号</param>
            <param name="imageSize">图片尺寸</param>
            <returns></returns>
        </member>
        <member name="P:Himall.Entities.GiftInfo.ShowImagePath">
            <summary>
            图片路径
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.GetSalesStatus">
            <summary>
            获取当前销售状态
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftInfo.ShowLimtQuantity">
            <summary>
            显示限兑数量
            </summary>
        </member>
        <member name="T:Himall.Entities.GiftOrderInfo">
            <summary>
            Himall_GiftOrder
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.OrderStatus">
            <summary>
            ¶©µ¥×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.UserId">
            <summary>
            ÓÃ»§±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.UserRemark">
            <summary>
            »áÔ±ÁôÑÔ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.ShipTo">
            <summary>
            ÊÕ»õÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.CellPhone">
            <summary>
            ÊÕ»õÈËµç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.TopRegionId">
            <summary>
            Ò»¼¶µØÇø
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.RegionId">
            <summary>
            µØÇø±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.RegionFullName">
            <summary>
            µØÇøÈ«³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.Address">
            <summary>
            µØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.ExpressCompanyName">
            <summary>
            ¿ìµÝ¹«Ë¾
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.ShipOrderNumber">
            <summary>
            ¿ìµÝµ¥ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.ShippingDate">
            <summary>
            ·¢»õÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.OrderDate">
            <summary>
            ÏÂµ¥Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.FinishDate">
            <summary>
            Íê³ÉÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.TotalIntegral">
            <summary>
            »ý·Ö×Ü¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.CloseReason">
            <summary>
            ¹Ø±ÕÔ­Òò
            </summary>
        </member>
        <member name="T:Himall.Entities.GiftOrderInfo.GiftOrderStatus">
            <summary>
            订单状态GiftsOrderInfo
            </summary>
        </member>
        <member name="F:Himall.Entities.GiftOrderInfo.GiftOrderStatus.WaitDelivery">
            <summary>
            待发货
            </summary>
        </member>
        <member name="F:Himall.Entities.GiftOrderInfo.GiftOrderStatus.WaitReceiving">
            <summary>
            待收货
            </summary>
        </member>
        <member name="F:Himall.Entities.GiftOrderInfo.GiftOrderStatus.Finish">
            <summary>
            已完成
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.ShowOrderStatus">
            <summary>
            显示订单状态
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderInfo.ShowExpressCompanyName">
            <summary>
            物流公司名称显示
            </summary>
        </member>
        <member name="T:Himall.Entities.GiftOrderItemInfo">
            <summary>
            Himall_GiftOrderItem
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderItemInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderItemInfo.OrderId">
            <summary>
            ¶©µ¥±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderItemInfo.GiftId">
            <summary>
            ÀñÆ·±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderItemInfo.Quantity">
            <summary>
            ÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderItemInfo.SaleIntegral">
            <summary>
            »ý·Öµ¥¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderItemInfo.GiftName">
            <summary>
            ÀñÆ·Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderItemInfo.GiftValue">
            <summary>
            ÀñÆ·¼ÛÖµ
            </summary>
        </member>
        <member name="P:Himall.Entities.GiftOrderItemInfo.ImagePath">
            <summary>
            Í¼Æ¬´æ·ÅµØÖ·
            </summary>
        </member>
        <member name="T:Himall.Entities.HandSlideAdInfo">
            <summary>
            Himall_HandSlideAd
            </summary>
        </member>
        <member name="P:Himall.Entities.HandSlideAdInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.HandSlideAdInfo.ImageUrl">
            <summary>
            Í¼Æ¬URL
            </summary>
        </member>
        <member name="P:Himall.Entities.HandSlideAdInfo.Url">
            <summary>
            Í¼Æ¬Ìø×ªURL
            </summary>
        </member>
        <member name="P:Himall.Entities.HandSlideAdInfo.DisplaySequence">
            <summary>
            ÅÅÐò
            </summary>
        </member>
        <member name="T:Himall.Entities.HomeCategoryInfo">
            <summary>
            Himall_HomeCategory
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryInfo.RowId">
            <summary>
            ·ÖÀàËùÊôÐÐÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryInfo.CategoryId">
            <summary>
            ·ÖÀàID
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryInfo.Depth">
            <summary>
            ·ÖÀàÉî¶È(×îÉî3£©
            </summary>
        </member>
        <member name="T:Himall.Entities.HomeCategoryRowInfo">
            <summary>
            Himall_HomeCategoryRow
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryRowInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryRowInfo.RowId">
            <summary>
            ÐÐID
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryRowInfo.Image1">
            <summary>
            ËùÊôÐÐÍÆ¼öÍ¼Æ¬1
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryRowInfo.Url1">
            <summary>
            ËùÊôÐÐÍÆ¼öÍ¼Æ¬1µÄURL
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryRowInfo.Image2">
            <summary>
            ËùÊôÐÐÍÆ¼öÍ¼Æ¬2
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeCategoryRowInfo.Url2">
            <summary>
            ËùÊôÐÐÍÆ¼öÍ¼Æ¬2µÄURL
            </summary>
        </member>
        <member name="T:Himall.Entities.HomeFloorInfo">
            <summary>
            Himall_HomeFloor
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeFloorInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeFloorInfo.FloorName">
            <summary>
            Â¥²ãÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeFloorInfo.SubName">
            <summary>
            Â¥²ãÐ¡±êÌâ
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeFloorInfo.DisplaySequence">
            <summary>
            ÏÔÊ¾Ë³Ðò
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeFloorInfo.IsShow">
            <summary>
            ÊÇ·ñÏÔÊ¾µÄÊ×Ò³
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeFloorInfo.StyleLevel">
            <summary>
            Â¥²ãËùÊôÑùÊ½£¨Ä¿Ç°Ö§³Ö2Ì×£©
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeFloorInfo.DefaultTabName">
            <summary>
            Â¥²ãµÄÄ¬ÈÏtab±êÌâ
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeFloorInfo.CommodityStyle">
            <summary>
            ÉÌÆ·ÑùÊ½£¬0£ºÄ¬ÈÏ£¬1£ºÒ»ÅÅ5¸ö£¬2£ºÒ»ÅÅ4¸ö
            </summary>
        </member>
        <member name="P:Himall.Entities.HomeFloorInfo.DisplayMode">
            <summary>
            ÏÔÊ¾·½Ê½£¬0=Ä¬ÈÏ£¬1=Æ½ÆÌÕ¹Ê¾£¬2=×óÓÒÂÖ²¥
            </summary>
        </member>
        <member name="T:Himall.Entities.ImageAdInfo">
            <summary>
            Himall_ImageAd
            </summary>
        </member>
        <member name="P:Himall.Entities.ImageAdInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ImageAdInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.ImageAdInfo.ImageUrl">
            <summary>
            Í¼Æ¬µÄ´æ·ÅURL
            </summary>
        </member>
        <member name="P:Himall.Entities.ImageAdInfo.Url">
            <summary>
            Í¼Æ¬µÄµ÷ÕûµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.ImageAdInfo.IsTransverseAD">
            <summary>
            ÊÇ·ñÊÇºáÏò³¤¹ã¸æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ImageAdInfo.TypeId">
            <summary>
            Î¢ÐÅÍ·Ïñ
            </summary>
        </member>
        <member name="T:Himall.Entities.IntegralMallAdInfo">
            <summary>
            Himall_IntegralMallAd
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.ActivityType">
            <summary>
            »î¶¯ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.ActivityId">
            <summary>
            »î¶¯±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.Cover">
            <summary>
            ÏÔÊ¾Í¼Æ¬
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.ShowStatus">
            <summary>
            ÏÔÊ¾×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.ShowPlatform">
            <summary>
            ÏÔÊ¾Æ½Ì¨
            </summary>
        </member>
        <member name="T:Himall.Entities.IntegralMallAdInfo.AdActivityType">
            <summary>
            活动类型
            </summary>
        </member>
        <member name="F:Himall.Entities.IntegralMallAdInfo.AdActivityType.ScratchCard">
            <summary>
            刮刮卡
            </summary>
        </member>
        <member name="F:Himall.Entities.IntegralMallAdInfo.AdActivityType.Roulette">
            <summary>
            大转盘
            </summary>
        </member>
        <member name="T:Himall.Entities.IntegralMallAdInfo.AdShowStatus">
            <summary>
            广告显示状态
            </summary>
        </member>
        <member name="F:Himall.Entities.IntegralMallAdInfo.AdShowStatus.Show">
            <summary>
            显示
            </summary>
        </member>
        <member name="F:Himall.Entities.IntegralMallAdInfo.AdShowStatus.Hide">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="T:Himall.Entities.IntegralMallAdInfo.AdShowPlatform">
            <summary>
            广告显示平台
            </summary>
        </member>
        <member name="F:Himall.Entities.IntegralMallAdInfo.AdShowPlatform.PC">
            <summary>
            电脑
            </summary>
        </member>
        <member name="F:Himall.Entities.IntegralMallAdInfo.AdShowPlatform.APP">
            <summary>
            APP
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.ShowActivityType">
            <summary>
            活动类型
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.ShowAdStatus">
            <summary>
            广告显示状态
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.ShowAdPlatform">
            <summary>
            广告显示平台
            </summary>
        </member>
        <member name="P:Himall.Entities.IntegralMallAdInfo.LinkUrl">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="T:Himall.Entities.InviteRecordInfo">
            <summary>
            Himall_InviteRecord
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRecordInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRecordInfo.UserName">
            <summary>
            ÓÃ»§Ãû
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRecordInfo.RegName">
            <summary>
            ÑûÇëµÄÓÃ»§
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRecordInfo.InviteIntegral">
            <summary>
            ÑûÇë»ñµÃµÄ»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRecordInfo.RegIntegral">
            <summary>
            ±»ÑûÇë»ñµÃµÄ»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRecordInfo.RegTime">
            <summary>
            ×¢²áÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRecordInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRecordInfo.RegUserId">
            <summary>
            ±»ÑûÇëµÄÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRecordInfo.RecordTime">
            <summary>
            »ñµÃ»ý·ÖÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.InviteRuleInfo">
            <summary>
            Himall_InviteRule
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRuleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRuleInfo.InviteIntegral">
            <summary>
            ÑûÇëÄÜ»ñµÃµÄ»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRuleInfo.RegIntegral">
            <summary>
            ±»ÑûÇëÄÜ»ñµÃµÄ»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRuleInfo.ShareTitle">
            <summary>
            ·ÖÏí±êÌâ
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRuleInfo.ShareDesc">
            <summary>
            ·ÖÏíÏêÏ¸
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRuleInfo.ShareIcon">
            <summary>
            ·ÖÏíÍ¼±ê
            </summary>
        </member>
        <member name="P:Himall.Entities.InviteRuleInfo.ShareRule">
            <summary>
            ·ÖÏí¹æÔò
            </summary>
        </member>
        <member name="T:Himall.Entities.InvoiceContextInfo">
            <summary>
            Himall_InvoiceContext
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceContextInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceContextInfo.Name">
            <summary>
            ·¢Æ±Ãû³Æ
            </summary>
        </member>
        <member name="T:Himall.Entities.InvoiceTitleInfo">
            <summary>
            Himall_InvoiceTitle
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.InvoiceType">
            <summary>
            ·¢Æ±ÀàÐÍ£¨1:ÆÕÍ¨·¢Æ±¡¢2:µç×Ó·¢Æ±¡¢3:ÔöÖµË°·¢Æ±£©
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.Name">
            <summary>
            Ì§Í·Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.Code">
            <summary>
            Ë°ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.InvoiceContext">
            <summary>
            ·¢Æ±Ã÷Ï¸
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.RegisterAddress">
            <summary>
            ×¢²áµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.RegisterPhone">
            <summary>
            ×¢²áµç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.BankName">
            <summary>
            ¿ª»§ÒøÐÐ
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.BankNo">
            <summary>
            ÒøÐÐÕÊºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.RealName">
            <summary>
            ÊÕÆ±ÈËÐÕÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.CellPhone">
            <summary>
            ÊÕÆ±ÈËÊÖ»úºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.Email">
            <summary>
            ÊÕÆ±ÈËÓÊÏä
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.RegionID">
            <summary>
            ÊÕÆ±ÈËµØÖ·ÇøÓòID
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.Address">
            <summary>
            ÊÕÆ±ÈËÏêÏ¸µØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.IsDefault">
            <summary>
            ÊÇ·ñÄ¬ÈÏ
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.RegionFullName">
            <summary>
            地址全路径名称
            </summary>
        </member>
        <member name="P:Himall.Entities.InvoiceTitleInfo.InvoiceDay">
            <summary>
            发票寄出天数
            </summary>
        </member>
        <member name="T:Himall.Entities.LabelInfo">
            <summary>
            Himall_Label
            </summary>
        </member>
        <member name="P:Himall.Entities.LabelInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.LabelInfo.LabelName">
            <summary>
            ±êÇ©Ãû³Æ
            </summary>
        </member>
        <member name="T:Himall.Entities.LogInfo">
            <summary>
            Himall_Log
            </summary>
        </member>
        <member name="P:Himall.Entities.LogInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.LogInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.LogInfo.PageUrl">
            <summary>
            PageUrl
            </summary>
        </member>
        <member name="P:Himall.Entities.LogInfo.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:Himall.Entities.LogInfo.UserName">
            <summary>
            UserName
            </summary>
        </member>
        <member name="P:Himall.Entities.LogInfo.IPAddress">
            <summary>
            IPAddress
            </summary>
        </member>
        <member name="P:Himall.Entities.LogInfo.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="T:Himall.Entities.ManagerInfo">
            <summary>
            Himall_Manager
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.RoleId">
            <summary>
            ½ÇÉ«ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.UserName">
            <summary>
            ÓÃ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.Password">
            <summary>
            ÃÜÂë
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.PasswordSalt">
            <summary>
            ÃÜÂë¼ÓÑÎ
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.CreateDate">
            <summary>
            ´´½¨ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.RealName">
            <summary>
            ÕæÊµÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.RoleName">
            <summary>
            管理员角色名
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.AdminPrivileges">
            <summary>
            平台管理员权限列表
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.SellerPrivileges">
            <summary>
            商家管理员权限列表
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.Description">
            <summary>
            管理员角色说明
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.VShopId">
            <summary>
            微店编号
            </summary>
        </member>
        <member name="P:Himall.Entities.ManagerInfo.IsMainAccount">
            <summary>
            是否主账号
            </summary>
        </member>
        <member name="T:Himall.Entities.MarketServiceRecordInfo">
            <summary>
            Himall_MarketServiceRecord
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketServiceRecordInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketServiceRecordInfo.MarketServiceId">
            <summary>
            MarketServiceId
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketServiceRecordInfo.StartTime">
            <summary>
            ¿ªÊ¼Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketServiceRecordInfo.EndTime">
            <summary>
            ½áÊøÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketServiceRecordInfo.BuyTime">
            <summary>
            ¹ºÂòÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketServiceRecordInfo.SettlementFlag">
            <summary>
            SettlementFlag
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketServiceRecordInfo.Price">
            <summary>
            ·þÎñ¹ºÂò¼Û¸ñ
            </summary>
        </member>
        <member name="T:Himall.Entities.MarketSettingInfo">
            <summary>
            Himall_MarketSetting
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketSettingInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketSettingInfo.TypeId">
            <summary>
            ÓªÏúÀàÐÍID
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketSettingInfo.Price">
            <summary>
            ÓªÏúÊ¹ÓÃ¼Û¸ñ£¨/ÔÂ£©
            </summary>
        </member>
        <member name="T:Himall.Entities.MarketSettingMetaInfo">
            <summary>
            Himall_MarketSettingMeta
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketSettingMetaInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketSettingMetaInfo.MarketId">
            <summary>
            MarketId
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketSettingMetaInfo.MetaKey">
            <summary>
            MetaKey
            </summary>
        </member>
        <member name="P:Himall.Entities.MarketSettingMetaInfo.MetaValue">
            <summary>
            MetaValue
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberInfo">
            <summary>
            Himall_Member
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.UserName">
            <summary>
            Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Password">
            <summary>
            ÃÜÂë
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.PasswordSalt">
            <summary>
            ÃÜÂë¼ÓÑÎ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Nick">
            <summary>
            êÇ³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Sex">
            <summary>
            ÐÔ±ð
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Email">
            <summary>
            ÓÊ¼þ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.CreateDate">
            <summary>
            ´´½¨ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.TopRegionId">
            <summary>
            Ê¡·ÝID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.RegionId">
            <summary>
            Ê¡ÊÐÇøID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.RealName">
            <summary>
            ÕæÊµÐÕÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.CellPhone">
            <summary>
            µç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.QQ">
            <summary>
            QQ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Address">
            <summary>
            ½ÖµÀµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Disabled">
            <summary>
            ÊÇ·ñ½ûÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.LastLoginDate">
            <summary>
            ×îºóµÇÂ¼ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.OrderNumber">
            <summary>
            ÏÂµ¥´ÎÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.TotalAmount">
            <summary>
            ×ÜÏû·Ñ½ð¶î£¨²»ÅÅ³ýÍË¿î£©
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Expenditure">
            <summary>
            ×ÜÏû·Ñ½ð¶î£¨²»ÅÅ³ýÍË¿î£©
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Points">
            <summary>
            Points
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Photo">
            <summary>
            Í·Ïñ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.ParentSellerId">
            <summary>
            ÉÌ¼Ò¸¸ÕËºÅID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.PayPwd">
            <summary>
            Ö§¸¶ÃÜÂë
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.PayPwdSalt">
            <summary>
            Ö§¸¶ÃÜÂë¼ÓÃÜ×Ö·û
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.InviteUserId">
            <summary>
            InviteUserId
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.BirthDay">
            <summary>
            »áÔ±ÉúÈÕ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Occupation">
            <summary>
            Ö°Òµ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.NetAmount">
            <summary>
            ¾»Ïû·Ñ½ð¶î£¨ÅÅ³ýÍË¿î£©
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.LastConsumptionTime">
            <summary>
            ×îºóÏû·ÑÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.Platform">
            <summary>
            ÓÃ»§À´Ô´ÖÕ¶Ë
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.PhotoUrl">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.ShowNick">
            <summary>
            显示昵称
            <para>无昵称则显示用户名</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.IsWeiXinUser">
            <summary>
            是否是微信用户
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.MemberDiscount">
            <summary>
            会员折扣(0.00-1)
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberInfo.IsNewAccount">
            <summary>
            是否刚新注册用户
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberActivityDegreeInfo">
            <summary>
            Himall_MemberActivityDegree
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberActivityDegreeInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberActivityDegreeInfo.UserId">
            <summary>
            »áÔ±±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberActivityDegreeInfo.OneMonth">
            <summary>
            ÊÇ·ñÎªÒ»¸öÔÂ»îÔ¾ÓÃ»§
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberActivityDegreeInfo.ThreeMonth">
            <summary>
            ÊÇ·ñÎªÈý¸öÔÂ»îÔ¾ÓÃ»§
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberActivityDegreeInfo.SixMonth">
            <summary>
            ÊÇ·ñÎªÁù¸öÔÂ»îÔ¾ÓÃ»§
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberActivityDegreeInfo.OneMonthEffectiveTime">
            <summary>
            Ò»¸öÔÂ»îÔ¾»áÔ±ÓÐÐ§Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberActivityDegreeInfo.ThreeMonthEffectiveTime">
            <summary>
            Èý¸öÔÂ»îÔ¾»áÔ±ÓÐÐ§Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberActivityDegreeInfo.SixMonthEffectiveTime">
            <summary>
            Áù¸öÔÂ»îÔ¾»áÔ±ÓÐÐ§Ê±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberBuyCategoryInfo">
            <summary>
            Himall_MemberBuyCategory
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberBuyCategoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberBuyCategoryInfo.UserId">
            <summary>
            »áÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberBuyCategoryInfo.CategoryId">
            <summary>
            Àà±ðID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberBuyCategoryInfo.OrdersCount">
            <summary>
            ¹ºÂò´ÎÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberBuyCategoryInfo.CategoryName">
            <summary>
            类别名称,需手动填充数据
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberConsumeStatisticInfo">
            <summary>
            Himall_MemberConsumeStatistic
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberConsumeStatisticInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberConsumeStatisticInfo.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberConsumeStatisticInfo.ShopId">
            <summary>
            ÃÅµêId
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberConsumeStatisticInfo.NetAmount">
            <summary>
            ¾»Ïû·Ñ½ð¶î(ÍË¿îÐèÒªÎ¬»¤)
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberConsumeStatisticInfo.OrderNumber">
            <summary>
            Ïû·Ñ´ÎÊý(ÍË¿î²»Î¬»¤)
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberContactInfo">
            <summary>
            Himall_MemberContact
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberContactInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberContactInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberContactInfo.UserType">
            <summary>
            ÓÃ»§ÀàÐÍ(0 Email  1 SMS)
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberContactInfo.ServiceProvider">
            <summary>
            ²å¼þÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberContactInfo.Contact">
            <summary>
            ÁªÏµºÅÂë
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberContactInfo.UserTypes.General">
            <summary>
            普通用户
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberContactInfo.UserTypes.ShopManager">
            <summary>
            店铺用户
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberGradeInfo">
            <summary>
            Himall_MemberGrade
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGradeInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGradeInfo.GradeName">
            <summary>
            »áÔ±µÈ¼¶Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGradeInfo.Integral">
            <summary>
            ¸ÃµÈ¼¶ËùÐè»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGradeInfo.Remark">
            <summary>
            ÃèÊö
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGradeInfo.Discount">
            <summary>
            Discount
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGradeInfo.IsNoDelete">
            <summary>
            是否可以删除
            <para>拥有关联礼品时不可删除</para>
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberGroupInfo">
            <summary>
            Himall_MemberGroup
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGroupInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGroupInfo.ShopId">
            <summary>
            ÃÅµê±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGroupInfo.StatisticsType">
            <summary>
            Í³¼ÆÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberGroupInfo.Total">
            <summary>
            Í³¼ÆÊýÁ¿
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberIntegralInfo">
            <summary>
            Himall_MemberIntegral
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralInfo.MemberId">
            <summary>
            »áÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralInfo.UserName">
            <summary>
            ÓÃ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralInfo.HistoryIntegrals">
            <summary>
            ÓÃ»§ÀúÊ·»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralInfo.AvailableIntegrals">
            <summary>
            ÓÃ»§¿ÉÓÃ»ý·Ö
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberIntegralInfo.IntegralType">
            <summary>
            积分类型
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.IntegralType.Consumption">
            <summary>
            消费
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.IntegralType.InvitationMemberRegiste">
            <summary>
            会员邀请
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.IntegralType.Login">
            <summary>
            每日登录
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.IntegralType.BindWX">
            <summary>
            绑定微信
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.IntegralType.Comment">
            <summary>
            商品评论
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.IntegralType.SystemOper">
            <summary>
            管理员操作
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.IntegralType.Reg">
            <summary>
            用户注册
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.IntegralType.SignIn">
            <summary>
            签到
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.VirtualItemType.Exchange">
            <summary>
            兑换
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberIntegralInfo.VirtualItemType.ShareOrder">
            <summary>
            晒单送积分
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberIntegralExchangeRuleInfo">
            <summary>
            Himall_MemberIntegralExchangeRule
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralExchangeRuleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralExchangeRuleInfo.IntegralPerMoney">
            <summary>
            Ò»¿éÇ®¶ÔÓ¦¶àÉÙ»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralExchangeRuleInfo.MoneyPerIntegral">
            <summary>
            Ò»¸ö»ý·Ö¶ÔÓ¦¶àÉÙÇ®
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberIntegralRecordInfo">
            <summary>
            Himall_MemberIntegralRecord
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordInfo.MemberId">
            <summary>
            MemberId
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordInfo.UserName">
            <summary>
            ÓÃ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordInfo.TypeId">
            <summary>
            ¶Ò»»ÀàÐÍ£¨µÇÂ¼¡¢ÏÂµ¥µÈ£©
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordInfo.Integral">
            <summary>
            »ý·ÖÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordInfo.RecordDate">
            <summary>
            ¼ÇÂ¼ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordInfo.ReMark">
            <summary>
            ËµÃ÷
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberIntegralRecordActionInfo">
            <summary>
            Himall_MemberIntegralRecordAction
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordActionInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordActionInfo.IntegralRecordId">
            <summary>
            »ý·Ö¶Ò»»ID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordActionInfo.VirtualItemTypeId">
            <summary>
            ¶Ò»»ÐéÄâÎïlÀàÐÍID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRecordActionInfo.VirtualItemId">
            <summary>
            ÐéÄâÎïID
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberIntegralRuleInfo">
            <summary>
            Himall_MemberIntegralRule
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRuleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRuleInfo.TypeId">
            <summary>
            »ý·Ö¹æÔòÀàÐÍID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberIntegralRuleInfo.Integral">
            <summary>
            ¹æÔò¶ÔÓ¦µÄ»ý·ÖÊýÁ¿
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberLabelInfo">
            <summary>
            Himall_MemberLabel
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberLabelInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberLabelInfo.MemId">
            <summary>
            »áÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberLabelInfo.LabelId">
            <summary>
            ±êÇ©Id
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberOpenIdInfo">
            <summary>
            Himall_MemberOpenId
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberOpenIdInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberOpenIdInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberOpenIdInfo.OpenId">
            <summary>
            Î¢ÐÅOpenID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberOpenIdInfo.UnionOpenId">
            <summary>
            ¿ª·¢Æ½Ì¨Openid
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberOpenIdInfo.UnionId">
            <summary>
            ¿ª·¢Æ½Ì¨Unionid
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberOpenIdInfo.ServiceProvider">
            <summary>
            ²å¼þÃû³Æ£¨Himall.Plugin.OAuth.WeiXin£©
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberOpenIdInfo.AppIdType">
            <summary>
            AppIdType
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberOpenIdInfo.AppIdTypeEnum.Payment">
            <summary>
            支付的Appid
            </summary>
        </member>
        <member name="F:Himall.Entities.MemberOpenIdInfo.AppIdTypeEnum.Normal">
            <summary>
            一般的Appid
            </summary>
        </member>
        <member name="T:Himall.Entities.MemberSignInInfo">
            <summary>
            Himall_MemberSignIn
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberSignInInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberSignInInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberSignInInfo.LastSignTime">
            <summary>
            ×î½üÇ©µ½Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberSignInInfo.DurationDay">
            <summary>
            ³ÖÐøÇ©µ½ÌìÊý Ã¿ÖÜÆÚºóÇåÁã
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberSignInInfo.DurationDaySum">
            <summary>
            ³ÖÐøÇ©µ½ÌìÊý×ÜÊý ·ÇÁ¬ÐøÖÜÆÚÇåÁã
            </summary>
        </member>
        <member name="P:Himall.Entities.MemberSignInInfo.SignDaySum">
            <summary>
            Ç©µ½×ÜÌìÊý
            </summary>
        </member>
        <member name="T:Himall.Entities.MenuInfo">
            <summary>
            Himall_Menu
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.ParentId">
            <summary>
            ÉÏ¼¶ID
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.Title">
            <summary>
            ±êÌâ
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.Url">
            <summary>
            Á´½ÓµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.Depth">
            <summary>
            Éî¶È
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.Sequence">
            <summary>
            Sequence
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.FullIdPath">
            <summary>
            È«Â·¾¶
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.Platform">
            <summary>
            ÖÕ¶Ë
            </summary>
        </member>
        <member name="P:Himall.Entities.MenuInfo.UrlType">
            <summary>
            urlÀàÐÍ
            </summary>
        </member>
        <member name="T:Himall.Entities.MenuInfo.UrlTypes">
            <summary>
            链接类型
            </summary>
        </member>
        <member name="F:Himall.Entities.MenuInfo.UrlTypes.Nothing">
            <summary>
            不链接
            </summary>
        </member>
        <member name="F:Himall.Entities.MenuInfo.UrlTypes.ShopHome">
            <summary>
            商城首页
            </summary>
        </member>
        <member name="F:Himall.Entities.MenuInfo.UrlTypes.WeiStore">
            <summary>
            微店
            </summary>
        </member>
        <member name="F:Himall.Entities.MenuInfo.UrlTypes.ShopCategory">
            <summary>
            商城分类
            </summary>
        </member>
        <member name="F:Himall.Entities.MenuInfo.UrlTypes.MemberCenter">
            <summary>
            个人中心
            </summary>
        </member>
        <member name="F:Himall.Entities.MenuInfo.UrlTypes.ShopCart">
            <summary>
            购物车
            </summary>
        </member>
        <member name="F:Himall.Entities.MenuInfo.UrlTypes.Linkage">
            <summary>   
            链接
            </summary>
        </member>
        <member name="T:Himall.Entities.MessageLogInfo">
            <summary>
            Himall_MessageLog
            </summary>
        </member>
        <member name="P:Himall.Entities.MessageLogInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MessageLogInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.MessageLogInfo.TypeId">
            <summary>
            TypeId
            </summary>
        </member>
        <member name="P:Himall.Entities.MessageLogInfo.MessageContent">
            <summary>
            MessageContent
            </summary>
        </member>
        <member name="P:Himall.Entities.MessageLogInfo.SendTime">
            <summary>
            SendTime
            </summary>
        </member>
        <member name="T:Himall.Entities.MobileFootMenuInfo">
            <summary>
            Himall_MobileFootMenu
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileFootMenuInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileFootMenuInfo.Name">
            <summary>
            µ¼º½Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileFootMenuInfo.Url">
            <summary>
            Á´½ÓµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileFootMenuInfo.MenuIcon">
            <summary>
            ÏÔÊ¾Í¼Æ¬
            </summary>
        </member>
        <member name="T:Himall.Entities.MobileHomeProductInfo">
            <summary>
            Himall_MobileHomeProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeProductInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeProductInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeProductInfo.PlatFormType">
            <summary>
            ÖÕ¶ËÀàÐÍ(Î¢ÐÅ¡¢WAP£©
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeProductInfo.Sequence">
            <summary>
            Ë³Ðò
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeProductInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="T:Himall.Entities.MobileHomeTopicInfo">
            <summary>
            Himall_MobileHomeTopic
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeTopicInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeTopicInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeTopicInfo.Platform">
            <summary>
            ÖÕ¶Ë
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeTopicInfo.TopicId">
            <summary>
            ×¨ÌâID
            </summary>
        </member>
        <member name="P:Himall.Entities.MobileHomeTopicInfo.Sequence">
            <summary>
            Sequence
            </summary>
        </member>
        <member name="T:Himall.Entities.ModuleProductInfo">
            <summary>
            Himall_ModuleProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.ModuleProductInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ModuleProductInfo.ModuleId">
            <summary>
            Ä£¿éID
            </summary>
        </member>
        <member name="P:Himall.Entities.ModuleProductInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ModuleProductInfo.DisplaySequence">
            <summary>
            DisplaySequence
            </summary>
        </member>
        <member name="T:Himall.Entities.OpenIdInfo">
            <summary>
            Himall_OpenId
            </summary>
        </member>
        <member name="P:Himall.Entities.OpenIdInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OpenIdInfo.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="P:Himall.Entities.OpenIdInfo.SubscribeTime">
            <summary>
            ¹Ø×¢Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OpenIdInfo.IsSubscribe">
            <summary>
            ÊÇ·ñ¹Ø×¢
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderInfo">
            <summary>
            Himall_Order
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderStatus">
            <summary>
            ¶©µ¥×´Ì¬ [Description("´ý¸¶¿î")]WaitPay = 1,[Description("´ý·¢»õ")]WaitDelivery,[Description("´ýÊÕ»õ")]WaitReceiving,[Description("ÒÑ¹Ø±Õ")]Close,[Description("ÒÑÍê³É")]Finish
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderDate">
            <summary>
            ¶©µ¥´´½¨ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.CloseReason">
            <summary>
            ¹Ø±ÕÔ­Òò
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.SellerPhone">
            <summary>
            ÉÌ¼Òµç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.SellerAddress">
            <summary>
            ÉÌ¼Ò·¢»õµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.SellerRemark">
            <summary>
            ÉÌ¼ÒËµÃ÷
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.SellerRemarkFlag">
            <summary>
            SellerRemarkFlag
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.UserId">
            <summary>
            »áÔ±ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.UserName">
            <summary>
            »áÔ±Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.UserRemark">
            <summary>
            »áÔ±ÁôÑÔ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ShipTo">
            <summary>
            ÊÕ»õÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.CellPhone">
            <summary>
            ÊÕ»õÈËµç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.TopRegionId">
            <summary>
            ÊÕ»õÈËµØÖ·Ê¡·ÝID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.RegionId">
            <summary>
            ÊÕ»õÈËÇøÓòID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.RegionFullName">
            <summary>
            È«ÃûµÄÊÕ»õµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.Address">
            <summary>
            ÊÕ»õ¾ßÌå½ÖµÀÐÅÏ¢
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ReceiveLongitude">
            <summary>
            ÊÕ»õµØÖ·×ø±ê
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ReceiveLatitude">
            <summary>
            ÊÕ»õµØÖ·×ø±ê
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ExpressCompanyName">
            <summary>
            ¿ìµÝ¹«Ë¾
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.Freight">
            <summary>
            ÔË·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ShipOrderNumber">
            <summary>
            ÎïÁ÷¶©µ¥ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ShippingDate">
            <summary>
            ·¢»õÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.IsPrinted">
            <summary>
            ÊÇ·ñ´òÓ¡¿ìµÝµ¥
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.PaymentTypeName">
            <summary>
            ¸¶¿îÀàÐÍÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.PaymentTypeGateway">
            <summary>
            ¸¶¿îÀàÐÍÊ¹ÓÃ ²å¼þÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.PaymentType">
            <summary>
            PaymentType
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.GatewayOrderId">
            <summary>
            Ö§¸¶½Ó¿Ú·µ»ØµÄID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.PayRemark">
            <summary>
            ¸¶¿î×¢ÊÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.PayDate">
            <summary>
            ¸¶¿îÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.Tax">
            <summary>
            Ë°Ç®£¬µ«ÊÇÎ´Ê¹ÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.FinishDate">
            <summary>
            Íê³É¶©µ¥ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ProductTotalAmount">
            <summary>
            ÉÌÆ·×Ü½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.RefundTotalAmount">
            <summary>
            ÍË¿î½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.CommisTotalAmount">
            <summary>
            Ó¶½ð×Ü½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.RefundCommisAmount">
            <summary>
            ÍË»¹Ó¶½ð×Ü½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ActiveType">
            <summary>
            Î´Ê¹ÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.Platform">
            <summary>
            À´×ÔÄÄ¸öÖÕ¶ËµÄ¶©µ¥
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.DiscountAmount">
            <summary>
            Õë¶Ô¸Ã¶©µ¥µÄÓÅ»Ý½ð¶î£¨ÓÃÓÚÓÅ»ÝÈ¯£©
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.IntegralDiscount">
            <summary>
            »ý·ÖÓÅ»Ý½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderType">
            <summary>
            ¶©µ¥ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderRemarks">
            <summary>
            ¶©µ¥±¸×¢(Âò¼ÒÁôÑÔ)
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.LastModifyTime">
            <summary>
            ×îºó²Ù×÷Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.DeliveryType">
            <summary>
            ·¢»õÀàÐÍ(¿ìµÝÅäËÍ,µ½µê×ÔÌá)
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ShopBranchId">
            <summary>
            ÃÅµêID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.PickupCode">
            <summary>
            Ìá»õÂë
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.TotalAmount">
            <summary>
            ¶©µ¥Êµ¸¶½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ActualPayAmount">
            <summary>
            ¶©µ¥ÊµÊÕ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.FullDiscount">
            <summary>
            Âú¶î¼õ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.CapitalAmount">
            <summary>
            Ô¤¸¶¿îÖ§¸¶½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.CouponId">
            <summary>
            Ê¹ÓÃµÄÓÅ»ÝÈ¯Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.CancelReason">
            <summary>
            ´ï´ïÈ¡Ïû·¢µ¥Ô­Òò
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.DadaStatus">
            <summary>
            ´ï´ï×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderPay">
            <summary>
            订单支付记录
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderInvoice">
            <summary>
            订单发票记录
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderEnabledRefundAmount">
            <summary>
            订单可退金额
            </summary>
        </member>
        <member name="M:Himall.Entities.OrderInfo.CanBackOut">
            <summary>
            是否可以原路退回
            </summary>
            <returns></returns>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ProductTotal">
            <summary>
            商品实付（商品应付-优惠券的价格-满额减的价格）
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderTotalAmountByTax">
            <summary>
            计算税费金额（商品应付-优惠券的价格-满额减的价格-积分抵扣金额）
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderTotalAmount">
            <summary>
            订单实付金额
            公式： 商品应付+运费+税 - 优惠券金额 - 积分抵扣金额-满额减金额 (减掉积分抵扣部分)
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderAmount">
            <summary>
            订单金额 （商品应付+运费+税 -优惠券金额-满额减金额）  (未减掉积分抵扣部分)
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderWaitPayAmountIsZero">
            <summary>
            订单待付款金额是否为0
            公式： 商品应付+运费+税 - 优惠券金额 - 积分抵扣金额-满额减金额-预付款支付
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderPayAmount">
            <summary>
            需要第三方支付的金额
            <para>this.ProductTotalAmount + this.Freight + this.Tax - this.IntegralDiscount - this.DiscountAmount - this.FullDiscount - this.CapitalAmount</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.ReceiveAddressId">
            <summary>
            提交订单时选择的收货地址ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.FightGroupOrderJoinStatus">
            <summary>
            拼团订单的状态
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.FightGroupCanRefund">
            <summary>
            拼团是否可退款状态
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderInfo.OrderTypes">
            <summary>
            订单类别
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderTypes.Normal">
            <summary>
            正常购
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderTypes.Collocation">
            <summary>
            组合购
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderTypes.LimitBuy">
            <summary>
            限时购
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderTypes.FightGroup">
            <summary>
            拼团
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderTypes.Virtual">
            <summary>
            虚拟商品订单
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderInfo.PaymentTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.PaymentTypes.None">
            <summary>
            未付款时的默认状态
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.PaymentTypes.Online">
            <summary>
            线上支付
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.PaymentTypes.Offline">
            <summary>
            平台确认收款之类的
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.PaymentTypes.CashOnDelivery">
            <summary>
            货到付款
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderInfo.OrderOperateStatus">
            <summary>
            订单状态
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderOperateStatus.WaitPay">
            <summary>
            待付款 1
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderOperateStatus.WaitDelivery">
            <summary>
            待发货 2
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderOperateStatus.WaitReceiving">
            <summary>
            待收货 3
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderOperateStatus.Close">
            <summary>
            已关闭 4
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderOperateStatus.Finish">
            <summary>
            已完成 5
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderOperateStatus.WaitSelfPickUp">
            <summary>
            待自提 6
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderOperateStatus.UnComment">
            <summary>
            未评价 7
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderOperateStatus.WaitVerification">
            <summary>
            待核销(待消费)
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.OrderOperateStatus.History">
            <summary>
            历史订单 99
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderInfo.DeliveryTypes">
            <summary>
            配送方式
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.DeliveryTypes.Express">
            <summary>
            快递配送
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.DeliveryTypes.SelfTake">
            <summary>
            到店自提
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.DeliveryTypes.ShopStore">
            <summary>
            店员配送
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderInfo.ActiveTypes">
            <summary>
            订单活动
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.ActiveTypes.None">
            <summary>
            无活动
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderInfo.VerificationCodeStatus">
            <summary>
            核销码状态
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.VerificationCodeStatus.WaitVerification">
            <summary>
            待核销
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.VerificationCodeStatus.AlreadyVerification">
            <summary>
            已核销
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.VerificationCodeStatus.Refund">
            <summary>
            退款中
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.VerificationCodeStatus.RefundComplete">
            <summary>
            退款完成
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderInfo.VerificationCodeStatus.Expired">
            <summary>
            已过期
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInfo.OrderItemInfo">
            <summary>
            Id == OrderId 
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderCommentInfo">
            <summary>
            Himall_OrderComment
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.OrderId">
            <summary>
            ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.UserName">
            <summary>
            ÓÃ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.CommentDate">
            <summary>
            ÆÀ¼ÛÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.PackMark">
            <summary>
            °ü×°ÆÀ·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.DeliveryMark">
            <summary>
            ÎïÁ÷ÆÀ·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderCommentInfo.ServiceMark">
            <summary>
            ·þÎñÆÀ·Ö
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderComplaintInfo">
            <summary>
            Himall_OrderComplaint
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.OrderId">
            <summary>
            ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.Status">
            <summary>
            ÉóºË×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.ShopPhone">
            <summary>
            µêÆÌÁªÏµ·½Ê½
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.UserName">
            <summary>
            ÓÃ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.UserPhone">
            <summary>
            ÓÃ»§ÁªÏµ·½Ê½
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.ComplaintDate">
            <summary>
            Í¶ËßÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.ComplaintReason">
            <summary>
            Í¶ËßÔ­Òò
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.SellerReply">
            <summary>
            ÉÌ¼Ò·´À¡ÐÅÏ¢
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderComplaintInfo.PlatRemark">
            <summary>
            Í¶Ëß±¸×¢
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderComplaintInfo.ComplaintStatus">
            <summary>
            投诉状态
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderComplaintInfo.ComplaintStatus.WaitDeal">
            <summary>
            待处理
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderComplaintInfo.ComplaintStatus.Dealed">
            <summary>
            等待会员确认
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderComplaintInfo.ComplaintStatus.Dispute">
            <summary>
            等待平台介入
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderComplaintInfo.ComplaintStatus.End">
            <summary>
            已结束
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderExpressDataInfo">
            <summary>
            Himall_OrderExpressData
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderExpressDataInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderExpressDataInfo.CompanyCode">
            <summary>
            CompanyCode
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderExpressDataInfo.ExpressNumber">
            <summary>
            ExpressNumber
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderExpressDataInfo.DataContent">
            <summary>
            DataContent
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderInvoiceInfo">
            <summary>
            Himall_OrderInvoice
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.OrderId">
            <summary>
            ¶©µ¥±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.InvoiceType">
            <summary>
            ·¢Æ±ÀàÐÍ£¨1:ÆÕÍ¨·¢Æ±¡¢2:µç×Ó·¢Æ±¡¢3:ÔöÖµË°·¢Æ±£©
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.InvoiceTitle">
            <summary>
            ·¢Æ±Ì§Í·
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.InvoiceCode">
            <summary>
            Ë°ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.InvoiceContext">
            <summary>
            ·¢Æ±Ã÷Ï¸(¸öÈË¡¢¹«Ë¾)
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.RegisterAddress">
            <summary>
            ×¢²áµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.RegisterPhone">
            <summary>
            ×¢²áµç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.BankName">
            <summary>
            ¿ª»§ÒøÐÐ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.BankNo">
            <summary>
            ÒøÐÐÕÊºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.RealName">
            <summary>
            ÊÕÆ±ÈËÐÕÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.CellPhone">
            <summary>
            ÊÕÆ±ÈËÊÖ»úºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.Email">
            <summary>
            ÊÕÆ±ÈËÓÊÏä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.RegionID">
            <summary>
            ÊÕÆ±ÈËµØÖ·ÇøÓòID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.Address">
            <summary>
            ÊÕÆ±ÈËÏêÏ¸µØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.VatInvoiceDay">
            <summary>
            ¶©µ¥Íê³Éºó¶àÉÙÌì¿ª¾ßÔöÖµË°·¢Æ±
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.InvoiceTypeName">
            <summary>
            发票类型名称
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderInvoiceInfo.RegionFullName">
            <summary>
            地址全路径名称
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderItemInfo">
            <summary>
            Himall_OrderItem
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.Id">
            <summary>
            Ö÷¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.OrderId">
            <summary>
            ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.SkuId">
            <summary>
            SKUId
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.SKU">
            <summary>
            SKU±íSKU×Ö¶Î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.Quantity">
            <summary>
            ¹ºÂòÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.ReturnQuantity">
            <summary>
            ÍË»õÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.CostPrice">
            <summary>
            ³É±¾¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.SalePrice">
            <summary>
            ÏúÊÛ¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.DiscountAmount">
            <summary>
            ÓÅ»Ý½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.RealTotalPrice">
            <summary>
            Êµ¼ÊÓ¦¸¶½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.RefundPrice">
            <summary>
            ÍË¿î¼Û¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.ProductName">
            <summary>
            ÉÌÆ·Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.Color">
            <summary>
            SKUÑÕÉ«
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.Size">
            <summary>
            SKU³ß´ç
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.Version">
            <summary>
            SKU°æ±¾
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.ThumbnailsUrl">
            <summary>
            ËõÂÔÍ¼
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.CommisRate">
            <summary>
            ·ÖÓ¶±ÈÀý
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.EnabledRefundAmount">
            <summary>
            ¿ÉÍË½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.IsLimitBuy">
            <summary>
            ÊÇ·ñÎªÏÞÊ±¹ºÉÌÆ·
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.EnabledRefundIntegral">
            <summary>
            ¿ÉÍË»ý·ÖµÖ¿Û½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.CouponDiscount">
            <summary>
            ÓÅ»ÝÈ¯µÖ¿Û½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.FullDiscount">
            <summary>
            Âú¶î¼õÆ½Ì¯µ½¶©µ¥ÏîµÄ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.EffectiveDate">
            <summary>
            ºËÏúÂëÉúÐ§Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.FlashSaleId">
            <summary>
            ÏÞÊ±¹º»î¶¯ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderItemInfo.PlatCommission">
            <summary>
            平台佣金
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderOperationLogInfo">
            <summary>
            Himall_OrderOperationLog
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderOperationLogInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderOperationLogInfo.OrderId">
            <summary>
            ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderOperationLogInfo.Operator">
            <summary>
            ²Ù×÷Õß
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderOperationLogInfo.OperateDate">
            <summary>
            ²Ù×÷ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderOperationLogInfo.OperateContent">
            <summary>
            ²Ù×÷ÄÚÈÝ
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderPayInfo">
            <summary>
            Himall_OrderPay
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderPayInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderPayInfo.PayId">
            <summary>
            PayId
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderPayInfo.OrderId">
            <summary>
            OrderId
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderPayInfo.PayState">
            <summary>
            Ö§¸¶×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderPayInfo.PayTime">
            <summary>
            Ö§¸¶Ê±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderRefundInfo">
            <summary>
            Himall_OrderRefund
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.OrderId">
            <summary>
            ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.OrderItemId">
            <summary>
            ¶©µ¥ÏêÇéID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.VerificationCodeIds">
            <summary>
            ºËÏúÂëID¼¯ºÏ(±¾´ÎÉêÇëÄÄÐ©ºËÏúÂëÍË¿î)
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.Applicant">
            <summary>
            ÉêÇëÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ContactPerson">
            <summary>
            ÁªÏµÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ContactCellPhone">
            <summary>
            ÁªÏµµç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.RefundAccount">
            <summary>
            ÍË¿î½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ApplyDate">
            <summary>
            ÉêÇëÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.Amount">
            <summary>
            ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.Reason">
            <summary>
            ÍË¿îÔ­Òò
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ReasonDetail">
            <summary>
            ÍË¿îÏêÇé
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.SellerAuditStatus">
            <summary>
            ÉÌ¼ÒÉóºË×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.SellerAuditDate">
            <summary>
            ÉÌ¼ÒÉóºËÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.SellerRemark">
            <summary>
            ÉÌ¼Ò×¢ÊÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ManagerConfirmStatus">
            <summary>
            Æ½Ì¨ÉóºË×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ManagerConfirmDate">
            <summary>
            Æ½Ì¨ÉóºËÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ManagerRemark">
            <summary>
            Æ½Ì¨×¢ÊÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.IsReturn">
            <summary>
            ÊÇ·ñÒÑ¾­ÍË¿î
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ExpressCompanyName">
            <summary>
            ¿ìµÝ¹«Ë¾
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ShipOrderNumber">
            <summary>
            ¿ìµÝµ¥ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.Payee">
            <summary>
            ÊÕ¿îÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.PayeeAccount">
            <summary>
            ÊÕ¿îÈËÕË»§
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.RefundMode">
            <summary>
            ÍË¿î·½Ê½
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.RefundPayStatus">
            <summary>
            ÍË¿îÖ§¸¶×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.RefundPayType">
            <summary>
            ÍË¿îÖ§¸¶ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.BuyerDeliverDate">
            <summary>
            Âò¼Ò·¢»õÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.SellerConfirmArrivalDate">
            <summary>
            Âô¼ÒÈ·ÈÏµ½»õÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.RefundBatchNo">
            <summary>
            ÍË¿îÅú´ÎºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.RefundPostTime">
            <summary>
            ÍË¿îÒì²½Ìá½»Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ReturnQuantity">
            <summary>
            ÍË»õÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ReturnPlatCommission">
            <summary>
            Æ½Ì¨Ó¶½ðÍË»¹
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ApplyNumber">
            <summary>
            ÉêÇë´ÎÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.CertPic1">
            <summary>
            Æ¾Ö¤Í¼Æ¬1
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.CertPic2">
            <summary>
            Æ¾Ö¤Í¼Æ¬2
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.CertPic3">
            <summary>
            Æ¾Ö¤Í¼Æ¬3
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderRefundInfo.OrderRefundAuditStatus">
            <summary>
            商家审核状态
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundAuditStatus.WaitAudit">
            <summary>
            待商家/门店审核
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundAuditStatus.WaitDelivery">
            <summary>
            待买家寄货
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundAuditStatus.WaitReceiving">
            <summary>
            待商家/门店收货收货
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundAuditStatus.UnAudit">
            <summary>
            商家/门店拒绝
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundAuditStatus.Audited">
            <summary>
            商家/门店通过审核
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderRefundInfo.OrderRefundConfirmStatus">
            <summary>
            平台确认状态
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundConfirmStatus.UnConfirm">
            <summary>
            待平台确认
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundConfirmStatus.Confirmed">
            <summary>
            退款成功
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderRefundInfo.OrderRefundMode">
            <summary>
            退款方式
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundMode.OrderRefund">
            <summary>
            订单退款
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundMode.OrderItemRefund">
            <summary>
            货品退款(收到货后只退款)
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundMode.ReturnGoodsRefund">
            <summary>
            退货退款
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderRefundInfo.OrderRefundPayStatus">
            <summary>
            退款支付状态
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundPayStatus.PaySuccess">
            <summary>
            支付成功
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundPayStatus.PayFail">
            <summary>
            支付失败
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundPayStatus.Payed">
            <summary>
            已支付
            <para>已跳转支付平台，未收到异步通知道前</para>
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderRefundInfo.OrderRefundPayType">
            <summary>
            退款支付方式
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundPayType.BackOut">
            <summary>
            原路返回
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundPayType.OffLine">
            <summary>
            线下收款
            </summary>
        </member>
        <member name="F:Himall.Entities.OrderRefundInfo.OrderRefundPayType.BackCapital">
            <summary>
            退到预存款
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.ShowReturnQuantity">
            <summary>
            退货数量
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.RefundType">
            <summary>
            售后类型
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.RefundStatus">
            <summary>
            当前退款状态
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.RefundStatusValue">
            <summary>
            当前退款状态
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.EnabledRefundAmount">
            <summary>
            可退金额
            <para>订单退款为了(实付+运费-优惠-满减金额)，单件退款(实付-优惠)</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.IsOrderRefundTimeOut">
            <summary>
            订单是否已超过售后期
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.IsWxUpload">
            <summary>
            是否微信上传
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundInfo.IsVirtual">
            <summary>
            是否虚拟订单
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderRefundLogInfo">
            <summary>
            Himall_OrderRefundLog
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundLogInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundLogInfo.RefundId">
            <summary>
            ÊÛºó±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundLogInfo.Operator">
            <summary>
            ²Ù×÷Õß
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundLogInfo.OperateDate">
            <summary>
            ²Ù×÷ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundLogInfo.OperateContent">
            <summary>
            ²Ù×÷ÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundLogInfo.ApplyNumber">
            <summary>
            ÉêÇë´ÎÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundLogInfo.Step">
            <summary>
            ÍË¿î²½¾Û(Ã¶¾Ù:CommonModel.Enum.OrderRefundStep)
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderRefundLogInfo.Remark">
            <summary>
            ±¸×¢(Âò¼ÒÁôÑÔ/ÉÌ¼ÒÁôÑÔ/ÉÌ¼Ò¾Ü¾øÔ­Òò/Æ½Ì¨ÍË¿î±¸×¢)
            </summary>
        </member>
        <member name="T:Himall.Entities.OrderVerificationCodeInfo">
            <summary>
            Himall_OrderVerificationCode
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderVerificationCodeInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderVerificationCodeInfo.OrderId">
            <summary>
            ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderVerificationCodeInfo.OrderItemId">
            <summary>
            ¶©µ¥ÏîID
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderVerificationCodeInfo.Status">
            <summary>
            ºËÏúÂë×´Ì¬(1=´ýºËÏú£¬2=ÒÑºËÏú£¬3=ÍË¿îÖÐ£¬4=ÍË¿îÍê³É£¬5=ÒÑ¹ýÆÚ)
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderVerificationCodeInfo.VerificationCode">
            <summary>
            ºËÏúÂë(12Î»Ëæ»úÊý)
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderVerificationCodeInfo.VerificationTime">
            <summary>
            ºËÏúÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderVerificationCodeInfo.VerificationUser">
            <summary>
            ºËÏúÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.OrderVerificationCodeInfo.QRCode">
            <summary>
            核销码二维码图
            </summary>
        </member>
        <member name="T:Himall.Entities.PaymentConfigInfo">
            <summary>
            Himall_PaymentConfig
            </summary>
        </member>
        <member name="P:Himall.Entities.PaymentConfigInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.PaymentConfigInfo.IsCashOnDelivery">
            <summary>
            IsCashOnDelivery
            </summary>
        </member>
        <member name="T:Himall.Entities.PendingSettlementOrderInfo">
            <summary>
            Himall_PendingSettlementOrder
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.OrderId">
            <summary>
            ¶©µ¥ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.OrderType">
            <summary>
            ¶©µ¥ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.OrderAmount">
            <summary>
            ¶©µ¥½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.ProductsAmount">
            <summary>
            ÉÌÆ·Êµ¸¶½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.FreightAmount">
            <summary>
            ÔË·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.TaxAmount">
            <summary>
            Ë°·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.IntegralDiscount">
            <summary>
            »ý·ÖµÖ¿Û½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.PlatCommission">
            <summary>
            Æ½Ì¨Ó¶½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.DistributorCommission">
            <summary>
            ·ÖÏúÓ¶½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.RefundAmount">
            <summary>
            ÍË¿î½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.RefundDate">
            <summary>
            ÍË¿îÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.PlatCommissionReturn">
            <summary>
            Æ½Ì¨Ó¶½ðÍË»¹
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.DistributorCommissionReturn">
            <summary>
            ·ÖÏúÓ¶½ðÍË»¹
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.SettlementAmount">
            <summary>
            ½áËã½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.OrderFinshTime">
            <summary>
            ¶©µ¥Íê³ÉÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.PaymentTypeName">
            <summary>
            PaymentTypeName
            </summary>
        </member>
        <member name="P:Himall.Entities.PendingSettlementOrderInfo.CreateDate">
            <summary>
            ´´½¨Ê±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.PhotoSpaceInfo">
            <summary>
            Himall_PhotoSpace
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceInfo.PhotoCategoryId">
            <summary>
            Í¼Æ¬·Ö×éID
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceInfo.PhotoName">
            <summary>
            Í¼Æ¬Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceInfo.PhotoPath">
            <summary>
            Í¼Æ¬Â·¾¶
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceInfo.FileSize">
            <summary>
            Í¼Æ¬´óÐ¡
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceInfo.UploadTime">
            <summary>
            Í¼Æ¬ÉÏ´«Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceInfo.LastUpdateTime">
            <summary>
            Í¼Æ¬×îºó¸üÐÂÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.PhotoSpaceCategoryInfo">
            <summary>
            Himall_PhotoSpaceCategory
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceCategoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceCategoryInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceCategoryInfo.PhotoSpaceCatrgoryName">
            <summary>
            Í¼Æ¬¿Õ¼ä·ÖÀàÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.PhotoSpaceCategoryInfo.DisplaySequence">
            <summary>
            ÏÔÊ¾Ë³Ðò
            </summary>
        </member>
        <member name="T:Himall.Entities.PlatAccountInfo">
            <summary>
            Himall_PlatAccount
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountInfo.Balance">
            <summary>
            ÕÊ»§Óà¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountInfo.PendingSettlement">
            <summary>
            ´ý½áËã
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountInfo.Settled">
            <summary>
            ÒÑ½áËã
            </summary>
        </member>
        <member name="T:Himall.Entities.PlatAccountItemInfo">
            <summary>
            Himall_PlatAccountItem
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.AccountNo">
            <summary>
            ½»Ò×Á÷Ë®ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.AccoutID">
            <summary>
            ¹ØÁª×Ê½ð±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.CreateTime">
            <summary>
            ´´½¨Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.Amount">
            <summary>
            ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.Balance">
            <summary>
            ÕÊ»§Ê£Óà
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.TradeType">
            <summary>
            ½»Ò×ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.IsIncome">
            <summary>
            ÊÇ·ñÊÕÈë
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.ReMark">
            <summary>
            ½»Ò×±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatAccountItemInfo.DetailId">
            <summary>
            ÏêÇéID
            </summary>
        </member>
        <member name="T:Himall.Entities.PlatVisitInfo">
            <summary>
            Himall_PlatVisit
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.Id">
            <summary>
            Ö÷¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.Date">
            <summary>
            Í³¼ÆÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.VisitCounts">
            <summary>
            Æ½Ì¨ä¯ÀÀÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.OrderUserCount">
            <summary>
            ÏÂµ¥ÈËÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.OrderCount">
            <summary>
            ¶©µ¥Êý
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.OrderProductCount">
            <summary>
            ÏÂµ¥¼þÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.OrderAmount">
            <summary>
            ÏÂµ¥½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.OrderPayUserCount">
            <summary>
            ÏÂµ¥¸¶¿îÈËÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.OrderPayCount">
            <summary>
            ¸¶¿î¶©µ¥Êý
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.SaleCounts">
            <summary>
            ¸¶¿îÏÂµ¥¼þÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.SaleAmounts">
            <summary>
            ¸¶¿î½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.PlatVisitInfo.StatisticFlag">
            <summary>
            ÊÇ·ñÒÑ¾­Í³¼Æ(0£ºÎ´Í³¼Æ,1ÒÑÍ³¼Æ)
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductInfo">
            <summary>
            Himall_Product
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.CategoryId">
            <summary>
            ·ÖÀàID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.CategoryPath">
            <summary>
            ·ÖÀàÂ·¾¶
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ProductType">
            <summary>
            ÉÌÆ·ÀàÐÍ(0=ÊµÎïÉÌÆ·£¬1=ÐéÄâÉÌÆ·)
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.TypeId">
            <summary>
            ÀàÐÍID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.BrandId">
            <summary>
            Æ·ÅÆID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ProductName">
            <summary>
            ÉÌÆ·Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ProductCode">
            <summary>
            ÉÌÆ·±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ShortDescription">
            <summary>
            ¹ã¸æ´Ê
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.SaleStatus">
            <summary>
            ÏúÊÛ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.AuditStatus">
            <summary>
            ÉóºË×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.AddedDate">
            <summary>
            Ìí¼ÓÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.DisplaySequence">
            <summary>
            ÏÔÊ¾Ë³Ðò
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ImagePath">
            <summary>
            ´æ·ÅÍ¼Æ¬µÄÄ¿Â¼
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.MarketPrice">
            <summary>
            ÊÐ³¡¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.MinSalePrice">
            <summary>
            ×îÐ¡ÏúÊÛ¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.HasSKU">
            <summary>
            ÊÇ·ñÓÐSKU
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.VistiCounts">
            <summary>
            ä¯ÀÀ´ÎÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.SaleCounts">
            <summary>
            ÏúÊÛÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.FreightTemplateId">
            <summary>
            ÔË·ÑÄ£°åID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.Weight">
            <summary>
            ÖØÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.Volume">
            <summary>
            Ìå»ý
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.Quantity">
            <summary>
            ÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.MeasureUnit">
            <summary>
            ¼ÆÁ¿µ¥Î»
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.EditStatus">
            <summary>
            ÐÞ¸Ä×´Ì¬ 0 Õý³£ 1ÒÑÐÞ¸Ä 2´ýÉóºË 3 ÒÑÐÞ¸Ä²¢´ýÉóºË
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.IsDeleted">
            <summary>
            ÊÇ·ñÒÑÉ¾³ý
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.MaxBuyCount">
            <summary>
            ×î´ó¹ºÂòÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.IsOpenLadder">
            <summary>
            ÊÇ·ñ¿ªÆô½×ÌÝ¼Û¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ColorAlias">
            <summary>
            ÑÕÉ«±ðÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.SizeAlias">
            <summary>
            ³ßÂë±ðÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.VersionAlias">
            <summary>
            °æ±¾±ðÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ShopDisplaySequence">
            <summary>
            ÉÌ¼ÒÉÌÆ·ÐòºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.VirtualSaleCounts">
            <summary>
            ÐéÄâÏúÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.VideoPath">
            <summary>
            ÉÌÆ·Ö÷Í¼ÊÓÆµ
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductInfo.ProductSaleStatus">
            <summary>
            销售状态
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductSaleStatus.RawState">
            <summary>
            原始状态
            <para>此状态不可入库，需要取出原数据的销售状态重新补充数据</para>
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductSaleStatus.OnSale">
            <summary>
            出售中
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductSaleStatus.InStock">
            <summary>
            仓库中
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductSaleStatus.InDraft">
            <summary>
            草稿箱
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductInfo.ProductAuditStatus">
            <summary>
            审核状态
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductAuditStatus.WaitForAuditing">
            <summary>
            待审核
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductAuditStatus.Audited">
            <summary>
            销售中
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductAuditStatus.AuditFailed">
            <summary>
            未通过(审核失败)
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductAuditStatus.InfractionSaleOff">
            <summary>
            违规下架
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductAuditStatus.UnAudit">
            <summary>
            未审核
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductInfo.ProductEditStatus">
            <summary>
            修改状态
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductEditStatus.Normal">
            <summary>
            正常
            <para>修改已生效</para>
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductEditStatus.Edited">
            <summary>
            已修改
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductEditStatus.PendingAudit">
            <summary>
            待审核
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductEditStatus.EditedAndPending">
            <summary>
            已修改待审核
            <para>已修改+待审核</para>
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductEditStatus.CompelPendingAudit">
            <summary>
            强制待审核
            <para>免审上架也需要审核</para>
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.ProductEditStatus.CompelPendingHasEdited">
            <summary>
            强制待审已修改
            <para>免审上架也需要审核</para>
            </summary>
        </member>
        <member name="M:Himall.Entities.ProductInfo.GetImage(Himall.CommonModel.ImageSize,System.Int32)">
            <summary>
            获取图片地址 YZY修改获取不同尺寸图片的方法
            </summary>
            <param name="imageIndex">图片序号</param>
            <param name="imageSize">图片尺寸</param>
            <returns></returns>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ImagePathUrl">
            <summary>
            图片路径
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.OrderCounts">
            <summary>
            成交数
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.Address">
            <summary>
            商品地址
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ShopName">
            <summary>
            店铺名称
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ValidityType">
            <summary>
            商品有效期类型(0=长期有效，1=自定义日期)
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.StartDate">
            <summary>
            自定义开始日期
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.EndDate">
            <summary>
            自定义结束日期
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.EffectiveType">
            <summary>
            核销码生效类型
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.Hour">
            <summary>
            付款完成X小时有效
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.SupportRefundType">
            <summary>
            虚拟商品退款类型
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.UseNotice">
            <summary>
            使用须知
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductInfo.VirtualProductEffectiveType">
            <summary>
            核销码生效类型
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.VirtualProductEffectiveType.Immediately">
            <summary>
            立即生效
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductInfo.SupportVirtualRefundType">
            <summary>
            虚拟商品退款类型
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.SupportVirtualRefundType.SupportValidity">
            <summary>
            支持有效期内退款
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.SupportVirtualRefundType.SupportAnyTime">
            <summary>
            支持随时退款
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.SupportVirtualRefundType.NonSupport">
            <summary>
            不支持退款
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductInfo.VirtualProductItemType">
            <summary>
            虚拟商品信息项类型
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.VirtualProductItemType.Text">
            <summary>
            文本格式
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.VirtualProductItemType.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.VirtualProductItemType.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.VirtualProductItemType.IdCard">
            <summary>
            身份证
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.VirtualProductItemType.Digital">
            <summary>
            数字格式
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductInfo.VirtualProductItemType.Picture">
            <summary>
            图片
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ProductAttributeInfo">
            <summary>
            关联属性
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductInfo.ProductShopCategoryInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductAttributeInfo">
            <summary>
            Himall_ProductAttribute
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductAttributeInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductAttributeInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductAttributeInfo.AttributeId">
            <summary>
            ÊôÐÔID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductAttributeInfo.ValueId">
            <summary>
            ÊôÐÔÖµID
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductCommentInfo">
            <summary>
            Himall_ProductComment
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.SubOrderId">
            <summary>
            ¶©µ¥ÏêÏ¸ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.UserName">
            <summary>
            ÓÃ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ReviewContent">
            <summary>
            ÆÀ¼ÛÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ReviewDate">
            <summary>
            ÆÀ¼ÛÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ReviewMark">
            <summary>
            ÆÀ¼ÛËµÃ÷
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ReplyContent">
            <summary>
            ReplyContent
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ReplyDate">
            <summary>
            ReplyDate
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.AppendContent">
            <summary>
            ×·¼ÓÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.AppendDate">
            <summary>
            ×·¼ÓÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ReplyAppendContent">
            <summary>
            ×·¼ÓÆÀÂÛ»Ø¸´
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ReplyAppendDate">
            <summary>
            ×·¼ÓÆÀÂÛ»Ø¸´Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.IsHidden">
            <summary>
            IsHidden
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentInfo.ProductCommentImageInfo">
            <summary>
            Id == CommentId 
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductCommentImageInfo">
            <summary>
            Himall_ProductCommentImage
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentImageInfo.Id">
            <summary>
            ×ÔÔöÎïÀíÖ÷¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentImageInfo.CommentImage">
            <summary>
            ÆÀÂÛÍ¼Æ¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentImageInfo.CommentId">
            <summary>
            ÆÀÂÛID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductCommentImageInfo.CommentType">
            <summary>
            ÆÀÂÛÀàÐÍ£¨Ê×´ÎÆÀÂÛ/×·¼ÓÆÀÂÛ£©
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductConsultationInfo">
            <summary>
            Himall_ProductConsultation
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.UserName">
            <summary>
            ÓÃ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.ConsultationContent">
            <summary>
            ×ÉÑ¯ÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.ConsultationDate">
            <summary>
            ×ÉÑ¯Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.ReplyContent">
            <summary>
            »Ø¸´ÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductConsultationInfo.ReplyDate">
            <summary>
            »Ø¸´ÈÕÆÚ
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductDescriptionInfo">
            <summary>
            Himall_ProductDescription
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.AuditReason">
            <summary>
            ÉóºËÔ­Òò
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.Description">
            <summary>
            ÏêÇé
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.DescriptionPrefixId">
            <summary>
            ¹ØÁª°æÊ½
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.DescriptiondSuffixId">
            <summary>
            DescriptiondSuffixId
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.Meta_Title">
            <summary>
            SEO
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.Meta_Description">
            <summary>
            Meta_Description
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.Meta_Keywords">
            <summary>
            Meta_Keywords
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.MobileDescription">
            <summary>
            ÒÆ¶¯¶ËÃèÊö
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionInfo.ShowMobileDescription">
            <summary>
            显示手机端描述
            <para>后台未添加手机端描述，将显示电脑端描述</para>
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductDescriptionTemplateInfo">
            <summary>
            Himall_ProductDescriptionTemplate
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionTemplateInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionTemplateInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionTemplateInfo.Name">
            <summary>
            °åÊ½Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionTemplateInfo.Position">
            <summary>
            Î»ÖÃ£¨ÉÏ¡¢ÏÂ£©
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionTemplateInfo.Content">
            <summary>
            PC¶Ë°æÊ½
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductDescriptionTemplateInfo.MobileContent">
            <summary>
            ÒÆ¶¯¶Ë°æÊ½
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductDescriptionTemplateInfo.TemplatePosition">
            <summary>
            模板位置
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductDescriptionTemplateInfo.TemplatePosition.Top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="F:Himall.Entities.ProductDescriptionTemplateInfo.TemplatePosition.Bottom">
            <summary>
            底部
            
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductLadderPriceInfo">
            <summary>
            Himall_ProductLadderPrice
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductLadderPriceInfo.Id">
            <summary>
            ½×ÌÝ¼Û¸ñID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductLadderPriceInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductLadderPriceInfo.MinBath">
            <summary>
            ×îÐ¡ÅúÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductLadderPriceInfo.MaxBath">
            <summary>
            ×î´óÅúÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductLadderPriceInfo.Price">
            <summary>
            ¼Û¸ñ
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductRelationProductInfo">
            <summary>
            Himall_ProductRelationProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductRelationProductInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductRelationProductInfo.ProductId">
            <summary>
            ÉÌÆ·id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductRelationProductInfo.Relation">
            <summary>
            ÍÆ¼öµÄÉÌÆ·idÁÐ±í£¬ÒÔ¡®£¬¡¯·Ö¸ô
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductShopCategoryInfo">
            <summary>
            Himall_ProductShopCategory
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductShopCategoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductShopCategoryInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductShopCategoryInfo.ShopCategoryId">
            <summary>
            ShopCategoryId
            </summary>
        </member>
        <member name="T:Himall.Entities.ProductVistiInfo">
            <summary>
            Himall_ProductVisti
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.VistiCounts">
            <summary>
            ä¯ÀÀ´ÎÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.VisitUserCounts">
            <summary>
            ä¯ÀÀÈËÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.PayUserCounts">
            <summary>
            ¸¶¿îÈËÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.SaleCounts">
            <summary>
            ÉÌÆ·ÏúÊÛÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.SaleAmounts">
            <summary>
            ÉÌÆ·ÏúÊÛ¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.OrderCounts">
            <summary>
            ¶©µ¥×ÜÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ProductVistiInfo.StatisticFlag">
            <summary>
            ÊÇ·ñÒÑ¾­Í³¼Æ(0£ºÎ´Í³¼Æ,1ÒÑÍ³¼Æ)
            </summary>
        </member>
        <member name="T:Himall.Entities.ReceivingAddressConfigInfo">
            <summary>
            Himall_ReceivingAddressConfig
            </summary>
        </member>
        <member name="P:Himall.Entities.ReceivingAddressConfigInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ReceivingAddressConfigInfo.AddressId_City">
            <summary>
            AddressId_City
            </summary>
        </member>
        <member name="P:Himall.Entities.ReceivingAddressConfigInfo.AddressId">
            <summary>
            ¶ººÅ·Ö¸ô
            </summary>
        </member>
        <member name="P:Himall.Entities.ReceivingAddressConfigInfo.ShopId">
            <summary>
            Ô¤Áô×Ö¶Î£¬·ÀÖ¹½«À´ÆäËûÉÌ¼ÒÒ»²¢Ö§³Ö»õµ½¸¶¿î
            </summary>
        </member>
        <member name="T:Himall.Entities.RechargePresentRuleInfo">
            <summary>
            Himall_RechargePresentRule
            </summary>
        </member>
        <member name="P:Himall.Entities.RechargePresentRuleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.RechargePresentRuleInfo.ChargeAmount">
            <summary>
            ³ä¶àÉÙ
            </summary>
        </member>
        <member name="P:Himall.Entities.RechargePresentRuleInfo.PresentAmount">
            <summary>
            ËÍ¶àÉÙ
            </summary>
        </member>
        <member name="T:Himall.Entities.RefundReasonInfo">
            <summary>
            Himall_RefundReason
            </summary>
        </member>
        <member name="P:Himall.Entities.RefundReasonInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.RefundReasonInfo.AfterSalesText">
            <summary>
            ÊÛºóÔ­Òò
            </summary>
        </member>
        <member name="P:Himall.Entities.RefundReasonInfo.Sequence">
            <summary>
            ÅÅÐò
            </summary>
        </member>
        <member name="T:Himall.Entities.RoleInfo">
            <summary>
            Himall_Role
            </summary>
        </member>
        <member name="P:Himall.Entities.RoleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.RoleInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.RoleInfo.RoleName">
            <summary>
            ½ÇÉ«Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.RoleInfo.Description">
            <summary>
            ËµÃ÷
            </summary>
        </member>
        <member name="P:Himall.Entities.RoleInfo.RolePrivilegeInfo">
            <summary>
            Id == RoleId 
            </summary>
        </member>
        <member name="T:Himall.Entities.RolePrivilegeInfo">
            <summary>
            Himall_RolePrivilege
            </summary>
        </member>
        <member name="P:Himall.Entities.RolePrivilegeInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.RolePrivilegeInfo.Privilege">
            <summary>
            È¨ÏÞID
            </summary>
        </member>
        <member name="P:Himall.Entities.RolePrivilegeInfo.RoleId">
            <summary>
            ½ÇÉ«ID
            </summary>
        </member>
        <member name="T:Himall.Entities.SKUInfo">
            <summary>
            Himall_SKU
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.Id">
            <summary>
            ÉÌÆ·ID_ÑÕÉ«¹æ¸ñID_ÑÕÉ«¹æ¸ñID_³ß´ç¹æ¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.AutoId">
            <summary>
            ×ÔÔöÖ÷¼üId
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.Color">
            <summary>
            ÑÕÉ«¹æ¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.Size">
            <summary>
            ³ß´ç¹æ¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.Version">
            <summary>
            °æ±¾¹æ¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.Sku">
            <summary>
            SKU
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.Stock">
            <summary>
            ¿â´æ
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.CostPrice">
            <summary>
            ³É±¾¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.SalePrice">
            <summary>
            ÏúÊÛ¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.ShowPic">
            <summary>
            ÏÔÊ¾Í¼Æ¬
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.SafeStock">
            <summary>
            ¾¯½ä¿â´æ
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.ColorAlias">
            <summary>
            颜色别名
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.SizeAlias">
            <summary>
            尺码别名
            </summary>
        </member>
        <member name="P:Himall.Entities.SKUInfo.VersionAlias">
            <summary>
            规格别名
            </summary>
        </member>
        <member name="T:Himall.Entities.SearchProductInfo">
            <summary>
            Himall_SearchProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.ProductId">
            <summary>
            ÉÌÆ·Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.ProductName">
            <summary>
            ÉÌÆ·Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.ShopId">
            <summary>
            µêÆÌId
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.BrandId">
            <summary>
            Æ·ÅÆId
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.BrandName">
            <summary>
            Æ·ÅÆÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.BrandLogo">
            <summary>
            Æ·ÅÆLogo
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.FirstCateId">
            <summary>
            Ò»¼¶·ÖÀàId
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.FirstCateName">
            <summary>
            Ò»¼¶·ÖÀàÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.SecondCateId">
            <summary>
            ¶þ¼¶·ÖÀàId
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.SecondCateName">
            <summary>
            ¶þ¼¶·ÖÀàÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.ThirdCateId">
            <summary>
            Èý¼¶·ÖÀàId
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.ThirdCateName">
            <summary>
            Èý¼¶·ÖÀàÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.AttrValues">
            <summary>
            ÊôÐÔÖµIdÓÃÓ¢ÎÄ¶ººÅ·Ö¸ô
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.Comments">
            <summary>
            ÆÀÂÛÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.SaleCount">
            <summary>
            ³É½»Á¿
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.SalePrice">
            <summary>
            ÊÛ¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.OnSaleTime">
            <summary>
            ÉÏ¼ÜÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.ImagePath">
            <summary>
            ÉÌÆ·Í¼Æ¬µØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.SearchProductInfo.CanSearch">
            <summary>
            ¿ÉÒÔËÑË÷
            </summary>
        </member>
        <member name="T:Himall.Entities.SellerSpecificationValueInfo">
            <summary>
            Himall_SellerSpecificationValue
            </summary>
        </member>
        <member name="P:Himall.Entities.SellerSpecificationValueInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SellerSpecificationValueInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.SellerSpecificationValueInfo.ValueId">
            <summary>
            ¹æ¸ñÖµID
            </summary>
        </member>
        <member name="P:Himall.Entities.SellerSpecificationValueInfo.Specification">
            <summary>
            ¹æ¸ñ£¨ÑÕÉ«¡¢³ß´ç¡¢°æ±¾£©
            </summary>
        </member>
        <member name="P:Himall.Entities.SellerSpecificationValueInfo.TypeId">
            <summary>
            ÀàÐÍID
            </summary>
        </member>
        <member name="P:Himall.Entities.SellerSpecificationValueInfo.Value">
            <summary>
            ÉÌ¼ÒµÄ¹æ¸ñÖµ
            </summary>
        </member>
        <member name="T:Himall.Entities.SendMessageRecordInfo">
            <summary>
            Himall_SendMessageRecord
            </summary>
        </member>
        <member name="P:Himall.Entities.SendMessageRecordInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SendMessageRecordInfo.MessageType">
            <summary>
            ÏûÏ¢Àà±ð
            </summary>
        </member>
        <member name="P:Himall.Entities.SendMessageRecordInfo.ContentType">
            <summary>
            ÄÚÈÝÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.SendMessageRecordInfo.SendContent">
            <summary>
            ·¢ËÍÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.SendMessageRecordInfo.ToUserLabel">
            <summary>
            ·¢ËÍ¶ÔÏó
            </summary>
        </member>
        <member name="P:Himall.Entities.SendMessageRecordInfo.SendState">
            <summary>
            ·¢ËÍ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.SendMessageRecordInfo.SendTime">
            <summary>
            ·¢ËÍÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.SendmessagerecordCouponInfo">
            <summary>
            Himall_SendmessagerecordCoupon
            </summary>
        </member>
        <member name="P:Himall.Entities.SendmessagerecordCouponInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SendmessagerecordCouponInfo.MessageId">
            <summary>
            MessageId
            </summary>
        </member>
        <member name="P:Himall.Entities.SendmessagerecordCouponInfo.CouponId">
            <summary>
            CouponId
            </summary>
        </member>
        <member name="T:Himall.Entities.SendmessagerecordCouponSNInfo">
            <summary>
            Himall_SendmessagerecordCouponSN
            </summary>
        </member>
        <member name="P:Himall.Entities.SendmessagerecordCouponSNInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SendmessagerecordCouponSNInfo.MessageId">
            <summary>
            MessageId
            </summary>
        </member>
        <member name="P:Himall.Entities.SendmessagerecordCouponSNInfo.CouponSN">
            <summary>
            CouponSN
            </summary>
        </member>
        <member name="T:Himall.Entities.SensitiveWordInfo">
            <summary>
            Himall_SensitiveWord
            </summary>
        </member>
        <member name="P:Himall.Entities.SensitiveWordInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.SensitiveWordInfo.SensitiveWord">
            <summary>
            Ãô¸Ð´Ê
            </summary>
        </member>
        <member name="P:Himall.Entities.SensitiveWordInfo.CategoryName">
            <summary>
            Ãô¸Ð´ÊÀà±ð
            </summary>
        </member>
        <member name="T:Himall.Entities.SettledInfo">
            <summary>
            Himall_Settled
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.BusinessType">
            <summary>
            ÉÌ¼ÒÀàÐÍ 0¡¢½öÆóÒµ¿ÉÈë×¤£»1¡¢½ö¸öÈË¿ÉÈë×¤£»2¡¢ÆóÒµºÍ¸öÈË¾ù¿É
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.SettlementAccountType">
            <summary>
            ÉÌ¼Ò½áËãÀàÐÍ 0¡¢½öÒøÐÐÕË»§£»1¡¢½öÎ¢ÐÅÕË»§£»2¡¢ÒøÐÐÕË»§¼°Î¢ÐÅÕË»§¾ù¿É
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.TrialDays">
            <summary>
            ÊÔÓÃÌìÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsCity">
            <summary>
            µØÖ·±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsPeopleNumber">
            <summary>
            ÈËÊý±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsAddress">
            <summary>
            ÏêÏ¸µØÖ·±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsBusinessLicenseCode">
            <summary>
            ÓªÒµÖ´ÕÕºÅ±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsBusinessScope">
            <summary>
            ¾­Óª·¶Î§±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsBusinessLicense">
            <summary>
            ÓªÒµÖ´ÕÕ±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsAgencyCode">
            <summary>
            »ú¹¹´úÂë±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsAgencyCodeLicense">
            <summary>
            »ú¹¹´úÂëÖ¤±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsTaxpayerToProve">
            <summary>
            ÄÉË°ÈËÖ¤Ã÷±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.CompanyVerificationType">
            <summary>
            ÑéÖ¤ÀàÐÍ 0¡¢ÑéÖ¤ÊÖ»ú£»1¡¢ÑéÖ¤ÓÊÏä£»2¡¢¾ùÐèÑéÖ¤
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsSName">
            <summary>
            ¸öÈËÐÕÃû±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsSCity">
            <summary>
            ¸öÈËµØÖ·±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsSAddress">
            <summary>
            ¸öÈËÏêÏ¸µØÖ·±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsSIDCard">
            <summary>
            ¸öÈËÉí·ÝÖ¤±ØÌî 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.IsSIdCardUrl">
            <summary>
            ¸öÈËÉí·ÝÖ¤ÉÏ´« 0¡¢·Ç±ØÌî£»1¡¢±ØÌî
            </summary>
        </member>
        <member name="P:Himall.Entities.SettledInfo.SelfVerificationType">
            <summary>
            ¸öÈËÑéÖ¤ÀàÐÍ 0¡¢ÑéÖ¤ÊÖ»ú£»1¡¢ÑéÖ¤ÓÊÏä£»2¡¢¾ùÐèÑéÖ¤
            </summary>
        </member>
        <member name="T:Himall.Entities.ShippingAddressInfo">
            <summary>
            Himall_ShippingAddress
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.RegionId">
            <summary>
            ÇøÓòID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.ShipTo">
            <summary>
            ÊÕ»õÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.Address">
            <summary>
            ÊÕ»õ¾ßÌå½ÖµÀÐÅÏ¢
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.AddressDetail">
            <summary>
            µØÖ·ÏêÇé(Â¥¶°-ÃÅÅÆ)
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.Phone">
            <summary>
            ÊÕ»õÈËµç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.IsDefault">
            <summary>
            ÊÇ·ñÎªÄ¬ÈÏ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.IsQuick">
            <summary>
            ÊÇ·ñÎªÇáËÉ¹ºµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.Longitude">
            <summary>
            ¾­¶È
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingAddressInfo.Latitude">
            <summary>
            Î³¶È
            </summary>
        </member>
        <member name="T:Himall.Entities.ShippingFreeGroupInfo">
            <summary>
            Himall_ShippingFreeGroup
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeGroupInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeGroupInfo.TemplateId">
            <summary>
            ÔË·ÑÄ£°æID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeGroupInfo.ConditionType">
            <summary>
            °üÓÊÌõ¼þÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeGroupInfo.ConditionNumber">
            <summary>
            °üÓÊÌõ¼þÖµ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeGroupInfo.ShippingFreeRegionInfo">
            <summary>
            Id == GroupId 
            </summary>
        </member>
        <member name="T:Himall.Entities.ShippingFreeRegionInfo">
            <summary>
            Himall_ShippingFreeRegion
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.TemplateId">
            <summary>
            TemplateId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.GroupId">
            <summary>
            GroupId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.RegionId">
            <summary>
            RegionId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.RegionPath">
            <summary>
            µØÇøÈ«Â·¾¶
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.ProvinceId">
            <summary>
            省会ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.ProvinceName">
            <summary>
            省会名称
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.CityId">
            <summary>
            市ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.CityName">
            <summary>
            市区名称
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.CountyId">
            <summary>
            县/区ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.CountyName">
            <summary>
            县区名称
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.TownIds">
            <summary>
            乡镇ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShippingFreeRegionInfo.TownNames">
            <summary>
            乡镇名称
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopInfo">
            <summary>
            Himall_Shop
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.GradeId">
            <summary>
            µêÆÌµÈ¼¶
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.Logo">
            <summary>
            µêÆÌLOGOÂ·¾¶
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.SubDomains">
            <summary>
            Ô¤Áô×ÓÓòÃû£¬Î´Ê¹ÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.Theme">
            <summary>
            Ô¤ÁôÖ÷Ìâ£¬Î´Ê¹ÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.IsSelf">
            <summary>
            ÊÇ·ñÊÇ¹Ù·½×ÔÓªµê
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ShopStatus">
            <summary>
            µêÆÌ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.RefuseReason">
            <summary>
            ÉóºË¾Ü¾øÔ­Òò
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.CreateDate">
            <summary>
            µêÆÌ´´½¨ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.EndDate">
            <summary>
            µêÆÌ¹ýÆÚÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.CompanyName">
            <summary>
            ¹«Ë¾Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.CompanyRegionId">
            <summary>
            ¹«Ë¾Ê¡ÊÐÇø
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.CompanyAddress">
            <summary>
            ¹«Ë¾µØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.CompanyPhone">
            <summary>
            ¹«Ë¾µç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.CompanyEmployeeCount">
            <summary>
            ¹«Ë¾Ô±¹¤ÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.CompanyRegisteredCapital">
            <summary>
            ¹«Ë¾×¢²á×Ê½ð
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ContactsName">
            <summary>
            ÁªÏµÈËÐÕÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ContactsPhone">
            <summary>
            ÁªÏµµç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ContactsEmail">
            <summary>
            ÁªÏµEmail
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BusinessLicenceNumber">
            <summary>
            ÓªÒµÖ´ÕÕºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BusinessLicenceNumberPhoto">
            <summary>
            ÓªÒµÖ´ÕÕ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BusinessLicenceRegionId">
            <summary>
            ÓªÒµÖ´ÕÕËùÔÚµØ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BusinessLicenceStart">
            <summary>
            ÓªÒµÖ´ÕÕÓÐÐ§ÆÚ¿ªÊ¼
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BusinessLicenceEnd">
            <summary>
            ÓªÒµÖ´ÕÕÓÐÐ§ÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BusinessSphere">
            <summary>
            ·¨¶¨¾­Óª·¶Î§
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.OrganizationCode">
            <summary>
            ×éÖ¯»ú¹¹´úÂë
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.OrganizationCodePhoto">
            <summary>
            ×éÖ¯»ú¹¹Ö´ÕÕ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.GeneralTaxpayerPhot">
            <summary>
            Ò»°ãÄÉË°ÈËÖ¤Ã÷
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BankAccountName">
            <summary>
            ÒøÐÐ¿ª»§Ãû
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BankAccountNumber">
            <summary>
            ¹«Ë¾ÒøÐÐÕËºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BankName">
            <summary>
            ¿ª»§ÒøÐÐÖ§ÐÐÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BankCode">
            <summary>
            Ö§ÐÐÁªÐÐºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BankRegionId">
            <summary>
            ¿ª»§ÒøÐÐËùÔÚµØ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BankPhoto">
            <summary>
            BankPhoto
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.TaxRegistrationCertificate">
            <summary>
            Ë°ÎñµÇ¼ÇÖ¤
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.TaxpayerId">
            <summary>
            Ë°ÎñµÇ¼ÇÖ¤ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.TaxRegistrationCertificatePhoto">
            <summary>
            ÄÉË°ÈËÊ¶±ðºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.PayPhoto">
            <summary>
            Ö§¸¶Æ¾Ö¤
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.PayRemark">
            <summary>
            Ö§¸¶×¢ÊÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.SenderName">
            <summary>
            ÉÌ¼Ò·¢»õÈËÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.SenderAddress">
            <summary>
            ÉÌ¼Ò·¢»õÈËµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.SenderPhone">
            <summary>
            ÉÌ¼Ò·¢»õÈËµç»°
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.Freight">
            <summary>
            ÔË·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.FreeFreight">
            <summary>
            ¶àÉÙÇ®¿ªÊ¼ÃâÔË·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.Stage">
            <summary>
            ×¢²á²½Öè
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.SenderRegionId">
            <summary>
            ÉÌ¼Ò·¢»õÈËÊ¡ÊÐÇø
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BusinessLicenseCert">
            <summary>
            ÓªÒµÖ´ÕÕÖ¤Êé
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ProductCert">
            <summary>
            ÉÌÆ·Ö¤Êé
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.OtherCert">
            <summary>
            ÆäËûÖ¤Êé
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.legalPerson">
            <summary>
            ·¨ÈË´ú±í
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.CompanyFoundingDate">
            <summary>
            ¹«Ë¾³ÉÁ¢ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.BusinessType">
            <summary>
            0¡¢ÆóÒµ£»1¡¢¸öÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.IDCard">
            <summary>
            Éí·ÝÖ¤ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.IDCardUrl">
            <summary>
            Éí·ÝÖ¤URL
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.IDCardUrl2">
            <summary>
            Éí·ÝÖ¤ÕÕÆ¬URL2
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.WeiXinNickName">
            <summary>
            Î¢ÐÅêÇ³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.WeiXinSex">
            <summary>
            Î¢ÐÅÐÔ±ð;0¡¢ÄÐ£»1¡¢Å®
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.WeiXinAddress">
            <summary>
            Î¢ÐÅµØÇø
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.WeiXinTrueName">
            <summary>
            Î¢ÐÅÕæÊµÐÕÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.WeiXinOpenId">
            <summary>
            Î¢ÐÅ±êÊ¶·û
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.WeiXinImg">
            <summary>
            WeiXinImg
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.AutoAllotOrder">
            <summary>
            ÉÌ¼ÒÊÇ·ñ¿ªÆô×Ô¶¯·ÖÅä¶©µ¥
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.IsAutoPrint">
            <summary>
            ÉÌ¼ÒÊÇ·ñ¿ªÆô×Ô¶¯´òÓ¡
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.PrintCount">
            <summary>
            ´òÓ¡ÕÅÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.IsOpenTopImageAd">
            <summary>
            ÊÇ·ñ¿ªÆôÍ·²¿Í¼Æ¬¹ã¸æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ShowShopAuditStatus">
            <summary>
            显示店铺状态
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopInfo.ShopAuditStatus">
            <summary>
            店铺状态
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopAuditStatus.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopAuditStatus.Unusable">
            <summary>
            不可用
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopAuditStatus.WaitAudit">
            <summary>
            待审核
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopAuditStatus.WaitPay">
            <summary>
            待付款
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopAuditStatus.Refuse">
            <summary>
            被拒绝
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopAuditStatus.WaitConfirm">
            <summary>
            待确认
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopAuditStatus.Freeze">
            <summary>
            冻结
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopAuditStatus.Open">
            <summary>
            开启
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopAuditStatus.HasExpired">
            <summary>
            已过期
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopInfo.ShopStage">
            <summary>
            店铺进度
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopStage.Agreement">
            <summary>
            许可协议
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopStage.CompanyInfo">
            <summary>
            公司信息
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopStage.FinancialInfo">
            <summary>
            财务信息
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopStage.ShopInfo">
            <summary>
            店铺信息
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopStage.UploadPayOrder">
            <summary>
            上传支付凭证
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopInfo.ShopStage.Finish">
            <summary>
            完成
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopInfo.ShopCategoryAndProductIdModel">
            <summary>
            商家商品分类与产品Id实体
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ShopCategoryAndProductIdModel.ProductId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ShopCategoryAndProductIdModel.ShopCategoryId">
            <summary>
            商家分类ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInfo.ShopCategoryAndProductIdModel.CategoryName">
            <summary>
            商家分类名称
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopAccountInfo">
            <summary>
            Himall_ShopAccount
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountInfo.ShopId">
            <summary>
            µêÆÌId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountInfo.Balance">
            <summary>
            ÕÊ»§Óà¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountInfo.PendingSettlement">
            <summary>
            ´ý½áËã
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountInfo.Settled">
            <summary>
            ÒÑ½áËã
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountInfo.ReMark">
            <summary>
            ReMark
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopAccountItemInfo">
            <summary>
            Himall_ShopAccountItem
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.ShopName">
            <summary>
            µêÆÌÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.AccountNo">
            <summary>
            ½»Ò×Á÷Ë®ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.AccoutID">
            <summary>
            ¹ØÁª×Ê½ð±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.CreateTime">
            <summary>
            ´´½¨Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.Amount">
            <summary>
            ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.Balance">
            <summary>
            ÕÊ»§Ê£Óà
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.TradeType">
            <summary>
            ½»Ò×ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.IsIncome">
            <summary>
            ÊÇ·ñÊÕÈë
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.ReMark">
            <summary>
            ½»Ò×±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.DetailId">
            <summary>
            ÏêÇéID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopAccountItemInfo.SettlementCycle">
            <summary>
            ½áËãÖÜÆÚ(ÒÔÌìÎªµ¥Î»)(ÈßÓà×Ö¶Î)
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBonusInfo">
            <summary>
            Himall_ShopBonus
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.Count">
            <summary>
            ºì°üÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.RandomAmountStart">
            <summary>
            Ëæ»ú·¶Î§Start
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.RandomAmountEnd">
            <summary>
            Ëæ»ú·¶Î§End
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.UseState">
            <summary>
            1:ÂúXÔªÊ¹ÓÃ  2£ºÃ»ÓÐÏÞÖÆ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.UsrStatePrice">
            <summary>
            Âú¶àÉÙÔª
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.GrantPrice">
            <summary>
            Âú¶àÉÙÔª²Å·¢·Åºì°ü
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.DateStart">
            <summary>
            DateStart
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.DateEnd">
            <summary>
            DateEnd
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.BonusDateStart">
            <summary>
            BonusDateStart
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.BonusDateEnd">
            <summary>
            BonusDateEnd
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.ShareTitle">
            <summary>
            ·ÖÏí
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.ShareDetail">
            <summary>
            ·ÖÏí
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.ShareImg">
            <summary>
            ·ÖÏí
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.SynchronizeCard">
            <summary>
            ÊÇ·ñÍ¬²½µ½Î¢ÐÅ¿¨°ü£¬ÊÇµÄ»°²Å³öÏÖÎ¢ÐÅ¿¨¾íÏà¹ØUI
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.CardTitle">
            <summary>
            Î¢ÐÅ¿¨¾íÏà¹Ø
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.CardColor">
            <summary>
            Î¢ÐÅ¿¨¾íÏà¹Ø
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.CardSubtitle">
            <summary>
            Î¢ÐÅ¿¨¾íÏà¹Ø
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.IsInvalid">
            <summary>
            ÊÇ·ñÊ§Ð§
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.ReceiveCount">
            <summary>
            ÁìÈ¡ÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.QRPath">
            <summary>
            ¶þÎ¬ÂëÂ·¾¶
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusInfo.WXCardState">
            <summary>
            Î¢ÐÅ¿¨¾íÉóºË×´Ì¬
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBonusGrantInfo">
            <summary>
            Himall_ShopBonusGrant
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusGrantInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusGrantInfo.ShopBonusId">
            <summary>
            ºì°üId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusGrantInfo.UserId">
            <summary>
            ·¢·ÅÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusGrantInfo.OrderId">
            <summary>
            OrderId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusGrantInfo.BonusQR">
            <summary>
            BonusQR
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBonusReceiveInfo">
            <summary>
            Himall_ShopBonusReceive
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.BonusGrantId">
            <summary>
            ºì°üId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.Price">
            <summary>
            Ãæ¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.State">
            <summary>
            1.Î´Ê¹ÓÃ  2.ÒÑÊ¹ÓÃ  3.ÒÑ¹ýÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.ReceiveTime">
            <summary>
            ÁìÈ¡Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.UsedTime">
            <summary>
            Ê¹ÓÃÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.UserId">
            <summary>
            UserID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.UsedOrderId">
            <summary>
            Ê¹ÓÃµÄ¶©µ¥ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.WXName">
            <summary>
            WXName
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBonusReceiveInfo.WXHead">
            <summary>
            WXHead
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBranchInfo">
            <summary>
            Himall_ShopBranch
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.Id">
            <summary>
            Ö÷¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.ShopId">
            <summary>
            ÉÌ¼ÒµêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.ShopBranchName">
            <summary>
            ÃÅµêÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.AddressId">
            <summary>
            ÃÅµêµØÖ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.AddressPath">
            <summary>
            ËùÔÚÇøÓòÈ«Â·¾¶±àºÅ(Ê¡£¬ÊÐ£¬Çø)
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.AddressDetail">
            <summary>
            AddressDetail
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.ContactUser">
            <summary>
            ÁªÏµÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.ContactPhone">
            <summary>
            ÁªÏµµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.Status">
            <summary>
            ÃÅµê×´Ì¬(0:Õý³££¬1:¶³½á)
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.CreateDate">
            <summary>
            ´´½¨Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.ServeRadius">
            <summary>
            ·þÎñ°ë¾¶
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.Longitude">
            <summary>
            ¾­¶È
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.Latitude">
            <summary>
            Î¬¶È
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.ShopImages">
            <summary>
            ShopImages
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.IsStoreDelive">
            <summary>
            ÊÇ·ñÃÅµêÅäËÍ0:·ñ1:ÊÇ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.IsAboveSelf">
            <summary>
            ÊÇ·ñÉÏÃÅ×ÔÌá0:·ñ1:ÊÇ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.StoreOpenStartTime">
            <summary>
            ÓªÒµÆðÊ¼Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.StoreOpenEndTime">
            <summary>
            ÓªÒµ½áÊøÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.IsRecommend">
            <summary>
            ÊÇ·ñÍÆ¼öÃÅµê
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.RecommendSequence">
            <summary>
            ÍÆ¼öÅÅÐò
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.DeliveFee">
            <summary>
            ÅäËÍ·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.DeliveTotalFee">
            <summary>
            ÆðËÍ·Ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.FreeMailFee">
            <summary>
            °üÓÊ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.DaDaShopId">
            <summary>
            DaDaShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.IsAutoPrint">
            <summary>
            ÊÇ·ñ¿ªÆô×Ô¶¯´òÓ¡
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.PrintCount">
            <summary>
            ´òÓ¡ÕÅÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.IsFreeMail">
            <summary>
            ÊÇ·ñ°üÓÊ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.EnableSellerManager">
            <summary>
            ÊÇ·ñÔÊÐíÉÌ³ÇÔ½È¨
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.IsShelvesProduct">
            <summary>
            ÊÇ·ñ×Ô¶¯ÉÏ¼ÜÉÌÆ·(0:·ñ¡¢1:ÊÇ)
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.Distance">
            <summary>
            门店距离
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInfo.Enabled">
            <summary>
            门店是否可用
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBranchInTagInfo">
            <summary>
            Himall_ShopBranchInTag
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInTagInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInTagInfo.ShopBranchId">
            <summary>
            ÃÅµê¹ÜÀíID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchInTagInfo.ShopBranchTagId">
            <summary>
            ÃÅµê±êÇ©¹ØÁªID
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBranchManagerInfo">
            <summary>
            Himall_ShopBranchManager
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchManagerInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchManagerInfo.ShopBranchId">
            <summary>
            ÃÅµê±íID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchManagerInfo.UserName">
            <summary>
            ÓÃ»§Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchManagerInfo.Password">
            <summary>
            ÃÜÂë
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchManagerInfo.PasswordSalt">
            <summary>
            ÃÜÂë¼ÓÑÎ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchManagerInfo.CreateDate">
            <summary>
            ´´½¨ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchManagerInfo.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchManagerInfo.RealName">
            <summary>
            ÕæÊµÃû³Æ
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBranchSkuInfo">
            <summary>
            Himall_ShopBranchSku
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchSkuInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchSkuInfo.ProductId">
            <summary>
            ÉÌÆ·id(ÈßÓà×Ö¶Î)
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchSkuInfo.SkuId">
            <summary>
            SKU±íId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchSkuInfo.ShopId">
            <summary>
            ÉÌ¼Òid(ÈßÓà×Ö¶Î)
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchSkuInfo.ShopBranchId">
            <summary>
            ÃÅµêid
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchSkuInfo.Stock">
            <summary>
            ¿â´æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchSkuInfo.Status">
            <summary>
            ÃÅµêSKU×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchSkuInfo.CreateDate">
            <summary>
            SKUÌí¼ÓÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBranchTagInfo">
            <summary>
            Himall_ShopBranchTag
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchTagInfo.Id">
            <summary>
            ÃÅµê±êÇ©ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBranchTagInfo.Title">
            <summary>
            ±êÇ©Ãû³Æ
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBrandInfo">
            <summary>
            Himall_ShopBrand
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandInfo.ShopId">
            <summary>
            ÉÌ¼ÒId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandInfo.BrandId">
            <summary>
            Æ·ÅÆId
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBrandApplyInfo">
            <summary>
            Himall_ShopBrandApply
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.ShopId">
            <summary>
            ÉÌ¼ÒId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.BrandId">
            <summary>
            Æ·ÅÆId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.BrandName">
            <summary>
            Æ·ÅÆÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.Logo">
            <summary>
            Æ·ÅÆLogo
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.Description">
            <summary>
            ÃèÊö
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.AuthCertificate">
            <summary>
            Æ·ÅÆÊÚÈ¨Ö¤Êé
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.ApplyMode">
            <summary>
            ÉêÇëÀàÐÍ Ã¶¾Ù BrandApplyMode
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.Remark">
            <summary>
            ±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.AuditStatus">
            <summary>
            ÉóºË×´Ì¬ Ã¶¾Ù BrandAuditStatus
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.ApplyTime">
            <summary>
            ²Ù×÷Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopBrandApplyInfo.PlatRemark">
            <summary>
            Æ½Ì¨±¸×¢
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBrandApplyInfo.BrandAuditStatus">
            <summary>
            审核状态
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopBrandApplyInfo.BrandAuditStatus.UnAudit">
            <summary>
            未审核
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopBrandApplyInfo.BrandAuditStatus.Audited">
            <summary>
            通过审核
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopBrandApplyInfo.BrandAuditStatus.Refused">
            <summary>
            拒绝通过
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopBrandApplyInfo.BrandApplyMode">
            <summary>
            申请品牌类型
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopBrandApplyInfo.BrandApplyMode.Exist">
            <summary>
            平台已有品牌
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopBrandApplyInfo.BrandApplyMode.New">
            <summary>
            新品牌
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopCategoryInfo">
            <summary>
            Himall_ShopCategory
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopCategoryInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopCategoryInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopCategoryInfo.ParentCategoryId">
            <summary>
            ÉÏ¼¶·ÖÀàID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopCategoryInfo.Name">
            <summary>
            ·ÖÀàÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopCategoryInfo.DisplaySequence">
            <summary>
            DisplaySequence
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopCategoryInfo.IsShow">
            <summary>
            ÊÇ·ñÏÔÊ¾
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopFooterInfo">
            <summary>
            Himall_ShopFooter
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopFooterInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopFooterInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopFooterInfo.Footer">
            <summary>
            Footer
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopGradeInfo">
            <summary>
            Himall_ShopGrade
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopGradeInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopGradeInfo.Name">
            <summary>
            µêÆÌµÈ¼¶Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopGradeInfo.ProductLimit">
            <summary>
            ×î´óÉÏ´«ÉÌÆ·ÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopGradeInfo.ImageLimit">
            <summary>
            ×î´óÍ¼Æ¬¿ÉÊ¹ÓÃ¿Õ¼äÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopGradeInfo.TemplateLimit">
            <summary>
            TemplateLimit
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopGradeInfo.ChargeStandard">
            <summary>
            ChargeStandard
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopGradeInfo.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopHomeModuleInfo">
            <summary>
            Himall_ShopHomeModule
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleInfo.Name">
            <summary>
            Ä£¿éÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleInfo.IsEnable">
            <summary>
            ÊÇ·ñÆôÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleInfo.DisplaySequence">
            <summary>
            ÅÅÐò
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleInfo.Url">
            <summary>
            Â¥²ãÁ´½Ó
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopHomeModuleProductInfo">
            <summary>
            Himall_ShopHomeModuleProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleProductInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleProductInfo.HomeModuleId">
            <summary>
            HomeModuleId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleProductInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleProductInfo.DisplaySequence">
            <summary>
            ÅÅÐò
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopHomeModuleTopImgInfo">
            <summary>
            Himall_ShopHomeModuleTopImg
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleTopImgInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleTopImgInfo.ImgPath">
            <summary>
            ImgPath
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleTopImgInfo.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleTopImgInfo.HomeModuleId">
            <summary>
            HomeModuleId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopHomeModuleTopImgInfo.DisplaySequence">
            <summary>
            DisplaySequence
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopInvoiceConfigInfo">
            <summary>
            Himall_ShopInvoiceConfig
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInvoiceConfigInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInvoiceConfigInfo.ShopId">
            <summary>
            ÉÌ¼ÒID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInvoiceConfigInfo.IsInvoice">
            <summary>
            ÊÇ·ñÌá¹©·¢Æ±
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInvoiceConfigInfo.IsPlainInvoice">
            <summary>
            ÊÇ·ñÌá¹©ÆÕÍ¨·¢Æ±
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInvoiceConfigInfo.IsElectronicInvoice">
            <summary>
            ÊÇ·ñÌá¹©µç×Ó·¢Æ±
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInvoiceConfigInfo.PlainInvoiceRate">
            <summary>
            ÆÕÍ¨·¢Æ±Ë°ÂÊ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInvoiceConfigInfo.IsVatInvoice">
            <summary>
            ÊÇ·ñÌá¹©ÔöÖµË°·¢Æ±
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInvoiceConfigInfo.VatInvoiceDay">
            <summary>
            ¶©µ¥Íê³Éºó¶àÉÙÌì¿ª¾ßÔöÖµË°·¢Æ±
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopInvoiceConfigInfo.VatInvoiceRate">
            <summary>
            ÔöÖµË°Ë°ÂÊ
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopOpenApiSettingInfo">
            <summary>
            Himall_ShopOpenApiSetting
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopOpenApiSettingInfo.Id">
            <summary>
            Ö÷¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopOpenApiSettingInfo.ShopId">
            <summary>
            µêÆÌ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopOpenApiSettingInfo.AppKey">
            <summary>
            app_key
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopOpenApiSettingInfo.AppSecreat">
            <summary>
            app_secreat
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopOpenApiSettingInfo.AddDate">
            <summary>
            Ôö¼ÓÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopOpenApiSettingInfo.LastEditDate">
            <summary>
            ×îºóÖØÖÃÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopOpenApiSettingInfo.IsEnable">
            <summary>
            ÊÇ·ñ¿ªÆô
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopOpenApiSettingInfo.IsRegistered">
            <summary>
            ÊÇ·ñÒÑ×¢²á
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopRenewRecordInfo">
            <summary>
            Himall_ShopRenewRecord
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopRenewRecordInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopRenewRecordInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopRenewRecordInfo.Operator">
            <summary>
            ²Ù×÷Õß
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopRenewRecordInfo.OperateDate">
            <summary>
            ²Ù×÷ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopRenewRecordInfo.OperateContent">
            <summary>
            ²Ù×÷Ã÷Ï¸
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopRenewRecordInfo.OperateType">
            <summary>
            ÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopRenewRecordInfo.Amount">
            <summary>
            Ö§¸¶½ð¶î
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopRenewRecordInfo.EnumOperateType">
            <summary>
            续费类型
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopRenewRecordInfo.EnumOperateType.ReNew">
            <summary>
            续费当前套餐
            </summary>
        </member>
        <member name="F:Himall.Entities.ShopRenewRecordInfo.EnumOperateType.Upgrade">
            <summary>
            升级套餐
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopRenewRecordInfo.TradeNo">
            <summary>
            续费或者升级时支付返回的流水号
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopRenewRecordInfo.GradeId">
            <summary>
            店铺等级
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopShipperInfo">
            <summary>
            Himall_ShopShipper
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.ShopId">
            <summary>
            ÉÌ¼Ò±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.IsDefaultSendGoods">
            <summary>
            ÊÇ·ñÎªÄ¬ÈÏ·¢»õµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.IsDefaultGetGoods">
            <summary>
            ÊÇ·ñÄ¬ÈÏÊÕ»õµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.IsDefaultVerification">
            <summary>
            Ä¬ÈÏºËÏúµØÖ·
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.ShipperTag">
            <summary>
            ·¢»õµãÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.ShipperName">
            <summary>
            ·¢»õÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.RegionId">
            <summary>
            ÇøÓòID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.Address">
            <summary>
            ¾ßÌå½ÖµÀÐÅÏ¢
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.TelPhone">
            <summary>
            ÊÖ»úºÅÂë
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.Zipcode">
            <summary>
            Zipcode
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.WxOpenId">
            <summary>
            Î¢ÐÅOpenIDÓÃÓÚ·¢ÐÅÏ¢µ½Î¢ÐÅ¸ø·¢»õÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.Longitude">
            <summary>
            ¾­¶È
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopShipperInfo.Latitude">
            <summary>
            Î³¶È
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopVistiInfo">
            <summary>
            Himall_ShopVisti
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.ShopBranchId">
            <summary>
            ÃÅµê±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.Date">
            <summary>
            ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.VistiCounts">
            <summary>
            ä¯ÀÀÈËÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.OrderUserCount">
            <summary>
            ÏÂµ¥ÈËÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.OrderCount">
            <summary>
            ¶©µ¥Êý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.OrderProductCount">
            <summary>
            ÏÂµ¥¼þÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.OrderAmount">
            <summary>
            ÏÂµ¥½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.OrderPayUserCount">
            <summary>
            ÏÂµ¥¸¶¿îÈËÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.OrderPayCount">
            <summary>
            ¸¶¿î¶©µ¥Êý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.SaleCounts">
            <summary>
            ¸¶¿îÏÂµ¥¼þÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.SaleAmounts">
            <summary>
            ¸¶¿î½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.OrderRefundProductCount">
            <summary>
            ÍË¿î¼þÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.OrderRefundAmount">
            <summary>
            ÍË¿î½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.OrderRefundCount">
            <summary>
            ÍË¿î¶©µ¥Êý
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.UnitPrice">
            <summary>
            ¼þµ¥¼Û
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.JointRate">
            <summary>
            Á¬´øÂÊ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopVistiInfo.StatisticFlag">
            <summary>
            ÊÇ·ñÒÑ¾­Í³¼Æ(0£ºÎ´Í³¼Æ,1ÒÑÍ³¼Æ)
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopWdgjSettingInfo">
            <summary>
            Himall_ShopWdgjSetting
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWdgjSettingInfo.Id">
            <summary>
            Ö÷¼ü
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWdgjSettingInfo.ShopId">
            <summary>
            µêÆÌId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWdgjSettingInfo.uCode">
            <summary>
            ½ÓÈëÂë
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWdgjSettingInfo.uSign">
            <summary>
            Ð§ÑéÂë
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWdgjSettingInfo.IsEnable">
            <summary>
            ÊÇ·ñ¿ªÆô
            </summary>
        </member>
        <member name="T:Himall.Entities.ShopWithDrawInfo">
            <summary>
            Himall_ShopWithDraw
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.CashNo">
            <summary>
            ÌáÏÖÁ÷Ë®ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.ApplyTime">
            <summary>
            ÉêÇëÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.Status">
            <summary>
            ÌáÏÖ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.CashType">
            <summary>
            ÌáÏÖ·½Ê½
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.CashAmount">
            <summary>
            ÌáÏÖ½ð¶î
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.Account">
            <summary>
            ÌáÏÖÕÊºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.AccountName">
            <summary>
            ÌáÏÖÈË
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.SellerId">
            <summary>
            SellerId
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.SellerName">
            <summary>
            ÉêÇëÉÌ¼ÒÓÃ»§Ãû
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.DealTime">
            <summary>
            ´¦ÀíÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.ShopRemark">
            <summary>
            ÉÌ¼Ò±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.PlatRemark">
            <summary>
            Æ½Ì¨±¸×¢
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.ShopName">
            <summary>
            ÉÌµêÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.ShopWithDrawInfo.SerialNo">
            <summary>
            Ö§¸¶ÉÌÁ÷Ë®ºÅ
            </summary>
        </member>
        <member name="T:Himall.Entities.ShoppingCartInfo">
            <summary>
            Himall_ShoppingCart
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartInfo.UserId">
            <summary>
            ÓÃ»§ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartInfo.ShopBranchId">
            <summary>
            ÃÅµêID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartInfo.SkuId">
            <summary>
            SKUID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartInfo.Quantity">
            <summary>
            ¹ºÂòÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartInfo.AddTime">
            <summary>
            Ìí¼ÓÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartInfo.Items">
            <summary>
            购物车 商品项
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartInfo.MemberId">
            <summary>
            会员Id
            </summary>
        </member>
        <member name="T:Himall.Entities.SiteSettingInfo">
            <summary>
            Himall_SiteSetting
            </summary>
        </member>
        <member name="P:Himall.Entities.SiteSettingInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SiteSettingInfo.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Himall.Entities.SiteSettingInfo.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Himall.Entities.SiteSignInConfigInfo">
            <summary>
            Himall_SiteSignInConfig
            </summary>
        </member>
        <member name="P:Himall.Entities.SiteSignInConfigInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SiteSignInConfigInfo.IsEnable">
            <summary>
            ¿ªÆôÇ©µ½
            </summary>
        </member>
        <member name="P:Himall.Entities.SiteSignInConfigInfo.DayIntegral">
            <summary>
            Ç©µ½»ñµÃ»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.SiteSignInConfigInfo.DurationCycle">
            <summary>
            ³ÖÐøÖÜÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.SiteSignInConfigInfo.DurationReward">
            <summary>
            ÖÜÆÚ¶îÍâ½±Àø»ý·Ö
            </summary>
        </member>
        <member name="T:Himall.Entities.SlideAdInfo">
            <summary>
            Himall_SlideAd
            </summary>
        </member>
        <member name="P:Himall.Entities.SlideAdInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SlideAdInfo.ShopId">
            <summary>
            µêÆÌID£¬0£ºÆ½Ì¨ÂÖ²¥Í¼  
            </summary>
        </member>
        <member name="P:Himall.Entities.SlideAdInfo.ImageUrl">
            <summary>
            Í¼Æ¬±£´æURL
            </summary>
        </member>
        <member name="P:Himall.Entities.SlideAdInfo.Url">
            <summary>
            Í¼Æ¬Ìø×ªURL
            </summary>
        </member>
        <member name="P:Himall.Entities.SlideAdInfo.DisplaySequence">
            <summary>
            DisplaySequence
            </summary>
        </member>
        <member name="P:Himall.Entities.SlideAdInfo.TypeId">
            <summary>
            TypeId
            </summary>
        </member>
        <member name="P:Himall.Entities.SlideAdInfo.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="T:Himall.Entities.SlideAdInfo.SlideAdType">
            <summary>
            幻灯片类型
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.Initial">
            <summary>
            原数据
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.PlatformHome">
            <summary>
            平台首页轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.PlatformLimitTime">
            <summary>
            平台限时购轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.ShopHome">
            <summary>
            店铺首页轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.VShopHome">
            <summary>
            微店轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.WeixinHome">
            <summary>
            微信首页轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.WapHome">
            <summary>
            触屏版首页轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.WapShopHome">
            <summary>
            触屏版微店首页轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.IOSShopHome">
            <summary>
            IOS首页轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.APPIcon">
             <summary>
            APP首页图标图
             </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.AppGifts">
            <summary>
            APP积分商城轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.AppGuide">
            <summary>
            引导页图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.NearShopBranchHome">
            <summary>
            周边门店轮播图
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.NearShopBranchIcon">
             <summary>
            周边门店图标图
             </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.NearShopBranchSpecial">
            <summary>
            周边门店广告位
            </summary>
        </member>
        <member name="F:Himall.Entities.SlideAdInfo.SlideAdType.NearShopBranchHome2">
            <summary>
            周边门店轮播图2
            </summary>
        </member>
        <member name="T:Himall.Entities.SpecificationValueInfo">
            <summary>
            Himall_SpecificationValue
            </summary>
        </member>
        <member name="P:Himall.Entities.SpecificationValueInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.SpecificationValueInfo.Specification">
            <summary>
            ¹æ¸ñÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.SpecificationValueInfo.TypeId">
            <summary>
            ÀàÐÍID
            </summary>
        </member>
        <member name="P:Himall.Entities.SpecificationValueInfo.Value">
            <summary>
            ¹æ¸ñÖµ
            </summary>
        </member>
        <member name="T:Himall.Entities.StatisticOrderCommentInfo">
            <summary>
            Himall_StatisticOrderComment
            </summary>
        </member>
        <member name="P:Himall.Entities.StatisticOrderCommentInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.StatisticOrderCommentInfo.ShopId">
            <summary>
            ShopId
            </summary>
        </member>
        <member name="P:Himall.Entities.StatisticOrderCommentInfo.CommentKey">
            <summary>
            ÆÀ¼ÛµÄÃ¶¾Ù£¨±¦±´ÓëÃèÊöÏà·û ÉÌ¼ÒµÃ·Ö£©
            </summary>
        </member>
        <member name="P:Himall.Entities.StatisticOrderCommentInfo.CommentValue">
            <summary>
            CommentValue
            </summary>
        </member>
        <member name="T:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey">
            <summary>
            结算状态
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.ProductAndDescription">
            <summary>
            宝贝与描述相符 商家得分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.ProductAndDescriptionPeer">
            <summary>
            宝贝与描述相符 同行业平均分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.ProductAndDescriptionMax">
            <summary>
            宝贝与描述相符 同行业商家最高得分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.ProductAndDescriptionMin">
            <summary>
            宝贝与描述相符 同行业商家最低得分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.SellerDeliverySpeed">
            <summary>
            卖家发货速度 商家得分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.SellerDeliverySpeedPeer">
            <summary>
            卖家发货速度 同行业平均分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.SellerDeliverySpeedMax">
            <summary>
            卖家发货速度 同行业商家最高得分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.SellerDeliverySpeedMin">
            <summary>
            卖家发货速度 同行业商家最低得分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.SellerServiceAttitude">
            <summary>
            卖家服务态度 商家得分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.SellerServiceAttitudePeer">
            <summary>
            卖家服务态度 同行业平均分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.SellerServiceAttitudeMax">
            <summary>
            卖家服务态度 同行业商家最高得分
            </summary>
        </member>
        <member name="F:Himall.Entities.StatisticOrderCommentInfo.EnumCommentKey.SellerServiceAttitudeMin">
            <summary>
            卖家服务态度 同行业商家最低得分
            </summary>
        </member>
        <member name="T:Himall.Entities.TemplateVisualizationSettingInfo">
            <summary>
            Himall_TemplateVisualizationSetting
            </summary>
        </member>
        <member name="P:Himall.Entities.TemplateVisualizationSettingInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.TemplateVisualizationSettingInfo.CurrentTemplateName">
            <summary>
            µ±Ç°Ê¹ÓÃµÄÄ£°åµÄÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.TemplateVisualizationSettingInfo.ShopId">
            <summary>
            µêÆÌId£¨Æ½Ì¨Îª0£©
            </summary>
        </member>
        <member name="T:Himall.Entities.ThemeInfo">
            <summary>
            Himall_Theme
            </summary>
        </member>
        <member name="P:Himall.Entities.ThemeInfo.ThemeId">
            <summary>
            ThemeId
            </summary>
        </member>
        <member name="P:Himall.Entities.ThemeInfo.TypeId">
            <summary>
            0¡¢Ä¬ÈÏÖ÷Ìâ£»1¡¢×Ô¶¨ÒåÖ÷Ìâ
            </summary>
        </member>
        <member name="P:Himall.Entities.ThemeInfo.MainColor">
            <summary>
            ÉÌ³ÇÖ÷É«
            </summary>
        </member>
        <member name="P:Himall.Entities.ThemeInfo.SecondaryColor">
            <summary>
            ÉÌ³Ç¸¨É«
            </summary>
        </member>
        <member name="P:Himall.Entities.ThemeInfo.WritingColor">
            <summary>
            ×ÖÌåÑÕÉ«
            </summary>
        </member>
        <member name="P:Himall.Entities.ThemeInfo.FrameColor">
            <summary>
            ±ß¿òÑÕÉ«
            </summary>
        </member>
        <member name="P:Himall.Entities.ThemeInfo.ClassifiedsColor">
            <summary>
            ÉÌÆ··ÖÀàÀ¸
            </summary>
        </member>
        <member name="P:Himall.Entities.ThemeInfo.IsUse">
            <summary>
            ÊÇ·ñ½«Ö÷ÌâÅäÉ«Ó¦ÓÃÖÁÉÌ³Ç
            </summary>
        </member>
        <member name="T:Himall.Entities.TopicInfo">
            <summary>
            Himall_Topic
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.Name">
            <summary>
            ×¨ÌâÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.FrontCoverImage">
            <summary>
            ·âÃæÍ¼Æ¬
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.TopImage">
            <summary>
            Ö÷Í¼
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.BackgroundImage">
            <summary>
            ±³¾°Í¼Æ¬
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.PlatForm">
            <summary>
            Ê¹ÓÃÖÕ¶Ë
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.Tags">
            <summary>
            ±êÇ©
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.IsRecommend">
            <summary>
            ÊÇ·ñÍÆ¼ö
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicInfo.SelfDefineText">
            <summary>
            ×Ô¶¨ÒåÈÈµã
            </summary>
        </member>
        <member name="T:Himall.Entities.TopicModuleInfo">
            <summary>
            Himall_TopicModule
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicModuleInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicModuleInfo.TopicId">
            <summary>
            ×¨ÌâID
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicModuleInfo.Name">
            <summary>
            ×¨ÌâÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.TopicModuleInfo.TitleAlign">
            <summary>
            ±êÌâÎ»ÖÃ 0¡¢left£»1¡¢center £»2¡¢right
            </summary>
        </member>
        <member name="T:Himall.Entities.TypeInfo">
            <summary>
            Himall_Type
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.Name">
            <summary>
            ÀàÐÍÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.IsSupportColor">
            <summary>
            ÊÇ·ñÖ§³ÖÑÕÉ«¹æ¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.IsSupportSize">
            <summary>
            ÊÇ·ñÖ§³Ö³ß´ç¹æ¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.IsSupportVersion">
            <summary>
            ÊÇ·ñÖ§³Ö°æ±¾¹æ¸ñ
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.IsDeleted">
            <summary>
            ÊÇ·ñÒÑÉ¾³ý
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.ColorAlias">
            <summary>
            ÑÕÉ«±ðÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.SizeAlias">
            <summary>
            ³ßÂë±ðÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.VersionAlias">
            <summary>
            ¹æ¸ñ±ðÃû
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.TypeBrandInfo">
            <summary>
            关联品牌
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.SpecificationValueInfo">
            <summary>
            关联规格值
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeInfo.AttributeInfo">
            <summary>
            关联属性
            </summary>
        </member>
        <member name="T:Himall.Entities.TypeBrandInfo">
            <summary>
            Himall_TypeBrand
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeBrandInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeBrandInfo.TypeId">
            <summary>
            TypeId
            </summary>
        </member>
        <member name="P:Himall.Entities.TypeBrandInfo.BrandId">
            <summary>
            BrandId
            </summary>
        </member>
        <member name="T:Himall.Entities.VShopInfo">
            <summary>
            Himall_VShop
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.Name">
            <summary>
            Ãû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.CreateTime">
            <summary>
            ´´½¨ÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.VisitNum">
            <summary>
            ÀúÀÀ´ÎÊý
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.buyNum">
            <summary>
            ¹ºÂòÊýÁ¿
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.State">
            <summary>
            ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.Logo">
            <summary>
            LOGO
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.BackgroundImage">
            <summary>
            ±³¾°Í¼
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.Description">
            <summary>
            ÏêÇé
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.Tags">
            <summary>
            ±êÇ©
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.HomePageTitle">
            <summary>
            Î¢ÐÅÊ×Ò³ÏÔÊ¾µÄ±êÌâ
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.WXLogo">
            <summary>
            Î¢ÐÅLogo
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.IsOpen">
            <summary>
            ÊÇ·ñ¿ªÆôÎ¢µê
            </summary>
        </member>
        <member name="T:Himall.Entities.VShopInfo.VshopStates">
            <summary>
            微店状态
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopInfo.VshopStates.NotAudit">
            <summary>
            未审核
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopInfo.VshopStates.Normal">
            <summary>
            审核通过
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopInfo.VshopStates.Refused">
            <summary>
            审核拒绝
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopInfo.VshopStates.Step1">
            <summary>
            开启微店第一步
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopInfo.VshopStates.Step2">
            <summary>
            开启微店第二步
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopInfo.VshopStates.Step3">
            <summary>
            开启微店第三步
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopInfo.VshopStates.Close">
            <summary>
            已关闭
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.StrLogo">
            <summary>
            Logo路径
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.StrBackgroundImage">
            <summary>
            背景图片路径
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopInfo.ShowSequence">
            <summary>
            显示排序，需数据补充
            </summary>
        </member>
        <member name="T:Himall.Entities.VShopExtendInfo">
            <summary>
            Himall_VShopExtend
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopExtendInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopExtendInfo.VShopId">
            <summary>
            Î¢µêID
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopExtendInfo.Sequence">
            <summary>
            Ë³Ðò
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopExtendInfo.Type">
            <summary>
            Î¢µêÀàÐÍ£¨Ö÷ÍÆÎ¢µê¡¢ÈÈÃÅÎ¢µê£©
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopExtendInfo.AddTime">
            <summary>
            Ìí¼ÓÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.VShopExtendInfo.State">
            <summary>
            ÉóºË×´Ì¬
            </summary>
        </member>
        <member name="T:Himall.Entities.VShopExtendInfo.VShopExtendType">
            <summary>
            微店扩展类型
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopExtendInfo.VShopExtendType.TopShow">
            <summary>
            主推微店
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopExtendInfo.VShopExtendType.HotVShop">
            <summary>
            热门微店
            </summary>
        </member>
        <member name="T:Himall.Entities.VShopExtendInfo.VShopExtendState">
            <summary>
            微店扩展信息状态
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopExtendInfo.VShopExtendState.NotAudit">
            <summary>
            申请未审核
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopExtendInfo.VShopExtendState.Through">
            <summary>
            审核通过
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopExtendInfo.VShopExtendState.Refused">
            <summary>
            拒绝
            </summary>
        </member>
        <member name="F:Himall.Entities.VShopExtendInfo.VShopExtendState.Close">
            <summary>
            已关闭
            </summary>
        </member>
        <member name="T:Himall.Entities.VerificationRecordInfo">
            <summary>
            Himall_VerificationRecord
            </summary>
        </member>
        <member name="P:Himall.Entities.VerificationRecordInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.VerificationRecordInfo.OrderId">
            <summary>
            ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.VerificationRecordInfo.VerificationCodeIds">
            <summary>
            ºËÏúÂëID¼¯ºÏ
            </summary>
        </member>
        <member name="P:Himall.Entities.VerificationRecordInfo.VerificationTime">
            <summary>
            ºËÏúÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.VerificationRecordInfo.VerificationUser">
            <summary>
            ºËÏúÈË
            </summary>
        </member>
        <member name="T:Himall.Entities.VirtualOrderItemInfo">
            <summary>
            Himall_VirtualOrderItem
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualOrderItemInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualOrderItemInfo.OrderId">
            <summary>
            ¶©µ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualOrderItemInfo.OrderItemId">
            <summary>
            ¶©µ¥ÏîID
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualOrderItemInfo.VirtualProductItemName">
            <summary>
            ÐéÄâÉÌÆ·ÐÅÏ¢ÏîÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualOrderItemInfo.Content">
            <summary>
            ÐÅÏ¢ÏîÌîÐ´ÄÚÈÝ
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualOrderItemInfo.VirtualProductItemType">
            <summary>
            ÐÅÏ¢ÏîÀàÐÍ(1=ÎÄ±¾¸ñÊ½£¬2=ÈÕÆÚ£¬3=Ê±¼ä£¬4=Éí·ÝÖ¤£¬5=Êý×Ö¸ñÊ½£¬6=Í¼Æ¬)
            </summary>
        </member>
        <member name="T:Himall.Entities.VirtualProductInfo">
            <summary>
            Himall_VirtualProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductInfo.ValidityType">
            <summary>
            ÉÌÆ·ÓÐÐ§ÆÚÀàÐÍ(0=³¤ÆÚÓÐÐ§£¬1=×Ô¶¨ÒåÈÕÆÚ)
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductInfo.StartDate">
            <summary>
            ×Ô¶¨Òå¿ªÊ¼Ê±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductInfo.EndDate">
            <summary>
            ×Ô¶¨Òå½áÊøÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductInfo.EffectiveType">
            <summary>
            ºËÏúÂëÉúÐ§ÀàÐÍ£¨1=Á¢¼´ÉúÐ§£¬2=¸¶¿îÍê³ÉXÐ¡Ê±ºóÉúÐ§£¬3=´ÎÈÕÉúÐ§£©
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductInfo.Hour">
            <summary>
            ¸¶¿îÍê³ÉXÐ¡Ê±ºóÉúÐ§
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductInfo.SupportRefundType">
            <summary>
            1=Ö§³ÖÓÐÐ§ÆÚÄÚÍË¿î£¬2=Ö§³ÖËæÊ±ÍË¿î£¬3=²»Ö§³ÖÍË¿î
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductInfo.UseNotice">
            <summary>
            Ê¹ÓÃÐëÖª
            </summary>
        </member>
        <member name="T:Himall.Entities.VirtualProductItemInfo">
            <summary>
            Himall_VirtualProductItem
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductItemInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductItemInfo.ProductId">
            <summary>
            ÉÌÆ·ID
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductItemInfo.Name">
            <summary>
            ÐÅÏ¢Ïî±êÌâÃû³Æ
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductItemInfo.Type">
            <summary>
            ÐÅÏ¢ÏîÀàÐÍ(1=ÎÄ±¾¸ñÊ½£¬2=ÈÕÆÚ£¬3=Ê±¼ä£¬4=Éí·ÝÖ¤£¬5=Êý×Ö¸ñÊ½£¬6=Í¼Æ¬)
            </summary>
        </member>
        <member name="P:Himall.Entities.VirtualProductItemInfo.Required">
            <summary>
            ÊÇ·ñ±ØÌî(0=·ñ£¬1=ÊÇ)
            </summary>
        </member>
        <member name="T:Himall.Entities.WXAccTokenInfo">
            <summary>
            Himall_WXAccToken
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAccTokenInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAccTokenInfo.AppId">
            <summary>
            AppId
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAccTokenInfo.AccessToken">
            <summary>
            Î¢ÐÅ·ÃÎÊÁîÅÆ
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAccTokenInfo.TokenOutTime">
            <summary>
            Î¢ÐÅÁîÅÆ¹ýÆÚÈÕÆÚ
            </summary>
        </member>
        <member name="T:Himall.Entities.WXAppletFormDataInfo">
            <summary>
            Himall_WXAppletFormData
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAppletFormDataInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAppletFormDataInfo.EventId">
            <summary>
            ÊÂ¼þID
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAppletFormDataInfo.EventValue">
            <summary>
            ÊÂ¼þÖµ
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAppletFormDataInfo.FormId">
            <summary>
            ÊÂ¼þµÄ±íµ¥ID
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAppletFormDataInfo.EventTime">
            <summary>
            ÊÂ¼þÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.WXAppletFormDataInfo.ExpireTime">
            <summary>
            FormId¹ýÆÚÊ±¼ä
            </summary>
        </member>
        <member name="T:Himall.Entities.WXCardCodeLogInfo">
            <summary>
            Himall_WXCardCodeLog
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.CardLogId">
            <summary>
            ¿¨È¯¼ÇÂ¼ºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.CardId">
            <summary>
            CardId
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.Code">
            <summary>
            ±êÊ¶
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.SendTime">
            <summary>
            Í¶·ÅÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.CodeStatus">
            <summary>
            ×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.UsedTime">
            <summary>
            ²Ù×÷Ê±¼ä Ê§Ð§¡¢ºËÏú¡¢É¾³ýÊ±¼ä
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.CouponType">
            <summary>
            ºì°üÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.CouponCodeId">
            <summary>
            ºì°ü¼ÇÂ¼±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardCodeLogInfo.OpenId">
            <summary>
            ¶ÔÓ¦OpenId
            </summary>
        </member>
        <member name="T:Himall.Entities.WXCardCodeLogInfo.CodeStatusEnum">
            <summary>
            审核状态
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardCodeLogInfo.CodeStatusEnum.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardCodeLogInfo.CodeStatusEnum.WaitReceive">
            <summary>
            待领取
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardCodeLogInfo.CodeStatusEnum.HasFailed">
            <summary>
            已失效
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardCodeLogInfo.CodeStatusEnum.HasConsume">
            <summary>
            已消费
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardCodeLogInfo.CodeStatusEnum.HasDelete">
            <summary>
            已删除
            </summary>
        </member>
        <member name="T:Himall.Entities.WXCardLogInfo">
            <summary>
            Himall_WXCardLog
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.Id">
            <summary>
            ±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.CardId">
            <summary>
            ¿¨È¯±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.CardTitle">
            <summary>
            ±êÌâ Ó¢ÎÄ27  ºº×Ö 9¸ö
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.CardSubTitle">
            <summary>
            ¸±±êÌâ Ó¢ÎÄ54  ºº×Ö18¸ö
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.CardColor">
            <summary>
            ¿¨È¯ÑÕÉ« HasTable
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.AuditStatus">
            <summary>
            ÉóºË×´Ì¬
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.AppId">
            <summary>
            AppId
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.AppSecret">
            <summary>
            AppSecret
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.CouponType">
            <summary>
            ºì°üÀàÐÍ
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.CouponId">
            <summary>
            ºì°ü±àºÅ Éæ¼°¶à±í£¬²»×öÍâ¼ü
            </summary>
        </member>
        <member name="T:Himall.Entities.WXCardLogInfo.CouponTypeEnum">
            <summary>
            优惠券类型
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardLogInfo.CouponTypeEnum.Coupon">
            <summary>
            优惠券
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardLogInfo.CouponTypeEnum.Bonus">
            <summary>
            商家红包
            </summary>
        </member>
        <member name="T:Himall.Entities.WXCardLogInfo.AuditStatusEnum">
            <summary>
            审核状态
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardLogInfo.AuditStatusEnum.Audited">
            <summary>
            审核通过
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardLogInfo.AuditStatusEnum.Auditin">
            <summary>
            审核中
            </summary>
        </member>
        <member name="F:Himall.Entities.WXCardLogInfo.AuditStatusEnum.AuditNot">
            <summary>
            审核未通过
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.WXCardColors">
            <summary>
            微信卡券颜色表
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.ShopId">
            <summary>
            店铺编号
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.ShopName">
            <summary>
            店铺名
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.Quantity">
            <summary>
            卡券库存数量(0表示最大)
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.GetLimit">
             <summary>
            (停用) 每人限领数量
             <para>0表不限领</para>
             </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.BeginTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.LeastCost">
            <summary>
            (停用) 使用门槛
            <para>单位:分</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.ReduceCost">
            <summary>
            (停用) 面额
            <para>单位:分</para>
            </summary>
        </member>
        <member name="P:Himall.Entities.WXCardLogInfo.DefaultDetail">
            <summary>
            优惠详情
            </summary>
        </member>
        <member name="T:Himall.Entities.WXSmallChoiceProductInfo">
            <summary>
            Himall_WXSmallChoiceProduct
            </summary>
        </member>
        <member name="P:Himall.Entities.WXSmallChoiceProductInfo.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="T:Himall.Entities.WXshopInfo">
            <summary>
            Himall_WXshop
            </summary>
        </member>
        <member name="P:Himall.Entities.WXshopInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.WXshopInfo.ShopId">
            <summary>
            µêÆÌID
            </summary>
        </member>
        <member name="P:Himall.Entities.WXshopInfo.AppId">
            <summary>
            ¹«ÖÚºÅµÄAPPID
            </summary>
        </member>
        <member name="P:Himall.Entities.WXshopInfo.AppSecret">
            <summary>
            ¹«ÖÚºÅµÄAppSecret
            </summary>
        </member>
        <member name="P:Himall.Entities.WXshopInfo.Token">
            <summary>
            ¹«ÖÚºÅµÄToken
            </summary>
        </member>
        <member name="P:Himall.Entities.WXshopInfo.FollowUrl">
            <summary>
            Ìø×ªµÄURL
            </summary>
        </member>
        <member name="T:Himall.Entities.WeiActivityAwardInfo">
            <summary>
            Himall_WeiActivityAward
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityAwardInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityAwardInfo.ActivityId">
            <summary>
            ActivityId
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityAwardInfo.AwardLevel">
            <summary>
            ±£´æ×Ö¶Î1-10 ·Ö±ð¶ÔÓ¦1ÖÁ10µÈ½±
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityAwardInfo.AwardType">
            <summary>
            »ý·Ö£»ºì°ü£»ÓÅ»Ý¾í
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityAwardInfo.AwardCount">
            <summary>
            AwardCount
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityAwardInfo.Proportion">
            <summary>
            Proportion
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityAwardInfo.Integral">
            <summary>
            Integral
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityAwardInfo.BonusId">
            <summary>
            BonusId
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityAwardInfo.CouponId">
            <summary>
            CouponId
            </summary>
        </member>
        <member name="T:Himall.Entities.WeiActivityInfoInfo">
            <summary>
            Himall_WeiActivityInfo
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.ActivityTitle">
            <summary>
            ActivityTitle
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.ActivityType">
            <summary>
            ActivityType
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.ActivityDetails">
            <summary>
            ActivityDetails
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.ActivityUrl">
            <summary>
            ActivityUrl
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.BeginTime">
            <summary>
            BeginTime
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.EndTime">
            <summary>
            EndTime
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.ParticipationType">
            <summary>
            0 ¹²¼¸´Î 1Ìì¼¸´Î 2ÎÞÏÞÖÆ
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.ParticipationCount">
            <summary>
            ParticipationCount
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.ConsumePoint">
            <summary>
            0²»ÏûºÄ»ý·Ö ´óÓÚ0ÏûºÄ»ý·Ö
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.CodeUrl">
            <summary>
            CodeUrl
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityInfoInfo.AddDate">
            <summary>
            AddDate
            </summary>
        </member>
        <member name="T:Himall.Entities.WeiActivityWinInfoInfo">
            <summary>
            Himall_WeiActivityWinInfo
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityWinInfoInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityWinInfoInfo.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityWinInfoInfo.ActivityId">
            <summary>
            ActivityId
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityWinInfoInfo.AwardId">
            <summary>
            AwardId
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityWinInfoInfo.IsWin">
            <summary>
            IsWin
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityWinInfoInfo.AwardName">
            <summary>
            AwardName
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiActivityWinInfoInfo.AddDate">
            <summary>
            AddDate
            </summary>
        </member>
        <member name="T:Himall.Entities.WeiXinBasicInfo">
            <summary>
            Himall_WeiXinBasic
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinBasicInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinBasicInfo.Ticket">
            <summary>
            Î¢ÐÅTicket
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinBasicInfo.TicketOutTime">
            <summary>
            Î¢ÐÅTicket¹ýÆÚÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinBasicInfo.AppId">
            <summary>
            AppId
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinBasicInfo.AccessToken">
            <summary>
            AccessToken
            </summary>
        </member>
        <member name="T:Himall.Entities.WeiXinMsgTemplateInfo">
            <summary>
            Himall_WeiXinMsgTemplate
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinMsgTemplateInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinMsgTemplateInfo.MessageType">
            <summary>
            ÏûÏ¢Àà±ð
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinMsgTemplateInfo.TemplateNum">
            <summary>
            ÏûÏ¢Ä£°å±àºÅ
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinMsgTemplateInfo.TemplateId">
            <summary>
            ÏûÏ¢Ä£°åID
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinMsgTemplateInfo.UpdateDate">
            <summary>
            ¸üÐÂÈÕÆÚ
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinMsgTemplateInfo.IsOpen">
            <summary>
            ÊÇ·ñÆôÓÃ
            </summary>
        </member>
        <member name="P:Himall.Entities.WeiXinMsgTemplateInfo.UserInWxApplet">
            <summary>
            ÊÇ·ñÐ¡³ÌÐòÎ¢ÐÅÍ¨Öª
            </summary>
        </member>
        <member name="T:Himall.Entities.IModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Himall.Entities.IModel.ModifiedColumns">
            <summary>
            修改的字段列名
            </summary>
        </member>
        <member name="M:Himall.Entities.IModel.ModifiedComplete">
            <summary>
            修改实体完成
            </summary>
        </member>
        <member name="T:Himall.Entities.IBaseCoupon">
            <summary>
            优惠模型
            </summary>
        </member>
        <member name="F:Himall.Entities.CouponType.Coupon">
            <summary>
            优惠卷
            </summary>
        </member>
        <member name="F:Himall.Entities.CouponType.ShopBonus">
            <summary>
            商家红包
            </summary>
        </member>
        <member name="T:Himall.Entities.LimitTimeMarketInfo.LimitTimeMarketAuditStatus">
            <summary>
            审核状态
            </summary>
        </member>
        <member name="F:Himall.Entities.LimitTimeMarketInfo.LimitTimeMarketAuditStatus.WaitForAuditing">
            <summary>
            等待审核
            </summary>
        </member>
        <member name="F:Himall.Entities.LimitTimeMarketInfo.LimitTimeMarketAuditStatus.Ongoing">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:Himall.Entities.LimitTimeMarketInfo.LimitTimeMarketAuditStatus.AuditFailed">
            <summary>
            未通过(审核失败)
            </summary>
        </member>
        <member name="F:Himall.Entities.LimitTimeMarketInfo.LimitTimeMarketAuditStatus.Ended">
            <summary>
            已结束
            </summary>
        </member>
        <member name="F:Himall.Entities.LimitTimeMarketInfo.LimitTimeMarketAuditStatus.Cancelled">
            <summary>
            已取消
            </summary>
        </member>
        <member name="T:Himall.Entities.SendMsgInfo">
            <summary>
            微信群发消息
            </summary>
        </member>
        <member name="P:Himall.Entities.SendInfoResult.errCode">
            <summary>
            微信接口错误码
            </summary>
        </member>
        <member name="P:Himall.Entities.SendInfoResult.errMsg">
            <summary>
            微信接口错误信息
            </summary>
        </member>
        <member name="P:Himall.Entities.CouponRecord.IsUse">
            <summary>
            用户领取状态(0:可用，1:已领取，2:已领完)
            </summary>
        </member>
        <member name="T:Himall.Entities.ShoppingCartItem">
            <summary>
            购物车商品项
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartItem.Id">
            <summary>
            购物车商品项Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartItem.ShopBranchId">
            <summary>
            门店Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartItem.ProductId">
            <summary>
            商品Id
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartItem.SkuId">
            <summary>
            商品SKUID
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartItem.Quantity">
            <summary>
            商品数量
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartItem.AddTime">
            <summary>
            添加时间
            </summary>
        </member>
        <member name="P:Himall.Entities.ShoppingCartItem.Status">
            <summary>
            状态 0:正常；1：冻结；2：库存不足
            </summary>
        </member>
        <member name="P:Himall.Entities.UserInfo.Photo">
            <summary>
            用户头像
            </summary>
        </member>
        <member name="P:Himall.Entities.UserInfo.UserName">
            <summary>
            订单用户名
            </summary>
        </member>
        <member name="P:Himall.Entities.UserInfo.JoinTime">
            <summary>
            参团时间
            </summary>
        </member>
        <member name="T:Himall.Entities.BaseModel">
            <summary>
            DTO基类
            </summary>
        </member>
        <member name="T:Himall.Entities.WXSyncJSInfoByCard">
            <summary>
            微信同步JSAPI信息(限卡券)
            </summary>
        </member>
        <member name="T:Himall.Entities.WXSyncJSInfoCardInfo">
            <summary>
            微信卡券同步JSAPI信息(卡券领取)
            </summary>
        </member>
        <member name="T:Himall.Entities.WXJSCardModel">
            <summary>
            微信卡券前台信息
            </summary>
        </member>
        <member name="T:Himall.Entities.WXJSCardExtModel">
            <summary>
            微信卡券前台信息扩展
            </summary>
        </member>
        <member name="P:Himall.Entities.WXMaterialInfo.title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Himall.Entities.WXMaterialInfo.thumb_media_id">
            <summary>
            图文消息的封面图片素材id
            </summary>
        </member>
        <member name="P:Himall.Entities.WXMaterialInfo.author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Himall.Entities.WXMaterialInfo.digest">
            <summary>
            图文消息的摘要(多图文)
            </summary>
        </member>
        <member name="P:Himall.Entities.WXMaterialInfo.show_cover_pic">
            <summary>
            是否显示封面(0/1)
            </summary>
        </member>
        <member name="P:Himall.Entities.WXMaterialInfo.content">
            <summary>
            图文消息的具体内容，支持HTML标签
            </summary>
        </member>
        <member name="P:Himall.Entities.WXMaterialInfo.content_source_url">
            <summary>
            图文消息的原文地址
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaNewsItemList.total_count">
            <summary>
            素材总数
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaNewsItemList.count">
            <summary>
            获取的素材数量
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaNewsItemList.errCode">
            <summary>
            微信接口错误码
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaNewsItemList.errMsg">
            <summary>
            微信接口错误信息
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaItemCount.voice_count">
            <summary>
            语音总数量
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaItemCount.video_count">
            <summary>
            视频总数量
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaItemCount.image_count">
            <summary>
            图片总数量
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaItemCount.news_count">
            <summary>
            图文总数量
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaItemCount.errCode">
            <summary>
            微信接口错误码
            </summary>
        </member>
        <member name="P:Himall.Entities.MediaItemCount.errMsg">
            <summary>
            微信接口错误信息
            </summary>
        </member>
        <member name="T:PetaPoco.Database">
            <summary>
                The main PetaPoco Database class.  You can either use this class directly, or derive from it.
            </summary>
        </member>
        <member name="M:PetaPoco.Database.Dispose">
            <summary>
                Automatically close one open shared connection
            </summary>
        </member>
        <member name="M:PetaPoco.Database.#ctor">
            <summary>
                Constructs an instance using the first connection string found in the app/web configuration file.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when no connection strings can registered.</exception>
        </member>
        <member name="M:PetaPoco.Database.#ctor(System.Data.IDbConnection)">
            <summary>
                Constructs an instance using a supplied IDbConnection.
            </summary>
            <param name="connection">The IDbConnection to use.</param>
            <remarks>
                The supplied IDbConnection will not be closed/disposed by PetaPoco - that remains
                the responsibility of the caller.
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="connection" /> is null or empty.</exception>
        </member>
        <member name="M:PetaPoco.Database.#ctor(System.String,System.String)">
            <summary>
                Constructs an instance using a supplied connections string and optionally a provider name. If no provider name is
                given, the default database provider will be MS SQL Server.
            </summary>
            <param name="connectionString">The database connection string.</param>
            <param name="providerName">The database provider name, if given.</param>
            <remarks>
                PetaPoco will automatically close and dispose any connections it creates.
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="connectionString" /> is null or empty.</exception>
        </member>
        <member name="M:PetaPoco.Database.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
                Constructs an instance using the supplied connection string and DbProviderFactory.
            </summary>
            <param name="connectionString">The database connection string.</param>
            <param name="factory">The DbProviderFactory to use for instantiating IDbConnection's.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="connectionString" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="factory" /> is null.</exception>
        </member>
        <member name="M:PetaPoco.Database.#ctor(System.String)">
            <summary>
                Constructs an instance using a supplied connection string name. The actual connection string and provider will be
                read from app/web.config.
            </summary>
            <param name="connectionStringName">The name of the connection.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="connectionStringName" /> is null or empty.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when a connection string cannot be found.</exception>
        </member>
        <member name="M:PetaPoco.Database.#ctor(System.String,PetaPoco.IProvider,PetaPoco.IMapper)">
            <summary>
                Constructs an instance using the supplied provider and optional default mapper.
            </summary>
            <param name="connectionString">The database connection string.</param>
            <param name="provider">The provider to use.</param>
            <param name="defaultMapper">The default mapper to use when no specific mapper has been registered.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="connectionString" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="provider" /> is null.</exception>
        </member>
        <member name="M:PetaPoco.Database.#ctor(PetaPoco.IDatabaseBuildConfiguration)">
            <summary>
                Constructs an instance using the supplied <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The configuration for constructing an instance.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="configuration" /> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when no configuration string is configured and app/web config does any connection string registered.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when a connection string configured and no provider is configured.</exception>
        </member>
        <member name="M:PetaPoco.Database.Initialise(PetaPoco.IProvider,PetaPoco.IMapper)">
            <summary>
                Provides common initialization for the various constructors.
            </summary>
        </member>
        <member name="P:PetaPoco.Database.KeepConnectionAlive">
            <summary>
                When set to true the first opened connection is kept alive until this object is disposed
            </summary>
        </member>
        <member name="M:PetaPoco.Database.OpenSharedConnection">
            <summary>
                Open a connection that will be used for all subsequent queries.
            </summary>
            <remarks>
                Calls to Open/CloseSharedConnection are reference counted and should be balanced
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.CloseSharedConnection">
            <summary>
                Releases the shared connection
            </summary>
        </member>
        <member name="P:PetaPoco.Database.Connection">
            <summary>
                Provides access to the currently open shared connection (or null if none)
            </summary>
        </member>
        <member name="P:PetaPoco.Database.PetaPoco#ITransactionAccessor#Transaction">
            <summary>
                Gets the current transaction instance.
            </summary>
            <returns>
                The current transaction instance; else, <c>null</c> if not transaction is in progress.
            </returns>
        </member>
        <member name="M:PetaPoco.Database.GetTransaction">
            <summary>
                Starts or continues a transaction.
            </summary>
            <returns>An ITransaction reference that must be Completed or disposed</returns>
            <remarks>
                This method makes management of calls to Begin/End/CompleteTransaction easier.
                The usage pattern for this should be:
                using (var tx = db.GetTransaction())
                {
                // Do stuff
                db.Update(...);
                // Mark the transaction as complete
                tx.Complete();
                }
                Transactions can be nested but they must all be completed otherwise the entire
                transaction is aborted.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.OnBeginTransaction">
            <summary>
                Called when a transaction starts.  Overridden by the T4 template generated database
                classes to ensure the same DB instance is used throughout the transaction.
            </summary>
        </member>
        <member name="M:PetaPoco.Database.OnEndTransaction">
            <summary>
                Called when a transaction ends.
            </summary>
        </member>
        <member name="M:PetaPoco.Database.BeginTransaction">
            <summary>
                Starts a transaction scope, see GetTransaction() for recommended usage
            </summary>
        </member>
        <member name="M:PetaPoco.Database.CleanupTransaction">
            <summary>
                Internal helper to cleanup transaction
            </summary>
        </member>
        <member name="M:PetaPoco.Database.AbortTransaction">
            <summary>
                Aborts the entire outer most transaction scope
            </summary>
            <remarks>
                Called automatically by Transaction.Dispose()
                if the transaction wasn't completed.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.CompleteTransaction">
            <summary>
                Marks the current transaction scope as complete.
            </summary>
        </member>
        <member name="M:PetaPoco.Database.AddParam(System.Data.IDbCommand,System.Object,System.Reflection.PropertyInfo)">
            <summary>
                Add a parameter to a DB command
            </summary>
            <param name="cmd">A reference to the IDbCommand to which the parameter is to be added</param>
            <param name="value">The value to assign to the parameter</param>
            <param name="pi">Optional, a reference to the property info of the POCO property from which the value is coming.</param>
        </member>
        <member name="M:PetaPoco.Database.OnException(System.Exception)">
            <summary>
                Called if an exception occurs during processing of a DB operation.  Override to provide custom logging/handling.
            </summary>
            <param name="x">The exception instance</param>
            <returns>True to re-throw the exception, false to suppress it</returns>
        </member>
        <member name="M:PetaPoco.Database.OnConnectionOpened(System.Data.IDbConnection)">
            <summary>
                Called when DB connection opened
            </summary>
            <param name="conn">The newly opened IDbConnection</param>
            <returns>The same or a replacement IDbConnection</returns>
            <remarks>
                Override this method to provide custom logging of opening connection, or
                to provide a proxy IDbConnection.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.OnConnectionClosing(System.Data.IDbConnection)">
            <summary>
                Called when DB connection closed
            </summary>
            <param name="conn">The soon to be closed IDBConnection</param>
        </member>
        <member name="M:PetaPoco.Database.OnExecutingCommand(System.Data.IDbCommand)">
            <summary>
                Called just before an DB command is executed
            </summary>
            <param name="cmd">The command to be executed</param>
            <remarks>
                Override this method to provide custom logging of commands and/or
                modification of the IDbCommand before it's executed
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.OnExecutedCommand(System.Data.IDbCommand)">
            <summary>
                Called on completion of command execution
            </summary>
            <param name="cmd">The IDbCommand that finished executing</param>
        </member>
        <member name="M:PetaPoco.Database.Execute(System.String,System.Object[])">
            <summary>
                Executes a non-query command
            </summary>
            <param name="sql">The SQL statement to execute</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.Execute(PetaPoco.Sql)">
            <summary>
                Executes a non-query command
            </summary>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.ExecuteScalar``1(System.String,System.Object[])">
            <summary>
                Executes a query and return the first column of the first row in the result set.
            </summary>
            <typeparam name="T">The type that the result value should be cast to</typeparam>
            <param name="sql">The SQL query to execute</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The scalar value cast to T</returns>
        </member>
        <member name="M:PetaPoco.Database.ExecuteScalar``1(PetaPoco.Sql)">
            <summary>
                Executes a query and return the first column of the first row in the result set.
            </summary>
            <typeparam name="T">The type that the result value should be cast to</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The scalar value cast to T</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``1(System.String,System.Object[])">
            <summary>
                Runs a query and returns the result set as a typed list
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query to execute</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A List holding the results of the query</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``1(PetaPoco.Sql)">
            <summary>
                Runs a query and returns the result set as a typed list
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A List holding the results of the query</returns>
        </member>
        <member name="M:PetaPoco.Database.BuildPageQueries``1(System.Int64,System.Int64,System.String,System.Object[]@,System.String@,System.String@)">
            <summary>
                Starting with a regular SELECT statement, derives the SQL statements required to query a
                DB for a page of records and the total number of records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="skip">The number of rows to skip before the start of the page</param>
            <param name="take">The number of rows in the page</param>
            <param name="sql">The original SQL select statement</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <param name="sqlCount">Outputs the SQL statement to query for the total number of matching rows</param>
            <param name="sqlPage">Outputs the SQL statement to retrieve a single page of matching rows</param>
        </member>
        <member name="M:PetaPoco.Database.Page``1(System.Int64,System.Int64,System.String,System.Object[],System.String,System.Object[])">
            <summary>
                Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sqlCount">The SQL to retrieve the total number of records</param>
            <param name="countArgs">Arguments to any embedded parameters in the sqlCount statement</param>
            <param name="sqlPage">The SQL To retrieve a single page of results</param>
            <param name="pageArgs">Arguments to any embedded parameters in the sqlPage statement</param>
            <returns>A Page of results</returns>
            <remarks>
                This method allows separate SQL statements to be explicitly provided for the two parts of the page query.
                The page and itemsPerPage parameters are not used directly and are used simply to populate the returned Page
                object.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Page``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
                Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">The base SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>A Page of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified page.  It will also execute a second query to retrieve the
                total number of records in the result set.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Page``1(System.Int64,System.Int64,PetaPoco.Sql)">
            <summary>
                Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>A Page of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified page.  It will also execute a second query to retrieve the
                total number of records in the result set.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Page``1(System.Int64,System.Int64,PetaPoco.Sql,PetaPoco.Sql)">
            <summary>
                Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sqlCount">An SQL builder object representing the SQL to retrieve the total number of records</param>
            <param name="sqlPage">An SQL builder object representing the SQL to retrieve a single page of results</param>
            <returns>A Page of results</returns>
            <remarks>
                This method allows separate SQL statements to be explicitly provided for the two parts of the page query.
                The page and itemsPerPage parameters are not used directly and are used simply to populate the returned Page
                object.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Fetch``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
                Retrieves a page of records (without the total count)
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">The base SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>A List of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified page.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Fetch``1(System.Int64,System.Int64,PetaPoco.Sql)">
            <summary>
                Retrieves a page of records (without the total count)
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>A List of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified page.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SkipTake``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
                Retrieves a range of records from result set
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="skip">The number of rows at the start of the result set to skip over</param>
            <param name="take">The number of rows to retrieve</param>
            <param name="sql">The base SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>A List of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified range.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SkipTake``1(System.Int64,System.Int64,PetaPoco.Sql)">
            <summary>
                Retrieves a range of records from result set
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="skip">The number of rows at the start of the result set to skip over</param>
            <param name="take">The number of rows to retrieve</param>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>A List of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified range.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Query``1(System.String,System.Object[])">
            <summary>
                Runs an SQL query, returning the results as an IEnumerable collection
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>An enumerable collection of result records</returns>
            <remarks>
                For some DB providers, care should be taken to not start a new Query before finishing with
                and disposing the previous one. In cases where this is an issue, consider using Fetch which
                returns the results as a List rather than an IEnumerable.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Query``1(PetaPoco.Sql)">
            <summary>
                Runs an SQL query, returning the results as an IEnumerable collection
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>An enumerable collection of result records</returns>
            <remarks>
                For some DB providers, care should be taken to not start a new Query before finishing with
                and disposing the previous one. In cases where this is an issue, consider using Fetch which
                returns the results as a List rather than an IEnumerable.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Exists``1(System.String,System.Object[])">
            <summary>
                Checks for the existence of a row matching the specified condition
            </summary>
            <typeparam name="T">The Type representing the table being queried</typeparam>
            <param name="sqlCondition">The SQL expression to be tested for (ie: the WHERE expression)</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>True if a record matching the condition is found.</returns>
        </member>
        <member name="M:PetaPoco.Database.Exists``1(System.Object)">
            <summary>
                Checks for the existence of a row with the specified primary key value.
            </summary>
            <typeparam name="T">The Type representing the table being queried</typeparam>
            <param name="primaryKey">The primary key value to look for</param>
            <returns>True if a record with the specified primary key value exists.</returns>
        </member>
        <member name="M:PetaPoco.Database.Single``1(System.Object)">
            <summary>
                Returns the record with the specified primary key value
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="primaryKey">The primary key value of the record to fetch</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
                Throws an exception if there are zero or more than one record with the specified primary key value.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SingleOrDefault``1(System.Object)">
            <summary>
                Returns the record with the specified primary key value, or the default value if not found
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="primaryKey">The primary key value of the record to fetch</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
                If there are no records with the specified primary key value, default(T) (typically null) is returned.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Single``1(System.String,System.Object[])">
            <summary>
                Runs a query that should always return a single row.
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
                Throws an exception if there are zero or more than one matching record
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SingleOrDefault``1(System.String,System.Object[])">
            <summary>
                Runs a query that should always return either a single row, or no rows
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The single record matching the specified primary key value, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.Database.First``1(System.String,System.Object[])">
            <summary>
                Runs a query that should always return at least one return
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The first record in the result set</returns>
        </member>
        <member name="M:PetaPoco.Database.FirstOrDefault``1(System.String,System.Object[])">
            <summary>
                Runs a query and returns the first record, or the default value if no matching records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The first record in the result set, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Single``1(PetaPoco.Sql)">
            <summary>
                Runs a query that should always return a single row.
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
                Throws an exception if there are zero or more than one matching record
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SingleOrDefault``1(PetaPoco.Sql)">
            <summary>
                Runs a query that should always return either a single row, or no rows
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The single record matching the specified primary key value, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.Database.First``1(PetaPoco.Sql)">
            <summary>
                Runs a query that should always return at least one return
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The first record in the result set</returns>
        </member>
        <member name="M:PetaPoco.Database.FirstOrDefault``1(PetaPoco.Sql)">
            <summary>
                Runs a query and returns the first record, or the default value if no matching records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The first record in the result set, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Insert(System.String,System.Object)">
            <summary>
                Performs an SQL Insert
            </summary>
            <param name="tableName">The name of the table to insert into</param>
            <param name="poco">The POCO object that specifies the column values to be inserted</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables</returns>
        </member>
        <member name="M:PetaPoco.Database.Insert(System.String,System.String,System.Object)">
            <summary>
                Performs an SQL Insert
            </summary>
            <param name="tableName">The name of the table to insert into</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be inserted</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables</returns>
        </member>
        <member name="M:PetaPoco.Database.Insert(System.String,System.String,System.Boolean,System.Object)">
            <summary>
                Performs an SQL Insert
            </summary>
            <param name="tableName">The name of the table to insert into</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="autoIncrement">True if the primary key is automatically allocated by the DB</param>
            <param name="poco">The POCO object that specifies the column values to be inserted</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables</returns>
            <remarks>
                Inserts a poco into a table.  If the poco has a property with the same name
                as the primary key the id of the new record is assigned to it.  Either way,
                the new id is returned.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Insert(System.Object)">
            <summary>
                Performs an SQL Insert
            </summary>
            <param name="poco">The POCO object that specifies the column values to be inserted</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables</returns>
            <remarks>
                The name of the table, it's primary key and whether it's an auto-allocated primary key are retrieved
                from the POCO's attributes
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Update(System.String,System.String,System.Object,System.Object)">
            <summary>
                Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <returns>The number of affected records</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.String,System.String,System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.String,System.String,System.Object)">
            <summary>
                Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.Object)">
            <summary>
                Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.Object,System.Object)">
            <summary>
                Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update``1(System.String,System.Object[])">
            <summary>
                Performs an SQL update
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to update</typeparam>
            <param name="sql">The SQL update and condition clause (ie: everything after "UPDATE tablename"</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update``1(PetaPoco.Sql)">
            <summary>
                Performs an SQL update
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to update</typeparam>
            <param name="sql">
                An SQL builder object representing the SQL update and condition clause (ie: everything after "UPDATE
                tablename"
            </param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete(System.String,System.String,System.Object)">
            <summary>
                Performs and SQL Delete
            </summary>
            <param name="tableName">The name of the table to delete from</param>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The POCO object whose primary key value will be used to delete the row</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete(System.String,System.String,System.Object,System.Object)">
            <summary>
                Performs and SQL Delete
            </summary>
            <param name="tableName">The name of the table to delete from</param>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">
                The POCO object whose primary key value will be used to delete the row (or null to use the supplied
                primary key value)
            </param>
            <param name="primaryKeyValue">
                The value of the primary key identifing the record to be deleted (or null, or get this
                value from the POCO instance)
            </param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete(System.Object)">
            <summary>
                Performs an SQL Delete
            </summary>
            <param name="poco">The POCO object specifying the table name and primary key value of the row to be deleted</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete``1(System.Object)">
            <summary>
                Performs an SQL Delete
            </summary>
            <typeparam name="T">The POCO class whose attributes identify the table and primary key to be used in the delete</typeparam>
            <param name="pocoOrPrimaryKey">The value of the primary key of the row to delete</param>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.Database.Delete``1(System.String,System.Object[])">
            <summary>
                Performs an SQL Delete
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to delete from</typeparam>
            <param name="sql">The SQL condition clause identifying the row to delete (ie: everything after "DELETE FROM tablename"</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete``1(PetaPoco.Sql)">
            <summary>
                Performs an SQL Delete
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to delete from</typeparam>
            <param name="sql">
                An SQL builder object representing the SQL condition clause identifying the row to delete (ie:
                everything after "UPDATE tablename"
            </param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.IsNew(System.String,System.Object)">
            <summary>
                Check if a poco represents a new row
            </summary>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The object instance whose "newness" is to be tested</param>
            <returns>True if the POCO represents a record already in the database</returns>
            <remarks>This method simply tests if the POCO's primary key column property has been set to something non-zero.</remarks>
        </member>
        <member name="M:PetaPoco.Database.IsNew(System.Object)">
            <summary>
                Check if a poco represents a new row
            </summary>
            <param name="poco">The object instance whose "newness" is to be tested</param>
            <returns>True if the POCO represents a record already in the database</returns>
            <remarks>This method simply tests if the POCO's primary key column property has been set to something non-zero.</remarks>
        </member>
        <member name="M:PetaPoco.Database.Save(System.String,System.String,System.Object)">
            <summary>
                Saves a POCO by either performing either an SQL Insert or SQL Update
            </summary>
            <param name="tableName">The name of the table to be updated</param>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The POCO object to be saved</param>
        </member>
        <member name="M:PetaPoco.Database.Save(System.Object)">
            <summary>
                Saves a POCO by either performing either an SQL Insert or SQL Update
            </summary>
            <param name="poco">The POCO object to be saved</param>
        </member>
        <member name="M:PetaPoco.Database.Fetch``3(System.Func{``0,``1,``2},System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``4(System.Func{``0,``1,``2,``3},System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``5(System.Func{``0,``1,``2,``3,``4},System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``6(System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``3(System.Func{``0,``1,``2},System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``4(System.Func{``0,``1,``2,``3},System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``5(System.Func{``0,``1,``2,``3,``4},System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``6(System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``3(System.Func{``0,``1,``2},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``4(System.Func{``0,``1,``2,``3},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``5(System.Func{``0,``1,``2,``3,``4},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``6(System.Func{``0,``1,``2,``3,``4,``5},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``3(System.Func{``0,``1,``2},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``4(System.Func{``0,``1,``2,``3},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``5(System.Func{``0,``1,``2,``3,``4},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``6(System.Func{``0,``1,``2,``3,``4,``5},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``2(System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``3(System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``4(System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``5(System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``2(System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``3(System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``4(System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``5(System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``2(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``3(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``4(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``5(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``2(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``3(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``4(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``5(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``1(System.Type[],System.Object,System.String,System.Object[])">
            <summary>
                Performs a multi-poco query
            </summary>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="types">An array of Types representing the POCO types of the returned result set.</param>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.QueryMultiple(PetaPoco.Sql)">
            <summary>
            Perform a multi-results set query
            </summary>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A GridReader to be queried</returns>
        </member>
        <member name="M:PetaPoco.Database.QueryMultiple(System.String,System.Object[])">
            <summary>
            Perform a multi-results set query
            </summary>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A GridReader to be queried</returns>
        </member>
        <member name="P:PetaPoco.Database.LastSQL">
            <summary>
                Retrieves the SQL of the last executed statement
            </summary>
        </member>
        <member name="P:PetaPoco.Database.LastArgs">
            <summary>
                Retrieves the arguments to the last execute statement
            </summary>
        </member>
        <member name="P:PetaPoco.Database.LastCommand">
            <summary>
                Returns a formatted string describing the last executed SQL statement and it's argument values
            </summary>
        </member>
        <member name="M:PetaPoco.Database.FormatCommand(System.Data.IDbCommand)">
            <summary>
                Formats the contents of a DB command for display
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.Database.FormatCommand(System.String,System.Object[])">
            <summary>
                Formats an SQL query and it's arguments for display
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="P:PetaPoco.Database.DefaultMapper">
            <summary>
                Gets the default mapper.
            </summary>
        </member>
        <member name="P:PetaPoco.Database.EnableAutoSelect">
            <summary>
                When set to true, PetaPoco will automatically create the "SELECT columns" part of any query that looks like it
                needs it
            </summary>
        </member>
        <member name="P:PetaPoco.Database.EnableNamedParams">
            <summary>
                When set to true, parameters can be named ?myparam and populated from properties of the passed in argument values.
            </summary>
        </member>
        <member name="P:PetaPoco.Database.CommandTimeout">
            <summary>
                Sets the timeout value for all SQL statements.
            </summary>
        </member>
        <member name="P:PetaPoco.Database.OneTimeCommandTimeout">
            <summary>
                Sets the timeout value for the next (and only next) SQL statement
            </summary>
        </member>
        <member name="P:PetaPoco.Database.Provider">
            <summary>
                Gets the loaded database provider. <seealso cref="P:PetaPoco.Database.Provider" />.
            </summary>
            <returns>
                The loaded database type.
            </returns>
        </member>
        <member name="P:PetaPoco.Database.ConnectionString">
            <summary>
                Gets the connection string.
            </summary>
            <returns>
                The connection string.
            </returns>
        </member>
        <member name="P:PetaPoco.Database.IsolationLevel">
            <summary>
                Gets or sets the transaction isolation level.
            </summary>
            <remarks>
                When value is null, the underlying providers default isolation level is used.
            </remarks>
        </member>
        <member name="T:PetaPoco.DatabaseConfiguration">
            <summary>
                A helper class which enables fluent configuration.
            </summary>
        </member>
        <member name="M:PetaPoco.DatabaseConfiguration.#ctor">
            <summary>
                Private constructor to force usage of static build method.
            </summary>
        </member>
        <member name="M:PetaPoco.DatabaseConfiguration.Build">
            <summary>
                Starts a new PetaPoco build configuration.
            </summary>
            <returns>An instance of <see cref="T:PetaPoco.IDatabaseBuildConfiguration" /> to form a fluent interface.</returns>
        </member>
        <member name="T:PetaPoco.DatabaseConfigurationExtensions">
            <summary>
                A static helper class where extensions for <see cref="T:PetaPoco.IDatabaseBuildConfiguration" /> are placed.
            </summary>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingCommandTimeout(PetaPoco.IDatabaseBuildConfiguration,System.Int32)">
            <summary>
                Adds a command timeout - see <see cref="P:PetaPoco.IDatabase.CommandTimeout" />.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="seconds">The timeout in seconds.</param>
            <exception cref="T:System.ArgumentException">Thrown when seconds is less than 1.</exception>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.WithNamedParams(PetaPoco.IDatabaseBuildConfiguration)">
            <summary>
                Enables named params - see <see cref="P:PetaPoco.IDatabase.EnableNamedParams" />.
            </summary>
            <param name="source">The configuration source.</param>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.WithoutNamedParams(PetaPoco.IDatabaseBuildConfiguration)">
            <summary>
                Disables named params - see <see cref="P:PetaPoco.IDatabase.EnableNamedParams" />.
            </summary>
            <param name="source">The configuration source.</param>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingProvider``1(PetaPoco.IDatabaseBuildConfiguration,``0)">
            <summary>
                Specifies the provider to be used. - see <see cref="P:PetaPoco.IDatabase.Provider" />.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="provider">The provider to use.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="provider" /> is null.</exception>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingProvider``1(PetaPoco.IDatabaseBuildConfiguration,``0,System.Action{``0})">
            <summary>
                Specifies the provider to be used. - see <see cref="P:PetaPoco.IDatabase.Provider" />.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="configure">The configure provider callback.</param>
            <param name="provider">The provider to use.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="provider" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="configure" /> is null.</exception>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingProvider``1(PetaPoco.IDatabaseBuildConfiguration)">
            <summary>
                Specifies the provider to be used. - see <see cref="P:PetaPoco.IDatabase.Provider" />.
            </summary>
            <param name="source">The configuration source.</param>
            <typeparam name="T">The provider type.</typeparam>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingProvider``1(PetaPoco.IDatabaseBuildConfiguration,System.Action{``0})">
            <summary>
                Specifies the provider to be used. - see <see cref="P:PetaPoco.IDatabase.Provider" />.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="configure">The configure provider callback.</param>
            <typeparam name="T">The provider type.</typeparam>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="configure" /> is null.</exception>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.WithAutoSelect(PetaPoco.IDatabaseBuildConfiguration)">
            <summary>
                Enables auto select - see <see cref="P:PetaPoco.IDatabase.EnableAutoSelect" />.
            </summary>
            <param name="source">The configuration source.</param>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.WithoutAutoSelect(PetaPoco.IDatabaseBuildConfiguration)">
            <summary>
                Disables auto select - see <see cref="P:PetaPoco.IDatabase.EnableAutoSelect" />.
            </summary>
            <param name="source">The configuration source.</param>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingConnectionString(PetaPoco.IDatabaseBuildConfiguration,System.String)">
            <summary>
                Adds a connection string - see <see cref="P:PetaPoco.IDatabase.ConnectionString" />.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="connectionString">The connection string.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="connectionString" /> is null or empty.</exception>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingConnectionStringName(PetaPoco.IDatabaseBuildConfiguration,System.String)">
            <summary>
                Adds a connection string name.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="connectionStringName">The connection string name.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="connectionStringName" /> is null or empty.</exception>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingDefaultMapper``1(PetaPoco.IDatabaseBuildConfiguration,``0)">
            <summary>
                Specifies the default mapper to use when no specific mapper has been registered.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="mapper">The mapper to use as the default.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mapper" /> is null.</exception>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingDefaultMapper``1(PetaPoco.IDatabaseBuildConfiguration,``0,System.Action{``0})">
            <summary>
                Specifies the default mapper to use when no specific mapper has been registered.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="mapper">The mapper to use as the default.</param>
            <param name="configure">The configure mapper callback.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mapper" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="configure" /> is null.</exception>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingDefaultMapper``1(PetaPoco.IDatabaseBuildConfiguration)">
            <summary>
                Specifies the default mapper to use when no specific mapper has been registered.
            </summary>
            <param name="source">The configuration source.</param>
            <typeparam name="T">The mapper type.</typeparam>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingDefaultMapper``1(PetaPoco.IDatabaseBuildConfiguration,System.Action{``0})">
            <summary>
                Specifies the default mapper to use when no specific mapper has been registered.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="configure">The configure mapper callback.</param>
            <typeparam name="T">The mapper type.</typeparam>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="configure" /> is null.</exception>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.UsingIsolationLevel(PetaPoco.IDatabaseBuildConfiguration,System.Data.IsolationLevel)">
            <summary>
                Specifies the transaction isolation level to use.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="isolationLevel"></param>
            <returns>The configuration source to form a fluent interface.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseConfigurationExtensions.Create(PetaPoco.IDatabaseBuildConfiguration)">
            <summary>
                Creates an instance of PetaPooc using the specified <paramref name="source" />.
            </summary>
            <param name="source">The configuration source used to create and configure an instance of PetaPoco.</param>
            <returns>An instance of PetaPoco.</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Insert(System.String,System.Object)">
            <summary>
                Performs an SQL Insert.
            </summary>
            <param name="tableName">The name of the table to insert into.</param>
            <param name="poco">The POCO object that specifies the column values to be inserted.</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables.</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Insert(System.String,System.String,System.Object)">
            <summary>
                Performs an SQL Insert.
            </summary>
            <param name="tableName">The name of the table to insert into.</param>
            <param name="primaryKeyName">The name of the primary key column of the table.</param>
            <param name="poco">The POCO object that specifies the column values to be inserted.</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables.</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Insert(System.String,System.String,System.Boolean,System.Object)">
            <summary>
                Performs an SQL Insert.
            </summary>
            <param name="tableName">The name of the table to insert into.</param>
            <param name="primaryKeyName">The name of the primary key column of the table.</param>
            <param name="autoIncrement">True if the primary key is automatically allocated by the DB.</param>
            <param name="poco">The POCO object that specifies the column values to be inserted.</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables.</returns>
            <remarks>
                Inserts a poco into a table. If the poco has a property with the same name
                as the primary key, the id of the new record is assigned to it. Either way,
                the new id is returned.
            </remarks>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Insert(System.Object)">
            <summary>
                Performs an SQL Insert.
            </summary>
            <param name="poco">The POCO object that specifies the column values to be inserted.</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables.</returns>
            <remarks>
                The name of the table, it's primary key and whether it's an auto-allocated primary key are retrieved
                from the POCO's attributes
            </remarks>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update(System.String,System.String,System.Object,System.Object)">
            <summary>
                Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <returns>The number of affected records</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update(System.String,System.String,System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update(System.String,System.String,System.Object)">
            <summary>
                Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update(System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update(System.Object)">
            <summary>
                Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update(System.Object,System.Object)">
            <summary>
                Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update(System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update``1(System.String,System.Object[])">
            <summary>
                Performs an SQL update
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to update</typeparam>
            <param name="sql">The SQL update and condition clause (ie: everything after "UPDATE tablename"</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Update``1(PetaPoco.Sql)">
            <summary>
                Performs an SQL update
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to update</typeparam>
            <param name="sql">
                An SQL builder object representing the SQL update and condition clause (ie: everything after "UPDATE
                tablename"
            </param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Delete(System.String,System.String,System.Object)">
            <summary>
                Performs and SQL Delete
            </summary>
            <param name="tableName">The name of the table to delete from</param>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The POCO object whose primary key value will be used to delete the row</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Delete(System.String,System.String,System.Object,System.Object)">
            <summary>
                Performs and SQL Delete
            </summary>
            <param name="tableName">The name of the table to delete from</param>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">
                The POCO object whose primary key value will be used to delete the row (or null to use the supplied
                primary key value)
            </param>
            <param name="primaryKeyValue">
                The value of the primary key identifing the record to be deleted (or null, or get this
                value from the POCO instance)
            </param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Delete(System.Object)">
            <summary>
                Performs an SQL Delete
            </summary>
            <param name="poco">The POCO object specifying the table name and primary key value of the row to be deleted</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Delete``1(System.Object)">
            <summary>
                Performs an SQL Delete
            </summary>
            <typeparam name="T">The POCO class whose attributes identify the table and primary key to be used in the delete</typeparam>
            <param name="pocoOrPrimaryKey">The value of the primary key of the row to delete</param>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Delete``1(System.String,System.Object[])">
            <summary>
                Performs an SQL Delete
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to delete from</typeparam>
            <param name="sql">The SQL condition clause identifying the row to delete (ie: everything after "DELETE FROM tablename"</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Delete``1(PetaPoco.Sql)">
            <summary>
                Performs an SQL Delete
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to delete from</typeparam>
            <param name="sql">
                An SQL builder object representing the SQL condition clause identifying the row to delete (ie:
                everything after "UPDATE tablename"
            </param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.IAlterPoco.IsNew(System.String,System.Object)">
            <summary>
                Check if a poco represents a new row
            </summary>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The object instance whose "newness" is to be tested</param>
            <returns>True if the POCO represents a record already in the database</returns>
            <remarks>This method simply tests if the POCO's primary key column property has been set to something non-zero.</remarks>
        </member>
        <member name="M:PetaPoco.IAlterPoco.IsNew(System.Object)">
            <summary>
                Check if a poco represents a new row
            </summary>
            <param name="poco">The object instance whose "newness" is to be tested</param>
            <returns>True if the POCO represents a record already in the database</returns>
            <remarks>This method simply tests if the POCO's primary key column property has been set to something non-zero.</remarks>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Save(System.String,System.String,System.Object)">
            <summary>
                Saves a POCO by either performing either an SQL Insert or SQL Update
            </summary>
            <param name="tableName">The name of the table to be updated</param>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The POCO object to be saved</param>
        </member>
        <member name="M:PetaPoco.IAlterPoco.Save(System.Object)">
            <summary>
                Saves a POCO by either performing either an SQL Insert or SQL Update
            </summary>
            <param name="poco">The POCO object to be saved</param>
        </member>
        <member name="T:PetaPoco.IBuildConfigurationSettings">
            <summary>
                Represents the build configuration settings contract.
            </summary>
        </member>
        <member name="M:PetaPoco.IBuildConfigurationSettings.SetSetting(System.String,System.Object)">
            <summary>
                Sets the setting against the specified key.
            </summary>
            <param name="key">The setting's key.</param>
            <param name="value">The setting's value.</param>
        </member>
        <member name="M:PetaPoco.IBuildConfigurationSettings.TryGetSetting``1(System.String,System.Action{``0},System.Action)">
            <summary>
                Tries to get the setting and calls the <paramref name="setSetting" /> to set the value if found.
            </summary>
            <typeparam name="T">The setting type.</typeparam>
            <param name="key">The setting's key.</param>
            <param name="setSetting">The set setting callback.</param>
            <param name="onFail">The on fail callback, called when no setting can be set.</param>
        </member>
        <member name="T:PetaPoco.IDatabase">
            <summary>
                Specifies the database contract.
            </summary>
        </member>
        <member name="P:PetaPoco.IDatabase.DefaultMapper">
            <summary>
                Gets the default mapper. (Default is <see cref="T:PetaPoco.ConventionMapper" />)
            </summary>
            <returns>
                The default mapper.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.LastSQL">
            <summary>
                Gets the SQL of the last executed statement
            </summary>
            <returns>
                The last executed SQL.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.LastArgs">
            <summary>
                Gets the arguments to the last execute statement
            </summary>
            <returns>
                The last executed SQL arguments.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.LastCommand">
            <summary>
                Gets a formatted string describing the last executed SQL statement and it's argument values
            </summary>
            <returns>
                The formatted string.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.EnableAutoSelect">
            <summary>
                Gets or sets the enable auto select. (Default is True)
            </summary>
            <remarks>
                When set to true, PetaPoco will automatically create the "SELECT columns" section of the query for any query which
                is found to require them.
            </remarks>
            <returns>
                True, if auto select is enabled; Else, false.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.EnableNamedParams">
            <summary>
                Gets the flag for whether named params are enabled. (Default is True)
            </summary>
            <remarks>
                When set to true, parameters can be named ?myparam and populated from properties of the passed in argument values.
            </remarks>
            <returns>
                True, if named parameters are enabled; Else, false.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.CommandTimeout">
            <summary>
                Sets the timeout value, in seconds, which PetaPoco applies to all <see cref="P:System.Data.IDbCommand.CommandTimeout" />.
                (Default is 0)
            </summary>
            <remarks>
                If the current value is zero PetaPoco will not set the command timeout, and therefor, the .net default (30 seconds)
                will be in affect.
            </remarks>
            <returns>
                The current command timeout.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.OneTimeCommandTimeout">
            <summary>
                Sets the timeout value for the next (and only next) SQL statement.
            </summary>
            <remarks>
                This is a one-time settings, which after use, will return the <see cref="P:PetaPoco.IDatabase.CommandTimeout" /> setting.
            </remarks>
            <returns>
                The one time command timeout.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.Provider">
            <summary>
                Gets the current <seealso cref="P:PetaPoco.IDatabase.Provider" />.
            </summary>
            <returns>
                The current database provider.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.ConnectionString">
            <summary>
                Gets the connection string.
            </summary>
            <returns>
                The connection string.
            </returns>
        </member>
        <member name="P:PetaPoco.IDatabase.IsolationLevel">
            <summary>
                Gets or sets the transaction isolation level.
            </summary>
            <remarks>
                When value is null, the underlying providers default isolation level is used.
            </remarks>
        </member>
        <member name="M:PetaPoco.IDatabase.GetTransaction">
            <summary>
                Starts or continues a transaction.
            </summary>
            <returns>An ITransaction reference that must be Completed or disposed</returns>
            <remarks>
                This method makes management of calls to Begin/End/CompleteTransaction easier.
                The usage pattern for this should be:
                using (var tx = db.GetTransaction())
                {
                // Do stuff
                db.Update(...);
                // Mark the transaction as complete
                tx.Complete();
                }
                Transactions can be nested but they must all be completed otherwise the entire
                transaction is aborted.
            </remarks>
        </member>
        <member name="M:PetaPoco.IDatabase.BeginTransaction">
            <summary>
                Starts a transaction scope, see GetTransaction() for recommended usage
            </summary>
        </member>
        <member name="M:PetaPoco.IDatabase.AbortTransaction">
            <summary>
                Aborts the entire outer most transaction scope
            </summary>
            <remarks>
                Called automatically by Transaction.Dispose()
                if the transaction wasn't completed.
            </remarks>
        </member>
        <member name="M:PetaPoco.IDatabase.CompleteTransaction">
            <summary>
                Marks the current transaction scope as complete.
            </summary>
        </member>
        <member name="T:PetaPoco.IDatabaseBuildConfiguration">
            <summary>
                A helper interface which enables fluent configuration extension methods.
            </summary>
        </member>
        <member name="M:PetaPoco.IExecute.Execute(System.String,System.Object[])">
            <summary>
                Executes a non-query command
            </summary>
            <param name="sql">The SQL statement to execute</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.IExecute.Execute(PetaPoco.Sql)">
            <summary>
                Executes a non-query command
            </summary>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.IExecute.ExecuteScalar``1(System.String,System.Object[])">
            <summary>
                Executes a query and return the first column of the first row in the result set.
            </summary>
            <typeparam name="T">The type that the result value should be cast to</typeparam>
            <param name="sql">The SQL query to execute</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The scalar value cast to T</returns>
        </member>
        <member name="M:PetaPoco.IExecute.ExecuteScalar``1(PetaPoco.Sql)">
            <summary>
                Executes a query and return the first column of the first row in the result set.
            </summary>
            <typeparam name="T">The type that the result value should be cast to</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The scalar value cast to T</returns>
        </member>
        <member name="T:PetaPoco.IHideObjectMethods">
            <summary>
                An interface used to hide the 4 System.Object instance methods from the API in Visual Studio intellisense.
            </summary>
            <remarks>
                Reference Project: MircoLite ORM (https://github.com/TrevorPilley/MicroLite)
                Author: Trevor Pilley
                Source: https://github.com/TrevorPilley/MicroLite/blob/develop/MicroLite/IHideObjectMethods.cs
            </remarks>
        </member>
        <member name="M:PetaPoco.IHideObjectMethods.Equals(System.Object)">
            <summary>
                Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PetaPoco.IHideObjectMethods.GetHashCode">
            <summary>
                Returns a hash code for this instance.
            </summary>
            <returns>
                A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:PetaPoco.IHideObjectMethods.GetType">
            <summary>
                Gets the type.
            </summary>
            <returns>The type of the object.</returns>
        </member>
        <member name="M:PetaPoco.IHideObjectMethods.ToString">
            <summary>
                Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
                A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``1(System.String,System.Object[])">
            <summary>
                Runs an SQL query, returning the results as an IEnumerable collection
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>An enumerable collection of result records</returns>
            <remarks>
                For some DB providers, care should be taken to not start a new Query before finishing with
                and disposing the previous one. In cases where this is an issue, consider using Fetch which
                returns the results as a List rather than an IEnumerable.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Query``1(PetaPoco.Sql)">
            <summary>
                Runs an SQL query, returning the results as an IEnumerable collection
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>An enumerable collection of result records</returns>
            <remarks>
                For some DB providers, care should be taken to not start a new Query before finishing with
                and disposing the previous one. In cases where this is an issue, consider using Fetch which
                returns the results as a List rather than an IEnumerable.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Query``3(System.Func{``0,``1,``2},System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``4(System.Func{``0,``1,``2,``3},System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``5(System.Func{``0,``1,``2,``3,``4},System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``6(System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``3(System.Func{``0,``1,``2},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``4(System.Func{``0,``1,``2,``3},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``5(System.Func{``0,``1,``2,``3,``4},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``6(System.Func{``0,``1,``2,``3,``4,``5},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``2(System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``3(System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``4(System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``5(System.String,System.Object[])">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``2(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``3(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``4(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``5(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Query``1(System.Type[],System.Object,System.String,System.Object[])">
            <summary>
                Performs a multi-poco query
            </summary>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="types">An array of Types representing the POCO types of the returned result set.</param>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``1(System.String,System.Object[])">
            <summary>
                Runs a query and returns the result set as a typed list
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query to execute</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A List holding the results of the query</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``1(PetaPoco.Sql)">
            <summary>
                Runs a query and returns the result set as a typed list
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A List holding the results of the query</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Page``1(System.Int64,System.Int64,System.String,System.Object[],System.String,System.Object[])">
            <summary>
                Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sqlCount">The SQL to retrieve the total number of records</param>
            <param name="countArgs">Arguments to any embedded parameters in the sqlCount statement</param>
            <param name="sqlPage">The SQL To retrieve a single page of results</param>
            <param name="pageArgs">Arguments to any embedded parameters in the sqlPage statement</param>
            <returns>A Page of results</returns>
            <remarks>
                This method allows separate SQL statements to be explicitly provided for the two parts of the page query.
                The page and itemsPerPage parameters are not used directly and are used simply to populate the returned Page
                object.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Page``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
                Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">The base SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>A Page of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified page.  It will also execute a second query to retrieve the
                total number of records in the result set.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Page``1(System.Int64,System.Int64,PetaPoco.Sql)">
            <summary>
                Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>A Page of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified page.  It will also execute a second query to retrieve the
                total number of records in the result set.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Page``1(System.Int64,System.Int64,PetaPoco.Sql,PetaPoco.Sql)">
            <summary>
                Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sqlCount">An SQL builder object representing the SQL to retrieve the total number of records</param>
            <param name="sqlPage">An SQL builder object representing the SQL to retrieve a single page of results</param>
            <returns>A Page of results</returns>
            <remarks>
                This method allows separate SQL statements to be explicitly provided for the two parts of the page query.
                The page and itemsPerPage parameters are not used directly and are used simply to populate the returned Page
                object.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
                Retrieves a page of records (without the total count)
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">The base SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>A List of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified page.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``1(System.Int64,System.Int64,PetaPoco.Sql)">
            <summary>
                Retrieves a page of records (without the total count)
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>A List of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified page.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.SkipTake``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
                Retrieves a range of records from result set
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="skip">The number of rows at the start of the result set to skip over</param>
            <param name="take">The number of rows to retrieve</param>
            <param name="sql">The base SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>A List of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified range.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.SkipTake``1(System.Int64,System.Int64,PetaPoco.Sql)">
            <summary>
                Retrieves a range of records from result set
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="skip">The number of rows at the start of the result set to skip over</param>
            <param name="take">The number of rows to retrieve</param>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>A List of results</returns>
            <remarks>
                PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
                records for the specified range.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Exists``1(System.Object)">
            <summary>
                Checks for the existence of a row with the specified primary key value.
            </summary>
            <typeparam name="T">The Type representing the table being queried</typeparam>
            <param name="primaryKey">The primary key value to look for</param>
            <returns>True if a record with the specified primary key value exists.</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Exists``1(System.String,System.Object[])">
            <summary>
                Checks for the existence of a row matching the specified condition
            </summary>
            <typeparam name="T">The Type representing the table being queried</typeparam>
            <param name="sqlCondition">The SQL expression to be tested for (ie: the WHERE expression)</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>True if a record matching the condition is found.</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Single``1(System.Object)">
            <summary>
                Returns the record with the specified primary key value
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="primaryKey">The primary key value of the record to fetch</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
                Throws an exception if there are zero or more than one record with the specified primary key value.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Single``1(System.String,System.Object[])">
            <summary>
                Runs a query that should always return a single row.
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
                Throws an exception if there are zero or more than one matching record
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.Single``1(PetaPoco.Sql)">
            <summary>
                Runs a query that should always return a single row.
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
                Throws an exception if there are zero or more than one matching record
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.SingleOrDefault``1(PetaPoco.Sql)">
            <summary>
                Runs a query that should always return either a single row, or no rows
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The single record matching the specified primary key value, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.IQuery.SingleOrDefault``1(System.Object)">
            <summary>
                Returns the record with the specified primary key value, or the default value if not found
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="primaryKey">The primary key value of the record to fetch</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
                If there are no records with the specified primary key value, default(T) (typically null) is returned.
            </remarks>
        </member>
        <member name="M:PetaPoco.IQuery.SingleOrDefault``1(System.String,System.Object[])">
            <summary>
                Runs a query that should always return either a single row, or no rows
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The single record matching the specified primary key value, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.IQuery.First``1(System.String,System.Object[])">
            <summary>
                Runs a query that should always return at least one return
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The first record in the result set</returns>
        </member>
        <member name="M:PetaPoco.IQuery.First``1(PetaPoco.Sql)">
            <summary>
                Runs a query that should always return at least one return
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The first record in the result set</returns>
        </member>
        <member name="M:PetaPoco.IQuery.FirstOrDefault``1(System.String,System.Object[])">
            <summary>
                Runs a query and returns the first record, or the default value if no matching records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The first record in the result set, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.IQuery.FirstOrDefault``1(PetaPoco.Sql)">
            <summary>
                Runs a query and returns the first record, or the default value if no matching records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The first record in the result set, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``3(System.Func{``0,``1,``2},System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``4(System.Func{``0,``1,``2,``3},System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``5(System.Func{``0,``1,``2,``3,``4},System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``6(System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``3(System.Func{``0,``1,``2},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``4(System.Func{``0,``1,``2,``3},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``5(System.Func{``0,``1,``2,``3,``4},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``6(System.Func{``0,``1,``2,``3,``4,``5},PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``2(System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``3(System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``4(System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``5(System.String,System.Object[])">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fifth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``2(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``3(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``4(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.Fetch``5(PetaPoco.Sql)">
            <summary>
                Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="T5">The fourth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.IQuery.QueryMultiple(PetaPoco.Sql)">
            <summary> 
            Perform a multi-results set query 
            </summary> 
            <param name="sql">An SQL builder object representing the query and it's arguments</param> 
            <returns>A GridReader to be queried</returns> 
        </member>
        <member name="M:PetaPoco.IQuery.QueryMultiple(System.String,System.Object[])">
            <summary> 
            Perform a multi-results set query 
            </summary> 
            <param name="sql">The SQL query to be executed</param> 
            <param name="args">Arguments to any embedded parameters in the SQL</param> 
            <returns>A GridReader to be queried</returns>
        </member>
        <member name="T:PetaPoco.ITransactionAccessor">
            <summary>
                Represents a contract which exposes the current <see cref="T:System.Data.IDbTransaction" /> instance.
            </summary>
        </member>
        <member name="P:PetaPoco.ITransactionAccessor.Transaction">
            <summary>
                Gets the current transaction instance.
            </summary>
            <returns>
                The current transaction instance; else, <c>null</c> if not transaction is in progress.
            </returns>
        </member>
        <member name="T:PetaPoco.ColumnAttribute">
            <summary>
                Represents an attribute which can decorate a Poco property to mark the property as a column. It may also optionally
                supply the DB column name.
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnAttribute.Name">
            <summary>
                The SQL name of the column
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnAttribute.ForceToUtc">
            <summary>
                True if time and date values returned through this column should be forced to UTC DateTimeKind. (no conversion is
                applied - the Kind of the DateTime property
                is simply set to DateTimeKind.Utc instead of DateTimeKind.Unknown.
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnAttribute.InsertTemplate">
            <summary>
                The insert template. If not null, this template is used for generating the insert section instead of the deafult
                string.Format("{0}{1}", paramPrefix, index"). Setting this allows DB related interactions, such as "CAST({0}{1} AS
                json)"
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnAttribute.UpdateTemplate">
            <summary>
                The update template. If not null, this template is used for generating the update section instead of the deafult
                string.Format("{0} = {1}{2}", colName, paramPrefix, index"). Setting this allows DB related interactions, such as "{0} = CAST({1}{2} AS
                json)"
            </summary>
        </member>
        <member name="M:PetaPoco.ColumnAttribute.#ctor">
            <summary>
                Constructs a new instance of the <seealso cref="T:PetaPoco.ColumnAttribute" />.
            </summary>
        </member>
        <member name="M:PetaPoco.ColumnAttribute.#ctor(System.String)">
            <summary>
                Constructs a new instance of the <seealso cref="T:PetaPoco.ColumnAttribute" />.
            </summary>
            <param name="name">The name of the column.</param>
        </member>
        <member name="T:PetaPoco.ExplicitColumnsAttribute">
            <summary>
                Represents the attribute which decorates a poco class to state all columns must be explicitly mapped using either a
                <seealso cref="T:PetaPoco.ColumnAttribute" /> or <seealso cref="T:PetaPoco.ResultColumnAttribute" />.
            </summary>
        </member>
        <member name="T:PetaPoco.IgnoreAttribute">
            <summary>
                Represents an attribute which can decorate a Poco property to ensure PetaPoco does not map column, and therefore
                ignores the column.
            </summary>
        </member>
        <member name="T:PetaPoco.PrimaryKeyAttribute">
            <summary>
                Is an attribute, which when applied to a Poco class, specifies primary key column. Additionally, specifies whether
                the column is auto incrementing and the optional sequence name for Oracle sequence columns.
            </summary>
        </member>
        <member name="P:PetaPoco.PrimaryKeyAttribute.Value">
            <summary>
                The column name.
            </summary>
            <returns>
                The column name.
            </returns>
        </member>
        <member name="P:PetaPoco.PrimaryKeyAttribute.SequenceName">
            <summary>
                The sequence name.
            </summary>
            <returns>
                The sequence name.
            </returns>
        </member>
        <member name="P:PetaPoco.PrimaryKeyAttribute.AutoIncrement">
            <summary>
                A flag which specifies if the primary key is auto incrementing.
            </summary>
            <returns>
                True if the primary key is auto incrementing; else, False.
            </returns>
        </member>
        <member name="M:PetaPoco.PrimaryKeyAttribute.#ctor(System.String)">
            <summary>
                Constructs a new instance of the <seealso cref="T:PetaPoco.PrimaryKeyAttribute" />.
            </summary>
            <param name="primaryKey">The name of the primary key column.</param>
        </member>
        <member name="T:PetaPoco.ResultColumnAttribute">
            <summary>
                Represents an attribute which can decorate a poco property as a result only column. A result only column is a
                column that is only populated in queries and is not used for updates or inserts operations.
            </summary>
        </member>
        <member name="M:PetaPoco.ResultColumnAttribute.#ctor">
            <summary>
                Constructs a new instance of the <seealso cref="T:PetaPoco.ResultColumnAttribute" />.
            </summary>
        </member>
        <member name="M:PetaPoco.ResultColumnAttribute.#ctor(System.String)">
            <summary>
                Constructs a new instance of the <seealso cref="T:PetaPoco.ResultColumnAttribute" />.
            </summary>
            <param name="name">The name of the DB column.</param>
        </member>
        <member name="T:PetaPoco.TableNameAttribute">
            <summary>
                Represents an attribute, which when applied to a Poco class, specifies the the DB table name which it maps to
            </summary>
        </member>
        <member name="P:PetaPoco.TableNameAttribute.Value">
            <summary>
                The table nane of the database that this entity maps to.
            </summary>
            <returns>
                The table nane of the database that this entity maps to.
            </returns>
        </member>
        <member name="M:PetaPoco.TableNameAttribute.#ctor(System.String)">
            <summary>
                Constructs a new instance of the <seealso cref="T:PetaPoco.TableNameAttribute" />.
            </summary>
            <param name="tableName">The table nane of the database that this entity maps to.</param>
        </member>
        <member name="T:PetaPoco.ValueConverterAttribute">
            <summary>
            Represents an attribute which can decorate a Poco property conver value from database type to property type and conversely.
            </summary>
        </member>
        <member name="M:PetaPoco.ValueConverterAttribute.ConvertToDb(System.Object)">
            <summary>
            Function to convert property value to database type value.
            </summary>
            <param name="value">Property value</param>
            <returns>Converted database value</returns>
        </member>
        <member name="M:PetaPoco.ValueConverterAttribute.ConvertFromDb(System.Object)">
            <summary>
            Function to convert database value to property type value.
            </summary>
            <param name="value">Database value</param>
            <returns>Converted property type value</returns>
        </member>
        <member name="T:PetaPoco.AnsiString">
            <summary>
                Wrap strings in an instance of this class to force use of DBType.AnsiString
            </summary>
        </member>
        <member name="P:PetaPoco.AnsiString.Value">
            <summary>
                The string value
            </summary>
        </member>
        <member name="M:PetaPoco.AnsiString.#ctor(System.String)">
            <summary>
                Constructs an AnsiString
            </summary>
            <param name="str">The C# string to be converted to ANSI before being passed to the DB</param>
        </member>
        <member name="T:PetaPoco.ColumnInfo">
            <summary>
                Hold information about a column in the database.
            </summary>
            <remarks>
                Typically ColumnInfo is automatically populated from the attributes on a POCO object and it's properties. It can
                however also be returned from the IMapper interface to provide your owning bindings between the DB and your POCOs.
            </remarks>
        </member>
        <member name="P:PetaPoco.ColumnInfo.ColumnName">
            <summary>
                The SQL name of the column
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnInfo.ResultColumn">
            <summary>
                True if this column returns a calculated value from the database and shouldn't be used in Insert and Update
                operations.
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnInfo.ForceToUtc">
            <summary>
                True if time and date values returned through this column should be forced to UTC DateTimeKind. (no conversion is
                applied - the Kind of the DateTime property
                is simply set to DateTimeKind.Utc instead of DateTimeKind.Unknown.
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnInfo.InsertTemplate">
            <summary>
                The insert template. If not null, this template is used for generating the insert section instead of the deafult
                string.Format("{0}{1}", paramPrefix, index"). Setting this allows DB related interactions, such as "CAST({0}{1} AS
                json)"
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnInfo.UpdateTemplate">
            <summary>
                The update template. If not null, this template is used for generating the update section instead of the deafult
                string.Format("{0} = {1}{2}", colName, paramPrefix, index"). Setting this allows DB related interactions, such as "{0} = CAST({1}{2} AS
                json)"
            </summary>
        </member>
        <member name="M:PetaPoco.ColumnInfo.FromProperty(System.Reflection.PropertyInfo)">
            <summary>
                Creates and populates a ColumnInfo from the attributes of a POCO property.
            </summary>
            <param name="propertyInfo">The property whose column info is required</param>
            <returns>A ColumnInfo instance</returns>
        </member>
        <member name="T:PetaPoco.ConventionMapper">
            <summary>
                Represents a configurable convention mapper.
            </summary>
            <remarks>
                By default this mapper replaces <see cref="T:PetaPoco.StandardMapper" /> without change, which means backwards compatibility
                is kept.
            </remarks>
        </member>
        <member name="P:PetaPoco.ConventionMapper.GetSequenceName">
            <summary>
                Gets or sets the get sequence name logic.
            </summary>
        </member>
        <member name="P:PetaPoco.ConventionMapper.InflectColumnName">
            <summary>
                Gets or sets the inflect column name logic.
            </summary>
        </member>
        <member name="P:PetaPoco.ConventionMapper.InflectTableName">
            <summary>
                Gets or sets the inflect table name logic.
            </summary>
        </member>
        <member name="P:PetaPoco.ConventionMapper.IsPrimaryKeyAutoIncrement">
            <summary>
                Gets or sets the is primary key auto increment logic.
            </summary>
        </member>
        <member name="P:PetaPoco.ConventionMapper.MapColumn">
            <summary>
                Gets or sets the map column logic.
            </summary>
        </member>
        <member name="P:PetaPoco.ConventionMapper.MapPrimaryKey">
            <summary>
                Gets or set the map primary key logic.
            </summary>
        </member>
        <member name="P:PetaPoco.ConventionMapper.MapTable">
            <summary>
                Gets or sets the map table logic.
            </summary>
        </member>
        <member name="P:PetaPoco.ConventionMapper.FromDbConverter">
            <summary>
                Gets or sets the from db convert logic.
            </summary>
        </member>
        <member name="P:PetaPoco.ConventionMapper.ToDbConverter">
            <summary>
                Gets or sets the to db converter logic.
            </summary>
        </member>
        <member name="M:PetaPoco.ConventionMapper.#ctor">
            <summary>
                Constructs a new instance of convention mapper.
            </summary>
        </member>
        <member name="M:PetaPoco.ConventionMapper.GetTableInfo(System.Type)">
            <summary>
                Get information about the table associated with a POCO class
            </summary>
            <param name="pocoType">The poco type.</param>
            <returns>A TableInfo instance</returns>
            <remarks>
                This method must return a valid TableInfo.
                To create a TableInfo from a POCO's attributes, use TableInfo.FromPoco
            </remarks>
        </member>
        <member name="M:PetaPoco.ConventionMapper.GetColumnInfo(System.Reflection.PropertyInfo)">
            <summary>
                Get information about the column associated with a property of a POCO
            </summary>
            <param name="pocoProperty">The PropertyInfo of the property being queried</param>
            <returns>A reference to a ColumnInfo instance, or null to ignore this property</returns>
            <remarks>
                To create a ColumnInfo from a property's attributes, use PropertyInfo.FromProperty
            </remarks>
        </member>
        <member name="M:PetaPoco.ConventionMapper.GetFromDbConverter(System.Reflection.PropertyInfo,System.Type)">
            <summary>
                Supply a function to convert a database value to the correct property value
            </summary>
            <param name="targetProperty">The target property</param>
            <param name="sourceType">The type of data returned by the DB</param>
            <returns>A Func that can do the conversion, or null for no conversion</returns>
        </member>
        <member name="M:PetaPoco.ConventionMapper.GetToDbConverter(System.Reflection.PropertyInfo)">
            <summary>
                Supply a function to convert a property value into a database value
            </summary>
            <param name="sourceProperty">The property to be converted</param>
            <returns>A Func that can do the conversion</returns>
            <remarks>
                This conversion is only used for converting values from POCO's that are
                being Inserted or Updated.
                Conversion is not available for parameter values passed directly to queries.
            </remarks>
        </member>
        <member name="T:PetaPoco.DatabaseProvider">
            <summary>
                Base class for DatabaseType handlers - provides default/common handling for different database engines
            </summary>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.GetFactory">
            <summary>
                Gets the DbProviderFactory for this database provider.
            </summary>
            <returns>The provider factory.</returns>
        </member>
        <member name="P:PetaPoco.DatabaseProvider.HasNativeGuidSupport">
            <summary>
                Gets a flag for whether the DB has native support for GUID/UUID.
            </summary>
        </member>
        <member name="P:PetaPoco.DatabaseProvider.PagingUtility">
            <summary>
                Gets the <seealso cref="T:PetaPoco.IPagingHelper" /> this provider supplies.
            </summary>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.EscapeTableName(System.String)">
            <summary>
                Escape a tablename into a suitable format for the associated database provider.
            </summary>
            <param name="tableName">
                The name of the table (as specified by the client program, or as attributes on the associated
                POCO class.
            </param>
            <returns>The escaped table name</returns>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.EscapeSqlIdentifier(System.String)">
            <summary>
                Escape and arbitary SQL identifier into a format suitable for the associated database provider
            </summary>
            <param name="sqlIdentifier">The SQL identifier to be escaped</param>
            <returns>The escaped identifier</returns>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.GetParameterPrefix(System.String)">
            <summary>
                Returns the prefix used to delimit parameters in SQL query strings.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns>The providers character for prefixing a query parameter.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.MapParameterValue(System.Object)">
            <summary>
                Converts a supplied C# object value into a value suitable for passing to the database
            </summary>
            <param name="value">The value to convert</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.PreExecute(System.Data.IDbCommand)">
            <summary>
                Called immediately before a command is executed, allowing for modification of the IDbCommand before it's passed to
                the database provider
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.BuildPageQuery(System.Int64,System.Int64,PetaPoco.SQLParts,System.Object[]@)">
            <summary>
                Builds an SQL query suitable for performing page based queries to the database
            </summary>
            <param name="skip">The number of rows that should be skipped by the query</param>
            <param name="take">The number of rows that should be retruend by the query</param>
            <param name="parts">The original SQL query after being parsed into it's component parts</param>
            <param name="args">Arguments to any embedded parameters in the SQL query</param>
            <returns>The final SQL query that should be executed.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.GetExistsSql">
            <summary>
                Returns an SQL Statement that can check for the existence of a row in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.GetAutoIncrementExpression(PetaPoco.TableInfo)">
            <summary>
                Return an SQL expression that can be used to populate the primary key column of an auto-increment column.
            </summary>
            <param name="tableInfo">Table info describing the table</param>
            <returns>An SQL expressions</returns>
            <remarks>See the Oracle database type for an example of how this method is used.</remarks>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.GetInsertOutputClause(System.String)">
            <summary>
                Returns an SQL expression that can be used to specify the return value of auto incremented columns.
            </summary>
            <param name="primaryKeyName">The primary key of the row being inserted.</param>
            <returns>An expression describing how to return the new primary key value</returns>
            <remarks>See the SQLServer database provider for an example of how this method is used.</remarks>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.ExecuteInsert(PetaPoco.Database,System.Data.IDbCommand,System.String)">
            <summary>
                Performs an Insert operation
            </summary>
            <param name="database">The calling Database object</param>
            <param name="cmd">The insert command to be executed</param>
            <param name="primaryKeyName">The primary key of the table being inserted into</param>
            <returns>The ID of the newly inserted record</returns>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.GetFactory(System.String[])">
            <summary>
                Returns the .net standard conforming DbProviderFactory.
            </summary>
            <param name="assemblyQualifiedNames">The assembly qualified name of the provider factory.</param>
            <returns>The db provider factory.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="assemblyQualifiedNames" /> does not match a type.</exception>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.Resolve(System.Type,System.Boolean,System.String)">
            <summary>
                Look at the type and provider name being used and instantiate a suitable DatabaseType instance.
            </summary>
            <param name="type">The type name.</param>
            <param name="allowDefault">A flag that when set allows the default <see cref="T:PetaPoco.SqlServerDatabaseProvider"/> to be returned if not match is found.</param>
            <param name="connectionString">The connection string.</param>
            <returns>The database provider.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.Resolve(System.String,System.Boolean,System.String)">
            <summary>
                Look at the type and provider name being used and instantiate a suitable DatabaseType instance.
            </summary>
            <param name="providerName">The provider name.</param>
            <param name="allowDefault">A flag that when set allows the default <see cref="T:PetaPoco.SqlServerDatabaseProvider"/> to be returned if not match is found.</param>
            <param name="connectionString">The connection string.</param>
            <returns>The database type.</returns>
        </member>
        <member name="M:PetaPoco.DatabaseProvider.Unwrap(System.Data.Common.DbProviderFactory)">
            <summary>
                Unwraps a wrapped <see cref="T:System.Data.Common.DbProviderFactory"/>.
            </summary>
            <param name="factory">The factory to unwrap.</param>
            <returns>The unwrapped factory or the original factory if no wrapping occurred.</returns>
        </member>
        <member name="M:PetaPoco.GridReader.#ctor(PetaPoco.Database,System.Data.IDbCommand,System.Data.IDataReader,PetaPoco.IMapper)">
            <summary>
            The control structure for a multi-result set query
            </summary>
            <param name="database"></param>
            <param name="command"></param>
            <param name="reader"></param>
            <param name="defaultMapper"></param>
        </member>
        <member name="M:PetaPoco.GridReader.Read``1">
            <summary>
            Reads from a GridReader, returning the results as an IEnumerable collection
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <returns>An enumerable collection of result records</returns>
        </member>
        <member name="M:PetaPoco.GridReader.Read``2">
            <summary>
            Perform a multi-poco read from a GridReader
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.GridReader.Read``3">
            <summary>
            Perform a multi-poco read from a GridReader
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.GridReader.Read``4">
            <summary>
            Perform a multi-poco read from a GridReader
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The forth POCO type</typeparam>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.GridReader.Read``3(System.Func{``0,``1,``2})">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.GridReader.Read``4(System.Func{``0,``1,``2,``3})">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.GridReader.Read``5(System.Func{``0,``1,``2,``3,``4})">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The forth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.GridReader.SinglePocoFromIDataReader``1(System.Int32)">
            <summary>
            Read data to a single poco
            </summary>
            <typeparam name="T">The type representing a row in the result set</typeparam>
            <param name="index">Reader row to be read from the underlying IDataReader</param>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.GridReader.MultiPocoFromIDataReader``1(System.Int32,System.Type[],System.Object)">
            <summary>
            Read data to multiple pocos
            </summary>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="index">Reader row to be read from the underlying IDataReader</param>
            <param name="types">An array of Types representing the POCO types of the returned result set.</param>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.GridReader.NextResult">
            <summary>
            Advance the IDataReader to the NextResult, if available
            </summary>
        </member>
        <member name="M:PetaPoco.GridReader.Dispose">
            <summary>
            Dispose the grid, closing and disposing both the underlying reader, command and shared connection
            </summary>
        </member>
        <member name="M:PetaPoco.IGridReader.Read``1">
            <summary>
            Reads from a GridReader, returning the results as an IEnumerable collection
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <returns>An enumerable collection of result records</returns>
        </member>
        <member name="M:PetaPoco.IGridReader.Read``2">
            <summary>
            Perform a multi-poco read from a GridReader
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IGridReader.Read``3">
            <summary>
            Perform a multi-poco read from a GridReader
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IGridReader.Read``4">
            <summary>
            Perform a multi-poco read from a GridReader
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The forth POCO type</typeparam>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IGridReader.Read``3(System.Func{``0,``1,``2})">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IGridReader.Read``4(System.Func{``0,``1,``2,``3})">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.IGridReader.Read``5(System.Func{``0,``1,``2,``3,``4})">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The forth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="T:PetaPoco.IMapper">
            <summary>
                IMapper provides a way to hook into PetaPoco's Database to POCO mapping mechanism to either
                customize or completely replace it.
            </summary>
            <remarks>
                To use this functionality, instantiate a class that implements IMapper and then pass it to
                PetaPoco through the static method Mappers.Register()
            </remarks>
        </member>
        <member name="M:PetaPoco.IMapper.GetTableInfo(System.Type)">
            <summary>
                Get information about the table associated with a POCO class
            </summary>
            <param name="pocoType">The poco type.</param>
            <returns>A TableInfo instance</returns>
            <remarks>
                This method must return a valid TableInfo.
                To create a TableInfo from a POCO's attributes, use TableInfo.FromPoco
            </remarks>
        </member>
        <member name="M:PetaPoco.IMapper.GetColumnInfo(System.Reflection.PropertyInfo)">
            <summary>
                Get information about the column associated with a property of a POCO
            </summary>
            <param name="pocoProperty">The PropertyInfo of the property being queried</param>
            <returns>A reference to a ColumnInfo instance, or null to ignore this property</returns>
            <remarks>
                To create a ColumnInfo from a property's attributes, use PropertyInfo.FromProperty
            </remarks>
        </member>
        <member name="M:PetaPoco.IMapper.GetFromDbConverter(System.Reflection.PropertyInfo,System.Type)">
            <summary>
                Supply a function to convert a database value to the correct property value
            </summary>
            <param name="targetProperty">The target property</param>
            <param name="sourceType">The type of data returned by the DB</param>
            <returns>A Func that can do the conversion, or null for no conversion</returns>
        </member>
        <member name="M:PetaPoco.IMapper.GetToDbConverter(System.Reflection.PropertyInfo)">
            <summary>
                Supply a function to convert a property value into a database value
            </summary>
            <param name="sourceProperty">The property to be converted</param>
            <returns>A Func that can do the conversion</returns>
            <remarks>
                This conversion is only used for converting values from POCO's that are
                being Inserted or Updated.
                Conversion is not available for parameter values passed directly to queries.
            </remarks>
        </member>
        <member name="T:PetaPoco.IProvider">
            <summary>
                Represents a contract for a database type provider.
            </summary>
        </member>
        <member name="P:PetaPoco.IProvider.PagingUtility">
            <summary>
                Gets the <seealso cref="T:PetaPoco.IPagingHelper" /> this provider supplies.
            </summary>
        </member>
        <member name="P:PetaPoco.IProvider.HasNativeGuidSupport">
            <summary>
                Gets a flag for whether the DB has native support for GUID/UUID.
            </summary>
        </member>
        <member name="M:PetaPoco.IProvider.EscapeTableName(System.String)">
            <summary>
                Escape a tablename into a suitable format for the associated database provider.
            </summary>
            <param name="tableName">
                The name of the table (as specified by the client program, or as attributes on the associated
                POCO class.
            </param>
            <returns>The escaped table name</returns>
        </member>
        <member name="M:PetaPoco.IProvider.EscapeSqlIdentifier(System.String)">
            <summary>
                Escape and arbitary SQL identifier into a format suitable for the associated database provider
            </summary>
            <param name="sqlIdentifier">The SQL identifier to be escaped</param>
            <returns>The escaped identifier</returns>
        </member>
        <member name="M:PetaPoco.IProvider.BuildPageQuery(System.Int64,System.Int64,PetaPoco.SQLParts,System.Object[]@)">
            <summary>
                Builds an SQL query suitable for performing page based queries to the database
            </summary>
            <param name="skip">The number of rows that should be skipped by the query</param>
            <param name="take">The number of rows that should be retruend by the query</param>
            <param name="parts">The original SQL query after being parsed into it's component parts</param>
            <param name="args">Arguments to any embedded parameters in the SQL query</param>
            <returns>The final SQL query that should be executed.</returns>
        </member>
        <member name="M:PetaPoco.IProvider.MapParameterValue(System.Object)">
            <summary>
                Converts a supplied C# object value into a value suitable for passing to the database
            </summary>
            <param name="value">The value to convert</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:PetaPoco.IProvider.PreExecute(System.Data.IDbCommand)">
            <summary>
                Called immediately before a command is executed, allowing for modification of the IDbCommand before it's passed to
                the database provider
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:PetaPoco.IProvider.GetExistsSql">
            <summary>
                Returns an SQL Statement that can check for the existence of a row in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.IProvider.ExecuteInsert(PetaPoco.Database,System.Data.IDbCommand,System.String)">
            <summary>
                Performs an Insert operation
            </summary>
            <param name="database">The calling Database object</param>
            <param name="cmd">The insert command to be executed</param>
            <param name="primaryKeyName">The primary key of the table being inserted into</param>
            <returns>The ID of the newly inserted record</returns>
        </member>
        <member name="M:PetaPoco.IProvider.GetInsertOutputClause(System.String)">
            <summary>
                Returns an SQL expression that can be used to specify the return value of auto incremented columns.
            </summary>
            <param name="primaryKeyName">The primary key of the row being inserted.</param>
            <returns>An expression describing how to return the new primary key value</returns>
            <remarks>See the SQLServer database provider for an example of how this method is used.</remarks>
        </member>
        <member name="M:PetaPoco.IProvider.GetParameterPrefix(System.String)">
            <summary>
                Returns the prefix used to delimit parameters in SQL query strings.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns>The providers character for prefixing a query parameter.</returns>
        </member>
        <member name="M:PetaPoco.IProvider.GetAutoIncrementExpression(PetaPoco.TableInfo)">
            <summary>
                Return an SQL expression that can be used to populate the primary key column of an auto-increment column.
            </summary>
            <param name="tableInfo">Table info describing the table</param>
            <returns>An SQL expressions</returns>
            <remarks>See the Oracle database type for an example of how this method is used.</remarks>
        </member>
        <member name="T:PetaPoco.ITransaction">
            <summary>
                Represents the contract for the transaction.
            </summary>
            <remarks>
                A PetaPoco helper to support transactions using the using syntax.
            </remarks>
        </member>
        <member name="M:PetaPoco.ITransaction.Complete">
            <summary>
                Completes the transaction. Not calling complete will cause the transaction to rollback on dispose.
            </summary>
        </member>
        <member name="T:PetaPoco.Mappers">
            <summary>
                This static manages registation of IMapper instances with PetaPoco
            </summary>
        </member>
        <member name="M:PetaPoco.Mappers.Register(System.Reflection.Assembly,PetaPoco.IMapper)">
            <summary>
                Registers a mapper for all types in a specific assembly
            </summary>
            <param name="assembly">The assembly whose types are to be managed by this mapper</param>
            <param name="mapper">The IMapper implementation</param>
        </member>
        <member name="M:PetaPoco.Mappers.Register(System.Type,PetaPoco.IMapper)">
            <summary>
                Registers a mapper for a single POCO type
            </summary>
            <param name="type">The type to be managed by this mapper</param>
            <param name="mapper">The IMapper implementation</param>
        </member>
        <member name="M:PetaPoco.Mappers.Revoke(System.Reflection.Assembly)">
            <summary>
                Remove all mappers for all types in a specific assembly
            </summary>
            <param name="assembly">The assembly whose mappers are to be revoked</param>
        </member>
        <member name="M:PetaPoco.Mappers.Revoke(System.Type)">
            <summary>
                Remove the mapper for a specific type
            </summary>
            <param name="type">The type whose mapper is to be removed</param>
        </member>
        <member name="M:PetaPoco.Mappers.Revoke(PetaPoco.IMapper)">
            <summary>
                Revoke an instance of a mapper
            </summary>
            <param name="mapper">The IMapper to be revkoed</param>
        </member>
        <member name="M:PetaPoco.Mappers.RevokeAll">
            <summary>
                Revokes all registered mappers.
            </summary>
        </member>
        <member name="M:PetaPoco.Mappers.GetMapper(System.Type,PetaPoco.IMapper)">
            <summary>
                Retrieve the IMapper implementation to be used for a specified POCO type.
            </summary>
            <param name="entityType">The entity type to get the mapper for.</param>
            <param name="defaultMapper">The default mapper to use when non is registered for the type.</param>
            <returns>The mapper for the given type.</returns>
        </member>
        <member name="T:PetaPoco.Page`1">
            <summary>
                Holds the results of a paged request.
            </summary>
            <typeparam name="T">The type of Poco in the returned result set</typeparam>
        </member>
        <member name="P:PetaPoco.Page`1.CurrentPage">
            <summary>
                The current page number contained in this page of result set
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.TotalPages">
            <summary>
                The total number of pages in the full result set
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.TotalItems">
            <summary>
                The total number of records in the full result set
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.ItemsPerPage">
            <summary>
                The number of items per page
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.Items">
            <summary>
                The actual records on this page
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.Context">
            <summary>
                User property to hold anything.
            </summary>
        </member>
        <member name="T:PetaPoco.Sql">
            <summary>
                A simple helper class for build SQL statements
            </summary>
        </member>
        <member name="P:PetaPoco.Sql.Builder">
            <summary>
                Instantiate a new SQL Builder object.  Weirdly implemented as a property but makes
                for more elegantly readable fluent style construction of SQL Statements
                eg: db.Query(Sql.Builder.Append(....))
            </summary>
        </member>
        <member name="P:PetaPoco.Sql.SQL">
            <summary>
                Returns the final SQL statement represented by this builder
            </summary>
        </member>
        <member name="P:PetaPoco.Sql.Arguments">
            <summary>
                Gets the complete, final set of arguments collected by this builder.
            </summary>
        </member>
        <member name="M:PetaPoco.Sql.#ctor">
            <summary>
                Default, empty constructor
            </summary>
        </member>
        <member name="M:PetaPoco.Sql.#ctor(System.String,System.Object[])">
            <summary>
                Construct an SQL statement with the supplied SQL and arguments
            </summary>
            <param name="sql">The SQL statement or fragment</param>
            <param name="args">Arguments to any parameters embedded in the SQL</param>
        </member>
        <member name="M:PetaPoco.Sql.Append(PetaPoco.Sql)">
            <summary>
                Append another SQL builder instance to the right-hand-side of this SQL builder
            </summary>
            <param name="sql">A reference to another SQL builder instance</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.Append(System.String,System.Object[])">
            <summary>
                Append an SQL fragment to the right-hand-side of this SQL builder
            </summary>
            <param name="sql">The SQL statement or fragment</param>
            <param name="args">Arguments to any parameters embedded in the SQL</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.Set(System.String,System.Object[])">
            <summary>
                Appends an SQL SET clause to this SQL builder
            </summary>
            <param name="sql">The SET clause like "{field} = {value}"</param>
            <param name="args">Arguments to any parameters embedded in the supplied SQL</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.Where(System.String,System.Object[])">
            <summary>
                Appends an SQL WHERE clause to this SQL builder
            </summary>
            <param name="sql">The condition of the WHERE clause</param>
            <param name="args">Arguments to any parameters embedded in the supplied SQL</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.OrderBy(System.Object[])">
            <summary>
                Appends an SQL ORDER BY clause to this SQL builder
            </summary>
            <param name="columns">A collection of SQL column names to order by</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.Select(System.Object[])">
            <summary>
                Appends an SQL SELECT clause to this SQL builder
            </summary>
            <param name="columns">A collection of SQL column names to select</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.From(System.Object[])">
            <summary>
                Appends an SQL FROM clause to this SQL builder
            </summary>
            <param name="tables">A collection of table names to be used in the FROM clause</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.GroupBy(System.Object[])">
            <summary>
                Appends an SQL GROUP BY clause to this SQL builder
            </summary>
            <param name="columns">A collection of column names to be grouped by</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.InnerJoin(System.String)">
            <summary>
                Appends an SQL INNER JOIN clause to this SQL builder
            </summary>
            <param name="table">The name of the table to join</param>
            <returns>A reference an SqlJoinClause through which the join condition can be specified</returns>
        </member>
        <member name="M:PetaPoco.Sql.LeftJoin(System.String)">
            <summary>
                Appends an SQL LEFT JOIN clause to this SQL builder
            </summary>
            <param name="table">The name of the table to join</param>
            <returns>A reference an SqlJoinClause through which the join condition can be specified</returns>
        </member>
        <member name="M:PetaPoco.Sql.ToString">
            <summary>
                Returns the SQL statement.
            </summary>
            <summary>
                Returns the final SQL statement represented by this builder
            </summary>
        </member>
        <member name="T:PetaPoco.Sql.SqlJoinClause">
            <summary>
                The SqlJoinClause is a simple helper class used in the construction of SQL JOIN statements with the SQL builder
            </summary>
        </member>
        <member name="M:PetaPoco.Sql.SqlJoinClause.On(System.String,System.Object[])">
            <summary>
                Appends a SQL ON clause after a JOIN statement
            </summary>
            <param name="onClause">The ON clause to be appended</param>
            <param name="args">Arguments to any parameters embedded in the supplied SQL</param>
            <returns>A reference to the parent SQL builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="T:PetaPoco.StandardMapper">
            <summary>
                StandardMapper is the default implementation of IMapper used by PetaPoco
            </summary>
        </member>
        <member name="M:PetaPoco.StandardMapper.GetTableInfo(System.Type)">
            <summary>
                Get information about the table associated with a POCO class
            </summary>
            <param name="pocoType">The poco type.</param>
            <returns>A TableInfo instance</returns>
            <remarks>
                This method must return a valid TableInfo.
                To create a TableInfo from a POCO's attributes, use TableInfo.FromPoco
            </remarks>
        </member>
        <member name="M:PetaPoco.StandardMapper.GetColumnInfo(System.Reflection.PropertyInfo)">
            <summary>
                Get information about the column associated with a property of a POCO
            </summary>
            <param name="pocoProperty">The PropertyInfo of the property being queried</param>
            <returns>A reference to a ColumnInfo instance, or null to ignore this property</returns>
            <remarks>
                To create a ColumnInfo from a property's attributes, use PropertyInfo.FromProperty
            </remarks>
        </member>
        <member name="M:PetaPoco.StandardMapper.GetFromDbConverter(System.Reflection.PropertyInfo,System.Type)">
            <summary>
                Supply a function to convert a database value to the correct property value
            </summary>
            <param name="targetProperty">The target property</param>
            <param name="sourceType">The type of data returned by the DB</param>
            <returns>A Func that can do the conversion, or null for no conversion</returns>
        </member>
        <member name="M:PetaPoco.StandardMapper.GetToDbConverter(System.Reflection.PropertyInfo)">
            <summary>
                Supply a function to convert a property value into a database value
            </summary>
            <param name="sourceProperty">The property to be converted</param>
            <returns>A Func that can do the conversion</returns>
            <remarks>
                This conversion is only used for converting values from POCO's that are
                being Inserted or Updated.
                Conversion is not available for parameter values passed directly to queries.
            </remarks>
        </member>
        <member name="T:PetaPoco.TableInfo">
            <summary>
                Use by IMapper to override table bindings for an object
            </summary>
        </member>
        <member name="P:PetaPoco.TableInfo.TableName">
            <summary>
                The database table name
            </summary>
        </member>
        <member name="P:PetaPoco.TableInfo.PrimaryKey">
            <summary>
                The name of the primary key column of the table
            </summary>
        </member>
        <member name="P:PetaPoco.TableInfo.AutoIncrement">
            <summary>
                True if the primary key column is an auto-incrementing
            </summary>
        </member>
        <member name="P:PetaPoco.TableInfo.SequenceName">
            <summary>
                The name of the sequence used for auto-incrementing Oracle primary key fields
            </summary>
        </member>
        <member name="M:PetaPoco.TableInfo.FromPoco(System.Type)">
            <summary>
                Creates and populates a TableInfo from the attributes of a POCO
            </summary>
            <param name="t">The POCO type</param>
            <returns>A TableInfo instance</returns>
        </member>
        <member name="T:PetaPoco.Transaction">
            <summary>
                Transaction object helps maintain transaction depth counts
            </summary>
        </member>
        <member name="T:PetaPoco.EnglishInflector">
            <summary>
                Author: Originally written (I believe) by Andrew Peters
                Source: Scott Kirkland (https://github.com/srkirkland/Inflector)
            </summary>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Pluralise(System.String)">
            <summary>
                Pluralises a word.
            </summary>
            <example>
                inflect.Pluralise("search").ShouldBe("searches");
                inflect.Pluralise("stack").ShouldBe("stacks");
                inflect.Pluralise("fish").ShouldBe("fish");
            </example>
            <param name="word">The word to pluralise.</param>
            <returns>The pluralised word.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Singularise(System.String)">
            <summary>
                Singularises a word.
            </summary>
            <example>
                inflect.Singularise("searches").ShouldBe("search");
                inflect.Singularise("stacks").ShouldBe("stack");
                inflect.Singularise("fish").ShouldBe("fish");
            </example>
            <param name="word">The word to signularise.</param>
            <returns>The signularised word.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Titleise(System.String)">
            <summary>
                Titleises the word. (title => Title, the_brown_fox => TheBrownFox)
            </summary>
            <example>
                inflect.Titleise("some title").ShouldBe("Some Title");
                inflect.Titleise("some-title").ShouldBe("Some Title");
                inflect.Titleise("sometitle").ShouldBe("Sometitle");
                inflect.Titleise("some_title:_the_beginning").ShouldBe("Some Title: The Beginning");
            </example>
            <param name="word">The word to titleise.</param>
            <returns>The titleised word.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Humanise(System.String)">
            <summary>
                Humanizes the word.
            </summary>
            <example>
                inflect.Humanise("some_title").ShouldBe("Some title");
                inflect.Humanise("some-title").ShouldBe("Some-title");
                inflect.Humanise("Some_title").ShouldBe("Some title");
                inflect.Humanise("someTitle").ShouldBe("Sometitle");
                inflect.Humanise("someTitle_Another").ShouldBe("Sometitle another");
            </example>
            <param name="lowercaseAndUnderscoredWord">The word to humanise.</param>
            <returns>The humanized word.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Pascalise(System.String)">
            <summary>
                Pascalises the word.
            </summary>
            <example>
                inflect.Pascalise("customer").ShouldBe("Customer");
                inflect.Pascalise("customer_name").ShouldBe("CustomerName");
                inflect.Pascalise("customer name").ShouldBe("Customer name");
            </example>
            <param name="lowercaseAndUnderscoredWord">The word to pascalise.</param>
            <returns>The pascalied word.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Camelise(System.String)">
            <summary>
                Camelises the word.
            </summary>
            <example>
                inflect.Camelise("Customer").ShouldBe("customer");
                inflect.Camelise("customer_name").ShouldBe("customerName");
                inflect.Camelise("customer_first_name").ShouldBe("customerFirstName");
                inflect.Camelise("customer name").ShouldBe("customer name");
            </example>
            <param name="lowercaseAndUnderscoredWord">The word to camelise.</param>
            <returns>The camelised word.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Underscore(System.String)">
            <summary>
                Underscores the word.
            </summary>
            <example>
                inflect.Underscore("SomeTitle").ShouldBe("some_title");
                inflect.Underscore("someTitle").ShouldBe("some_title");
                inflect.Underscore("some title that will be underscored").ShouldBe("some_title_that_will_be_underscored");
                inflect.Underscore("SomeTitleThatWillBeUnderscored").ShouldBe("some_title_that_will_be_underscored");
            </example>
            <param name="pascalCasedWord">The word to underscore.</param>
            <returns>The underscored word.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Capitalise(System.String)">
            <summary>
                Capitalises the word.
            </summary>
            <example>
                inflect.Capitalise("some title").ShouldBe("Some title");
                inflect.Capitalise("some Title").ShouldBe("Some title");
                inflect.Capitalise("SOMETITLE").ShouldBe("Sometitle");
                inflect.Capitalise("someTitle").ShouldBe("Sometitle");
                inflect.Capitalise("some title goes here").ShouldBe("Some title goes here");
            </example>
            <param name="word">The word to capitalise.</param>
            <returns>The capitalised word.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Uncapitalise(System.String)">
            <summary>
                Uncapitalises the word.
            </summary>
            <example>
                inflect.Uncapitalise("Some title").ShouldBe("some title");
                inflect.Uncapitalise("Some Title").ShouldBe("some Title");
                inflect.Uncapitalise("SOMETITLE").ShouldBe("sOMETITLE");
                inflect.Uncapitalise("someTitle").ShouldBe("someTitle");
                inflect.Uncapitalise("Some title goes here").ShouldBe("some title goes here");
            </example>
            <param name="word">The word to uncapitalise.</param>
            <returns>The uncapitalised word.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Ordinalise(System.String)">
            <summary>
                Ordinalises the number.
            </summary>
            <example>
                inflect.Ordinalise(0).ShouldBe("0th");
                inflect.Ordinalise(1).ShouldBe("1st");
                inflect.Ordinalise(2).ShouldBe("2nd");
                inflect.Ordinalise(3).ShouldBe("3rd");
                inflect.Ordinalise(101).ShouldBe("101st");
                inflect.Ordinalise(104).ShouldBe("104th");
                inflect.Ordinalise(1000).ShouldBe("1000th");
                inflect.Ordinalise(1001).ShouldBe("1001st");
            </example>
            <param name="number">The number to ordinalise.</param>
            <returns>The ordinalised number.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Ordinalise(System.Int32)">
            <summary>
                Ordinalises the number.
            </summary>
            <example>
                inflect.Ordinalise("0").ShouldBe("0th");
                inflect.Ordinalise("1").ShouldBe("1st");
                inflect.Ordinalise("2").ShouldBe("2nd");
                inflect.Ordinalise("3").ShouldBe("3rd");
                inflect.Ordinalise("100").ShouldBe("100th");
                inflect.Ordinalise("101").ShouldBe("101st");
                inflect.Ordinalise("1000").ShouldBe("1000th");
                inflect.Ordinalise("1001").ShouldBe("1001st");
            </example>
            <param name="number">The number to ordinalise.</param>
            <returns>The ordinalised number.</returns>
        </member>
        <member name="M:PetaPoco.EnglishInflector.Dasherise(System.String)">
            <summary>
                Dasherises the word.
            </summary>
            <example>
                inflect.Dasherise("some_title").ShouldBe("some-title");
                inflect.Dasherise("some-title").ShouldBe("some-title");
                inflect.Dasherise("some_title_goes_here").ShouldBe("some-title-goes-here");
                inflect.Dasherise("some_title and_another").ShouldBe("some-title and-another");
            </example>
            <param name="underscoredWord">The word to dasherise.</param>
            <returns>The dasherised word.</returns>
        </member>
        <member name="T:PetaPoco.IInflector">
            <summary>
                Specifies the inflection contract.
            </summary>
        </member>
        <member name="M:PetaPoco.IInflector.Pluralise(System.String)">
            <summary>
                Pluralises a word.
            </summary>
            <example>
                inflect.Pluralise("search").ShouldBe("searches");
                inflect.Pluralise("stack").ShouldBe("stacks");
                inflect.Pluralise("fish").ShouldBe("fish");
            </example>
            <param name="word">The word to pluralise.</param>
            <returns>The pluralised word.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Singularise(System.String)">
            <summary>
                Singularises a word.
            </summary>
            <example>
                inflect.Singularise("searches").ShouldBe("search");
                inflect.Singularise("stacks").ShouldBe("stack");
                inflect.Singularise("fish").ShouldBe("fish");
            </example>
            <param name="word">The word to signularise.</param>
            <returns>The signularised word.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Titleise(System.String)">
            <summary>
                Titleises the word. (title => Title, the_brown_fox => TheBrownFox)
            </summary>
            <example>
                inflect.Titleise("some title").ShouldBe("Some Title");
                inflect.Titleise("some-title").ShouldBe("Some Title");
                inflect.Titleise("sometitle").ShouldBe("Sometitle");
                inflect.Titleise("some_title:_the_beginning").ShouldBe("Some Title: The Beginning");
            </example>
            <param name="word">The word to titleise.</param>
            <returns>The titleised word.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Humanise(System.String)">
            <summary>
                Humanizes the word.
            </summary>
            <example>
                inflect.Humanise("some_title").ShouldBe("Some title");
                inflect.Humanise("some-title").ShouldBe("Some-title");
                inflect.Humanise("Some_title").ShouldBe("Some title");
                inflect.Humanise("someTitle").ShouldBe("Sometitle");
                inflect.Humanise("someTitle_Another").ShouldBe("Sometitle another");
            </example>
            <param name="lowercaseAndUnderscoredWord">The word to humanise.</param>
            <returns>The humanized word.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Pascalise(System.String)">
            <summary>
                Pascalises the word.
            </summary>
            <example>
                inflect.Pascalise("customer").ShouldBe("Customer");
                inflect.Pascalise("customer_name").ShouldBe("CustomerName");
                inflect.Pascalise("customer name").ShouldBe("Customer name");
            </example>
            <param name="lowercaseAndUnderscoredWord">The word to pascalise.</param>
            <returns>The pascalied word.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Camelise(System.String)">
            <summary>
                Camelises the word.
            </summary>
            <example>
                inflect.Camelise("Customer").ShouldBe("customer");
                inflect.Camelise("customer_name").ShouldBe("customerName");
                inflect.Camelise("customer_first_name").ShouldBe("customerFirstName");
                inflect.Camelise("customer name").ShouldBe("customer name");
            </example>
            <param name="lowercaseAndUnderscoredWord">The word to camelise.</param>
            <returns>The camelised word.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Underscore(System.String)">
            <summary>
                Underscores the word.
            </summary>
            <example>
                inflect.Underscore("SomeTitle").ShouldBe("some_title");
                inflect.Underscore("someTitle").ShouldBe("some_title");
                inflect.Underscore("some title that will be underscored").ShouldBe("some_title_that_will_be_underscored");
                inflect.Underscore("SomeTitleThatWillBeUnderscored").ShouldBe("some_title_that_will_be_underscored");
            </example>
            <param name="pascalCasedWord">The word to underscore.</param>
            <returns>The underscored word.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Capitalise(System.String)">
            <summary>
                Capitalises the word.
            </summary>
            <example>
                inflect.Capitalise("some title").ShouldBe("Some title");
                inflect.Capitalise("some Title").ShouldBe("Some title");
                inflect.Capitalise("SOMETITLE").ShouldBe("Sometitle");
                inflect.Capitalise("someTitle").ShouldBe("Sometitle");
                inflect.Capitalise("some title goes here").ShouldBe("Some title goes here");
            </example>
            <param name="word">The word to capitalise.</param>
            <returns>The capitalised word.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Uncapitalise(System.String)">
            <summary>
                Uncapitalises the word.
            </summary>
            <example>
                inflect.Uncapitalise("Some title").ShouldBe("some title");
                inflect.Uncapitalise("Some Title").ShouldBe("some Title");
                inflect.Uncapitalise("SOMETITLE").ShouldBe("sOMETITLE");
                inflect.Uncapitalise("someTitle").ShouldBe("someTitle");
                inflect.Uncapitalise("Some title goes here").ShouldBe("some title goes here");
            </example>
            <param name="word">The word to uncapitalise.</param>
            <returns>The uncapitalised word.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Ordinalise(System.String)">
            <summary>
                Ordinalises the number.
            </summary>
            <example>
                inflect.Ordinalise(0).ShouldBe("0th");
                inflect.Ordinalise(1).ShouldBe("1st");
                inflect.Ordinalise(2).ShouldBe("2nd");
                inflect.Ordinalise(3).ShouldBe("3rd");
                inflect.Ordinalise(101).ShouldBe("101st");
                inflect.Ordinalise(104).ShouldBe("104th");
                inflect.Ordinalise(1000).ShouldBe("1000th");
                inflect.Ordinalise(1001).ShouldBe("1001st");
            </example>
            <param name="number">The number to ordinalise.</param>
            <returns>The ordinalised number.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Ordinalise(System.Int32)">
            <summary>
                Ordinalises the number.
            </summary>
            <example>
                inflect.Ordinalise("0").ShouldBe("0th");
                inflect.Ordinalise("1").ShouldBe("1st");
                inflect.Ordinalise("2").ShouldBe("2nd");
                inflect.Ordinalise("3").ShouldBe("3rd");
                inflect.Ordinalise("100").ShouldBe("100th");
                inflect.Ordinalise("101").ShouldBe("101st");
                inflect.Ordinalise("1000").ShouldBe("1000th");
                inflect.Ordinalise("1001").ShouldBe("1001st");
            </example>
            <param name="number">The number to ordinalise.</param>
            <returns>The ordinalised number.</returns>
        </member>
        <member name="M:PetaPoco.IInflector.Dasherise(System.String)">
            <summary>
                Dasherises the word.
            </summary>
            <example>
                inflect.Dasherise("some_title").ShouldBe("some-title");
                inflect.Dasherise("some-title").ShouldBe("some-title");
                inflect.Dasherise("some_title_goes_here").ShouldBe("some-title-goes-here");
                inflect.Dasherise("some_title and_another").ShouldBe("some-title and-another");
            </example>
            <param name="underscoredWord">The word to dasherise.</param>
            <returns>The dasherised word.</returns>
        </member>
        <member name="T:PetaPoco.Inflector">
            <summary>
                Static inflection helper
            </summary>
        </member>
        <member name="P:PetaPoco.Inflector.Instance">
            <summary>
                Gets or sets the <see cref="T:PetaPoco.IInflector" /> instacne.
            </summary>
            <param name="value">
                The inflector to set as the default instance, or null to restore the default
                <see cref="T:PetaPoco.EnglishInflector" />.
            </param>
            <remarks>
                By default the <see cref="T:PetaPoco.EnglishInflector" /> instance used.
            </remarks>
            <returns>
                The currently set <see cref="T:PetaPoco.IInflector" /> instance.
            </returns>
        </member>
        <member name="T:PetaPoco.IPagingHelper">
            <summary>
                Represents the contract for a paging helper.
            </summary>
        </member>
        <member name="M:PetaPoco.IPagingHelper.SplitSQL(System.String,PetaPoco.SQLParts@)">
            <summary>
                Splits the given <paramref name="sql" /> into <paramref name="parts" />;
            </summary>
            <param name="sql">The SQL to split.</param>
            <param name="parts">The SQL parts.</param>
            <returns><c>True</c> if the SQL could be split; else, <c>False</c>.</returns>
        </member>
        <member name="M:PetaPoco.PagingHelper.SplitSQL(System.String,PetaPoco.SQLParts@)">
            <summary>
                Splits the given <paramref name="sql" /> into <paramref name="parts" />;
            </summary>
            <param name="sql">The SQL to split.</param>
            <param name="parts">The SQL parts.</param>
            <returns><c>True</c> if the SQL could be split; else, <c>False</c>.</returns>
        </member>
        <member name="T:PetaPoco.SQLParts">
            <summary>
                Presents the SQL parts.
            </summary>
        </member>
        <member name="F:PetaPoco.SQLParts.Sql">
            <summary>
                The SQL.
            </summary>
        </member>
        <member name="F:PetaPoco.SQLParts.SqlCount">
            <summary>
                The SQL count.
            </summary>
        </member>
        <member name="F:PetaPoco.SQLParts.SqlSelectRemoved">
            <summary>
                The SQL Select
            </summary>
        </member>
        <member name="F:PetaPoco.SQLParts.SqlOrderBy">
            <summary>
                The SQL Order By
            </summary>
        </member>
        <member name="T:NetRube.Data.AnsiString">
            <summary>
            包装对应于 DBType.AnsiString 的 ANSI 字符串
            </summary>
        </member>
        <member name="M:NetRube.Data.AnsiString.#ctor(System.String)">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.AnsiString" /> 实例。
            </summary>
            <param name="str">要包装成 ANSI 字符串的 C# 字符串</param>
        </member>
        <member name="P:NetRube.Data.AnsiString.Value">
            <summary>
            字符串值
            </summary>
            <value>字符串值</value>
        </member>
        <member name="T:NetRube.Data.ColumnInfo">
            <summary>
            数据表字段信息
            </summary>
            <remarks>Typically ColumnInfo is automatically populated from the attributes on a POCO object and it's properties. It can
            however also be returned from the IMapper interface to provide your owning bindings between the DB and your POCOs.</remarks>
        </member>
        <member name="P:NetRube.Data.ColumnInfo.ColumnName">
            <summary>
            数据表字段名
            </summary>
            <value>数据表字段名</value>
        </member>
        <member name="P:NetRube.Data.ColumnInfo.ResultColumn">
            <summary>
            如果此字段是从数据库中返回的一个计算量，则将不会用于插入和更新操作
            </summary>
            <value>如果此字段是从数据库中返回的一个计算量，则该值为 <c>true</c>；否则为 <c>false</c>。</value>
        </member>
        <member name="P:NetRube.Data.ColumnInfo.ForceToUtc">
            <summary>
            如果此字段是从数据库中的日期和时间，指定是否强制转换为 UTC
            </summary>
            <value>如果要强制转换为 UTC，则该值为 <c>true</c>；否则为 <c>false</c>。</value>
        </member>
        <member name="M:NetRube.Data.ColumnInfo.FromProperty(System.Reflection.PropertyInfo)">
            <summary>
            将实体属性转换为字段信息
            </summary>
            <param name="pi">实体属性</param>
            <returns>字段信息</returns>
        </member>
        <member name="T:NetRube.Data.Internal.DatabaseType">
            <summary>
            数据源类型基类
            </summary>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.GetParameterPrefix(System.String)">
            <summary>
            获取 SQL 参数名称前缀
            </summary>
            <param name="ConnectionString">数据源连接字符串</param>
            <returns>参数名称前缀</returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.MapParameterValue(System.Object)">
            <summary>
            将 C# 数据类型转换为相应数据源的数据类型
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.PreExecute(System.Data.IDbCommand)">
            <summary>
            在命令执行前对命令进行修改
            </summary>
            <param name="cmd">命令</param>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.BuildPageQuery(System.Int64,System.Int64,NetRube.Data.Internal.PagingHelper.SQLParts,System.Object[]@)">
            <summary>
            生成 SQL 分页查询语句
            </summary>
            <param name="skip">要跳过记录数量</param>
            <param name="take">要获取记录数</param>
            <param name="parts">原始 SQL 查询语句被解析后的组成部分</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 分页查询语句</returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.GetExistsSql">
            <summary>
            返回用于查询记录是否存在的 SQL 语句
            </summary>
            <returns>用于查询记录是否存在的 SQL 语句</returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.EscapeTableName(System.String)">
            <summary>
            转码表名
            </summary>
            <param name="tableName">要转码的表名</param>
            <returns>转码后的表名</returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>
            转码标识符
            </summary>
            <param name="str">要转码的表名或列名</param>
            <returns>转码后的表名或列名</returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.EscapeNewName(System.String)">
            <summary>
            转码新名称
            </summary>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.GetAutoIncrementExpression(NetRube.Data.TableInfo)">
            <summary>
            返回一个 SQL 表达式，以用来填充自增主键的字段
            </summary>
            <param name="ti">数据表信息</param>
            <returns>一个 SQL 表达式</returns>
            <remarks>参照 Oracle 数据库的相关用法</remarks>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.GetInsertOutputClause(System.String)">
            <summary>
            返回一个 SQL 表达式，以用来填充自增主键的返回值
            </summary>
            <param name="primaryKeyName">主键名</param>
            <returns>一个 SQL 表达式</returns>
            <remarks>参照 MS SQLServer 数据库的相关用法</remarks>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.ExecuteInsert(NetRube.Data.Database,System.Data.IDbCommand,System.String)">
            <summary>
            执行插入操作
            </summary>
            <param name="db">数据库对象</param>
            <param name="cmd">要执行插入的命令</param>
            <param name="PrimaryKeyName">主键名</param>
            <returns>插入后的主键值</returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.EscapeSqlConcat">
            <summary>
            相加
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.Resolve(System.String,System.String)">
            <summary>
            返回当前正在使用的数据源类型
            </summary>
            <param name="TypeName">类型名</param>
            <param name="ProviderName">适配器名</param>
            <returns>数据源类型</returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.BuildTopSql(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            生成 SQL TOP 查询语句
            </summary>
            <param name="take">要获取记录数</param>
            <param name="dist">指定是否返回非重复记录</param>
            <param name="rownoname">序列号字段名</param>
            <param name="selectColumns">要获取的字段名列表</param>
            <param name="tableName">表名</param>
            <param name="joins">联合子句</param>
            <param name="where">条件子句</param>
            <param name="groupby">分组子句</param>
            <param name="having">聚合条件子句</param>
            <param name="orderby">排序子句</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 查询语句</returns>
        </member>
        <member name="M:NetRube.Data.Internal.DatabaseType.BuildPagedSql(System.Int64,System.Int64,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            生成 SQL 分页查询语句
            </summary>
            <param name="skip">要跳过记录数量</param>
            <param name="take">要获取记录数</param>
            <param name="dist">指定是否返回非重复记录</param>
            <param name="rownoname">序列号字段名</param>
            <param name="selectColumns">要获取的字段名列表</param>
            <param name="tableName">表名</param>
            <param name="joins">联合子句</param>
            <param name="where">条件子句</param>
            <param name="groupby">分组子句</param>
            <param name="having">聚合条件子句</param>
            <param name="orderby">排序子句</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 查询语句</returns>
        </member>
        <member name="T:NetRube.Data.IMapper">
            <summary>
            定义数据源到实体的映射接口
            </summary>
            <remarks>To use this functionality, instantiate a class that implements IMapper and then pass it to
            PetaPoco through the static method Mappers.Register()</remarks>
        </member>
        <member name="M:NetRube.Data.IMapper.GetTableInfo(System.Type)">
            <summary>
            获取数据表信息
            </summary>
            <param name="pocoType">实体类型</param>
            <returns>数据表信息</returns>
            <remarks>This method must return a valid TableInfo.
            To create a TableInfo from a POCO's attributes, use TableInfo.FromPoco</remarks>
        </member>
        <member name="M:NetRube.Data.IMapper.GetColumnInfo(System.Reflection.PropertyInfo)">
            <summary>
            获取数据表字段信息
            </summary>
            <param name="pocoProperty">实体属性信息</param>
            <returns>数据表字段信息</returns>
            <remarks>To create a ColumnInfo from a property's attributes, use PropertyInfo.FromProperty</remarks>
        </member>
        <member name="M:NetRube.Data.IMapper.GetFromDbConverter(System.Reflection.PropertyInfo,System.Type)">
            <summary>
            获取将数据源值到实体属性值的转换器
            </summary>
            <param name="TargetProperty">目标实体属性信息</param>
            <param name="SourceType">数据源返回来的值的类型</param>
            <returns>数据源值到实体属性值的转换器</returns>
        </member>
        <member name="M:NetRube.Data.IMapper.GetToDbConverter(System.Reflection.PropertyInfo)">
            <summary>
            获取将实体属性值到数据源对应值的转换器
            </summary>
            <param name="SourceProperty">实体属性信息</param>
            <returns>实体属性值到数据源对应值的转换器</returns>
            <remarks>This conversion is only used for converting values from POCO's that are
            being Inserted or Updated.
            Conversion is not available for parameter values passed directly to queries.</remarks>
        </member>
        <member name="T:NetRube.Data.Mappers">
            <summary>
            对实现了 IMapper 接口的实体实例的管理
            </summary>
        </member>
        <member name="M:NetRube.Data.Mappers.Register(System.Reflection.Assembly,NetRube.Data.IMapper)">
            <summary>
            对指定程序集里的所有类型注册映射器
            </summary>
            <param name="assembly">要注册的程序集</param>
            <param name="mapper">实现了 IMapper 的映射器</param>
        </member>
        <member name="M:NetRube.Data.Mappers.Register(System.Type,NetRube.Data.IMapper)">
            <summary>
            对单个实体类型注册映射器
            </summary>
            <param name="type">要注册的实体类型</param>
            <param name="mapper">实现了 IMapper 的映射器</param>
        </member>
        <member name="M:NetRube.Data.Mappers.Revoke(System.Reflection.Assembly)">
            <summary>
            注销指定程序集里所有类型已注册的映射器
            </summary>
            <param name="assembly">要注销注册的程序集</param>
        </member>
        <member name="M:NetRube.Data.Mappers.Revoke(System.Type)">
            <summary>
            注销指定实体类型已注册的映射器
            </summary>
            <param name="type">要注销注册的实体类型</param>
        </member>
        <member name="M:NetRube.Data.Mappers.Revoke(NetRube.Data.IMapper)">
            <summary>
            注销指定的映射器
            </summary>
            <param name="mapper">要注销的映射器</param>
        </member>
        <member name="M:NetRube.Data.Mappers.GetMapper(System.Type)">
            <summary>
            获取指定实体对象类型的映射器
            </summary>
            <param name="t">实体对象类型</param>
            <returns>指定实体对象类型的映射器</returns>
        </member>
        <member name="T:NetRube.Data.Page`1">
            <summary>
            分页数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="P:NetRube.Data.Page`1.CurrentPage">
            <summary>
            获取或设置当前页码
            </summary>
            <value>当前页码</value>
        </member>
        <member name="P:NetRube.Data.Page`1.TotalPages">
            <summary>
            获取或设置总页数
            </summary>
            <value>总页数</value>
        </member>
        <member name="P:NetRube.Data.Page`1.TotalItems">
            <summary>
            获取或设置总记录数
            </summary>
            <value>总记录数</value>
        </member>
        <member name="P:NetRube.Data.Page`1.ItemsPerPage">
            <summary>
            获取或设置每页记录数
            </summary>
            <value>每页记录数</value>
        </member>
        <member name="P:NetRube.Data.Page`1.Items">
            <summary>
            获取或设置当前页记录列表
            </summary>
            <value>当前页记录列表</value>
        </member>
        <member name="P:NetRube.Data.Page`1.Context">
            <summary>
            获取或设置其它相关数据
            </summary>
            <value>其它相关数据</value>
        </member>
        <member name="T:NetRube.Data.Sql">
            <summary>
            简单的 SQL 语句生成器
            </summary>
        </member>
        <member name="M:NetRube.Data.Sql.#ctor">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.Sql" /> 实例。
            </summary>
        </member>
        <member name="M:NetRube.Data.Sql.#ctor(System.String,System.Object[])">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.Sql" /> 实例。
            </summary>
            <param name="sql">SQL 语句或片段</param>
            <param name="args">SQL 所用的参数</param>
        </member>
        <member name="P:NetRube.Data.Sql.Builder">
            <summary>
            实例化一个新的 SQL 语句生成器
            </summary>
            <value>SQL 语句生成器</value>
        </member>
        <member name="P:NetRube.Data.Sql.SQL">
            <summary>
            返回最终生成的 SQL 语句
            </summary>
            <value>SQL 语句</value>
        </member>
        <member name="M:NetRube.Data.Sql.ToString">
            <summary>
            返回最终生成的 SQL 语句
            </summary>
            <returns></returns>
        </member>
        <member name="P:NetRube.Data.Sql.Arguments">
            <summary>
            获取最终生成后的参数
            </summary>
            <value>参数</value>
        </member>
        <member name="M:NetRube.Data.Sql.Append(NetRube.Data.Sql)">
            <summary>
            添加另一个 SQL 生成器到当前的 SQL 生成器
            </summary>
            <param name="sql">要添加的 SQL 生成器</param>
            <returns>合并后的 SQL 生成器</returns>
        </member>
        <member name="M:NetRube.Data.Sql.Append(System.String,System.Object[])">
            <summary>
            添加一个 SQL 语句或片段
            </summary>
            <param name="sql">要添加的 SQL 语句或片段</param>
            <param name="args">SQL 语句或片段所用的参数</param>
            <returns>当前的 SQL 生成器</returns>
        </member>
        <member name="M:NetRube.Data.Sql.Where(System.String,System.Object[])">
            <summary>
            添加 WHERE 子句
            </summary>
            <param name="sql">要添加的 WHERE 子句</param>
            <param name="args">WHERE 子句所用的参数</param>
            <returns>当前的 SQL 生成器</returns>
        </member>
        <member name="M:NetRube.Data.Sql.OrderBy(System.Object[])">
            <summary>
            添加 ORDER BY 子句
            </summary>
            <param name="columns">要添加的 ORDER BY 子句</param>
            <returns>当前的 SQL 生成器</returns>
        </member>
        <member name="M:NetRube.Data.Sql.Select(System.Object[])">
            <summary>
            添加 SELECT 子句
            </summary>
            <param name="columns">要添加的 SELECT 子句所用的字段名列表</param>
            <returns>当前的 SQL 生成器</returns>
        </member>
        <member name="M:NetRube.Data.Sql.From(System.Object[])">
            <summary>
            添加 FROM 子句
            </summary>
            <param name="tables">要添加的 FROM 子句所用的表名列表</param>
            <returns>当前的 SQL 生成器</returns>
        </member>
        <member name="M:NetRube.Data.Sql.GroupBy(System.Object[])">
            <summary>
            添加 GROUP BY 子句
            </summary>
            <param name="columns">要添加的 GROUP BY 子句所用的字段名列表</param>
            <returns>当前的 SQL 生成器</returns>
        </member>
        <member name="M:NetRube.Data.Sql.InnerJoin(System.String)">
            <summary>
            添加 INNER JOIN 子句
            </summary>
            <param name="table">要添加的 INNER JOIN 子句所用的表名</param>
            <returns>当前的 SQL 生成器</returns>
        </member>
        <member name="M:NetRube.Data.Sql.LeftJoin(System.String)">
            <summary>
            添加 LEFT JOIN 子句
            </summary>
            <param name="table">要添加的 LEFT JOIN 子句所用的表名</param>
            <returns>当前的 SQL 生成器</returns>
        </member>
        <member name="T:NetRube.Data.Sql.SqlJoinClause">
            <summary>
            用以 SQL 生成器的简单的 JOIN 语句生成器
            </summary>
        </member>
        <member name="M:NetRube.Data.Sql.SqlJoinClause.#ctor(NetRube.Data.Sql)">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.Sql.SqlJoinClause" /> 实例。
            </summary>
            <param name="sql">SQL 生成器</param>
        </member>
        <member name="M:NetRube.Data.Sql.SqlJoinClause.On(System.String,System.Object[])">
            <summary>
            为 JOIN 语句添加 ON 子句
            </summary>
            <param name="onClause">要添加的 ON 子句</param>
            <param name="args">要添加的 ON 子句所用的参数</param>
            <returns>当前的 SQL 生成器</returns>
        </member>
        <member name="T:NetRube.Data.StandardMapper">
            <summary>
            实现了 IMapper 接口的标准映射器
            </summary>
        </member>
        <member name="M:NetRube.Data.StandardMapper.GetTableInfo(System.Type)">
            <summary>
            获取数据表信息
            </summary>
            <param name="pocoType">实体类型</param>
            <returns>数据表信息</returns>
            <remarks>This method must return a valid TableInfo.
            To create a TableInfo from a POCO's attributes, use TableInfo.FromPoco</remarks>
        </member>
        <member name="M:NetRube.Data.StandardMapper.GetColumnInfo(System.Reflection.PropertyInfo)">
            <summary>
            获取数据表字段信息
            </summary>
            <param name="pocoProperty">实体属性信息</param>
            <returns>数据表字段信息</returns>
            <remarks>To create a ColumnInfo from a property's attributes, use PropertyInfo.FromProperty</remarks>
        </member>
        <member name="M:NetRube.Data.StandardMapper.GetFromDbConverter(System.Reflection.PropertyInfo,System.Type)">
            <summary>
            获取将数据源值到实体属性值的转换器
            </summary>
            <param name="TargetProperty">目标实体属性信息</param>
            <param name="SourceType">数据源返回来的值的类型</param>
            <returns>数据源值到实体属性值的转换器</returns>
        </member>
        <member name="M:NetRube.Data.StandardMapper.GetToDbConverter(System.Reflection.PropertyInfo)">
            <summary>
            获取将实体属性值到数据源对应值的转换器
            </summary>
            <param name="SourceProperty">实体属性信息</param>
            <returns>实体属性值到数据源对应值的转换器</returns>
            <remarks>This conversion is only used for converting values from POCO's that are
            being Inserted or Updated.
            Conversion is not available for parameter values passed directly to queries.</remarks>
        </member>
        <member name="T:NetRube.Data.TableInfo">
            <summary>
            数据表信息
            </summary>
        </member>
        <member name="P:NetRube.Data.TableInfo.TableName">
            <summary>
            获取或设置数据表名称
            </summary>
            <value>数据表名称</value>
        </member>
        <member name="P:NetRube.Data.TableInfo.PrimaryKey">
            <summary>
            获取或设置数据表主键名称
            </summary>
            <value>数据表主键名称</value>
        </member>
        <member name="P:NetRube.Data.TableInfo.AutoIncrement">
            <summary>
            获取或设置一个值，该值指示是否为自增主键
            </summary>
            <value>如果为自增主键，则该值为 <c>true</c>；否则为 <c>false</c>。</value>
        </member>
        <member name="P:NetRube.Data.TableInfo.SequenceName">
            <summary>
            获取或设置作为 Oracle 自增主键的序列字段名
            </summary>
            <value>Oracle 自增主键的序列字段名</value>
        </member>
        <member name="P:NetRube.Data.TableInfo.IsTable">
            <summary>
            是否为数据库实体
            </summary>
        </member>
        <member name="M:NetRube.Data.TableInfo.FromPoco(System.Type)">
            <summary>
            从实体类型生成数据表信息
            </summary>
            <param name="t">实体类型</param>
            <returns>数据表信息</returns>
        </member>
        <member name="T:NetRube.Data.ITransaction">
            <summary>
            事务接口
            </summary>
        </member>
        <member name="M:NetRube.Data.ITransaction.Complete">
            <summary>
            完成事务
            </summary>
        </member>
        <member name="T:NetRube.Data.Transaction">
            <summary>
            事务
            </summary>
        </member>
        <member name="M:NetRube.Data.Transaction.#ctor(NetRube.Data.Database)">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.Transaction" /> 实例。
            </summary>
            <param name="db">要开始事务的数据源实例</param>
        </member>
        <member name="M:NetRube.Data.Transaction.Complete">
            <summary>
            完成事务
            </summary>
        </member>
        <member name="M:NetRube.Data.Transaction.Dispose">
            <summary>
            释放事务
            </summary>
        </member>
        <member name="T:NetRube.Data.Database">
            <summary>
            数据源操作主类
            </summary>
        </member>
        <member name="M:NetRube.Data.Database.#ctor(System.Data.IDbConnection)">
            <summary>
            使用指定的数据源连接初始化一个新 <see cref="T:NetRube.Data.Database" /> 实例。
            </summary>
            <param name="connection">数据源连接</param>
            <remarks>The supplied IDbConnection will not be closed/disposed by PetaPoco - that remains
            the responsibility of the caller.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.#ctor(System.String,System.String)">
            <summary>
            使用指定的数据源连接串和适配器名初始化一个新 <see cref="T:NetRube.Data.Database" /> 实例。
            </summary>
            <param name="connectionString">数据源连接串</param>
            <param name="providerName">适配器名</param>
            <remarks>PetaPoco will automatically close and dispose any connections it creates.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            使用指定的数据源连接串和适配器初始化一个新 <see cref="T:NetRube.Data.Database" /> 实例。
            </summary>
            <param name="connectionString">数据源连接串</param>
            <param name="provider">适配器</param>
        </member>
        <member name="M:NetRube.Data.Database.#ctor(System.String)">
            <summary>
            使用配置文件中指定的数据源连接名初始化一个新 <see cref="T:NetRube.Data.Database" /> 实例。
            </summary>
            <param name="connectionStringName">配置文件中的数据源连接名</param>
            <exception cref="T:System.InvalidOperationException">配置文件中的数据源连接名无效</exception>
        </member>
        <member name="M:NetRube.Data.Database.CommonConstruct(System.String)">
            <summary>
            Provides common initialization for the various constructors
            </summary>
        </member>
        <member name="M:NetRube.Data.Database.Dispose">
            <summary>
            自动关闭打开的共享连接
            </summary>
        </member>
        <member name="P:NetRube.Data.Database.KeepConnectionAlive">
            <summary>
            获取或设置是否保持连接。当为 <c>true</c> 时，第一次打开的连接将持续到此数据源对象销毁时。
            </summary>
            <value>如果保持连接，则该值为 <c>true</c>；否则为 <c>false</c>。</value>
        </member>
        <member name="M:NetRube.Data.Database.OpenSharedConnection">
            <summary>
            打开共享连接
            </summary>
            <remarks>Calls to Open/CloseSharedConnection are reference counted and should be balanced</remarks>
        </member>
        <member name="M:NetRube.Data.Database.CloseSharedConnection">
            <summary>
            释放共享连接
            </summary>
        </member>
        <member name="P:NetRube.Data.Database.Connection">
            <summary>
            获取当前的共享连接，如果没有连接将返回 null
            </summary>
            <value>The connection.</value>
        </member>
        <member name="M:NetRube.Data.Database.GetTransaction">
            <summary>
            开始或继续事务
            </summary>
            <returns>一个 <see cref="T:NetRube.Data.ITransaction" /> 引用</returns>
            <remarks>This method makes management of calls to Begin/End/CompleteTransaction easier.
            The usage pattern for this should be:
            using (var tx = db.GetTransaction())
            {
            Do stuff
            db.Update(...);
            Mark the transaction as complete
            tx.Complete();
            }
            Transactions can be nested but they must all be completed otherwise the entire
            transaction is aborted.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.OnBeginTransaction">
            <summary>
            在开始事务时调用。
            </summary>
        </member>
        <member name="M:NetRube.Data.Database.OnEndTransaction">
            <summary>
            在结束事务时调用。
            </summary>
        </member>
        <member name="M:NetRube.Data.Database.BeginTransaction">
            <summary>
            开始事务
            </summary>
        </member>
        <member name="M:NetRube.Data.Database.CleanupTransaction">
            <summary>
            Internal helper to cleanup transaction
            </summary>
        </member>
        <member name="M:NetRube.Data.Database.AbortTransaction">
            <summary>
            中止事务
            </summary>
            <remarks>Called automatically by Transaction.Dispose()
            if the transaction wasn't completed.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.CompleteTransaction">
            <summary>
            完成事务
            </summary>
        </member>
        <member name="M:NetRube.Data.Database.AddParam(System.Data.IDbCommand,System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Add a parameter to a DB command
            </summary>
            <param name="cmd">A reference to the IDbCommand to which the parameter is to be added</param>
            <param name="value">The value to assign to the parameter</param>
            <param name="pi">Optional, a reference to the property info of the POCO property from which the value is coming.</param>
        </member>
        <member name="M:NetRube.Data.Database.CreateCommand(System.Data.IDbConnection,System.String,System.Object[])">
            <summary>
            创建命令
            </summary>
            <param name="connection">数据源连接</param>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>命令</returns>
        </member>
        <member name="M:NetRube.Data.Database.OnException(System.Exception,System.String)">
            <summary>
            在数据源操作过程出现异常时调用，可以在派生类中重新实现日志记录。
            </summary>
            <param name="x">异常信息</param>
            <returns>如果为 <c>true</c> 表示重新引发异常，如果为 <c>false</c> 表示阻止异常</returns>
        </member>
        <member name="M:NetRube.Data.Database.OnConnectionOpened(System.Data.IDbConnection)">
            <summary>
            在打开连接时调用。
            </summary>
            <param name="conn">数据源连接</param>
            <returns>原来或新的数据源连接</returns>
            <remarks>Override this method to provide custom logging of opening connection, or
            to provide a proxy IDbConnection.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.OnConnectionClosing(System.Data.IDbConnection)">
            <summary>
            在关闭连接时调用。
            </summary>
            <param name="conn">数据源连接</param>
        </member>
        <member name="M:NetRube.Data.Database.OnExecutingCommand(System.Data.IDbCommand)">
            <summary>
            在命令执行前时调用。
            </summary>
            <param name="cmd">命令</param>
            <remarks>Override this method to provide custom logging of commands and/or
            modification of the IDbCommand before it's executed</remarks>
        </member>
        <member name="M:NetRube.Data.Database.OnExecutedCommand(System.Data.IDbCommand)">
            <summary>
            在命令执行完成时调用。
            </summary>
            <param name="cmd">命令</param>
        </member>
        <member name="M:NetRube.Data.Database.Execute(System.String,System.Object[])">
            <summary>
            执行指定的 SQL 语句
            </summary>
            <param name="sql">要执行的 SQL 语句</param>
            <param name="args">参数</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:NetRube.Data.Database.Execute(NetRube.Data.Sql)">
            <summary>
            执行指定的 SQL 语句
            </summary>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:NetRube.Data.Database.ExecuteScalar``1(System.String,System.Object[])">
            <summary>
            执行操作命令，并返回结果集中的第一行的第一列的值
            </summary>
            <typeparam name="T">返回的数据类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集中的第一行的第一列的值</returns>
        </member>
        <member name="M:NetRube.Data.Database.ExecuteScalar``1(NetRube.Data.Sql)">
            <summary>
            执行操作命令，并返回结果集中的第一行的第一列的值
            </summary>
            <typeparam name="T">返回的数据类型</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集中的第一行的第一列的值</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``1(System.String,System.Object[])">
            <summary>
            获取查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``1(NetRube.Data.Sql)">
            <summary>
            获取查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:NetRube.Data.Database.BuildPageQueries``1(System.Int64,System.Int64,System.String,System.Object[]@,System.String@,System.String@)">
            <summary>
            Starting with a regular SELECT statement, derives the SQL statements required to query a 
            DB for a page of records and the total number of records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="skip">The number of rows to skip before the start of the page</param>
            <param name="take">The number of rows in the page</param>
            <param name="sql">The original SQL select statement</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <param name="sqlCount">Outputs the SQL statement to query for the total number of matching rows</param>
            <param name="sqlPage">Outputs the SQL statement to retrieve a single page of matching rows</param>
        </member>
        <member name="M:NetRube.Data.Database.Page``1(System.Int64,System.Int64,System.String,System.Object[],System.String,System.Object[])">
            <summary>
            获取分页查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="page">从 1 开始的页码</param>
            <param name="itemsPerPage">每页记录数</param>
            <param name="sqlCount">用于获取总记录数的 SQL 语句</param>
            <param name="countArgs">用于获取总记录数的 SQL 语句的参数</param>
            <param name="sqlPage">用于获取分页结果的 SQL 语句</param>
            <param name="pageArgs">用于获取分页结果的 SQL 语句的参数</param>
            <returns>分页结果</returns>
            <remarks>This method allows separate SQL statements to be explicitly provided for the two parts of the page query.
            The page and itemsPerPage parameters are not used directly and are used simply to populate the returned Page object.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Page``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            获取分页查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="page">从 1 开始的页码</param>
            <param name="itemsPerPage">每页记录数</param>
            <param name="sql">基本 SQL 语句</param>
            <param name="args">参数</param>
            <returns>分页结果</returns>
            <remarks>PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified page.  It will also execute a second query to retrieve the
            total number of records in the result set.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Page``1(System.Int64,System.Int64,NetRube.Data.Sql)">
            <summary>
            获取分页查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="page">从 1 开始的页码</param>
            <param name="itemsPerPage">每页记录数</param>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>分页结果</returns>
            <remarks>PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified page.  It will also execute a second query to retrieve the
            total number of records in the result set.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Page``1(System.Int64,System.Int64,NetRube.Data.Sql,NetRube.Data.Sql)">
            <summary>
            获取分页查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="page">从 1 开始的页码</param>
            <param name="itemsPerPage">每页记录数</param>
            <param name="sqlCount">用于获取总记录数的 SQL 语句生成器对象</param>
            <param name="sqlPage">用于获取分页结果的 SQL 语句生成器对象</param>
            <returns>分页结果</returns>
            <remarks>This method allows separate SQL statements to be explicitly provided for the two parts of the page query.
            The page and itemsPerPage parameters are not used directly and are used simply to populate the returned Page object.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            获取分页查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="page">从 1 开始的页码</param>
            <param name="itemsPerPage">每页记录数</param>
            <param name="sql">基本 SQL 语句</param>
            <param name="args">参数</param>
            <returns>分页结果</returns>
            <remarks>PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified page.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``1(System.Int64,System.Int64,NetRube.Data.Sql)">
            <summary>
            获取分页查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="page">从 1 开始的页码</param>
            <param name="itemsPerPage">每页记录数</param>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>分页结果</returns>
            <remarks>PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified page.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.SkipTake``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            获取分页查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="skip">要跳过的记录数</param>
            <param name="take">要获取的记录数</param>
            <param name="sql">基本 SQL 语句</param>
            <param name="args">参数</param>
            <returns>分页结果</returns>
            <remarks>PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified range.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.SkipTake``1(System.Int64,System.Int64,NetRube.Data.Sql)">
            <summary>
            获取分页查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="skip">要跳过的记录数</param>
            <param name="take">要获取的记录数</param>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>分页结果</returns>
            <remarks>PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified range.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Query``1(System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
            <remarks>For some DB providers, care should be taken to not start a new Query before finishing with
            and disposing the previous one. In cases where this is an issue, consider using Fetch which
            returns the results as a List rather than an IEnumerable.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Query``1(NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
            <remarks>For some DB providers, care should be taken to not start a new Query before finishing with
            and disposing the previous one. In cases where this is an issue, consider using Fetch which
            returns the results as a List rather than an IEnumerable.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Exists``1(System.String,System.Object[])">
            <summary>
            检测记录是否存在
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sqlCondition">SQL 条件语句</param>
            <param name="args">参数</param>
            <returns>返回指示记录是否存在</returns>
        </member>
        <member name="M:NetRube.Data.Database.Exists``1(System.Object)">
            <summary>
            检测记录是否存在
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="primaryKey">主键名</param>
            <returns>返回指示记录是否存在</returns>
        </member>
        <member name="M:NetRube.Data.Database.Single``1(System.Object)">
            <summary>
            获取单个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="primaryKey">主键名</param>
            <returns>实体对象</returns>
            <remarks>Throws an exception if there are zero or more than one record with the specified primary key value.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.SingleOrDefault``1(System.Object)">
            <summary>
            获取单个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="primaryKey">主键名</param>
            <returns>实体对象</returns>
            <remarks>If there are no records with the specified primary key value, default(T) (typically null) is returned.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Single``1(System.String,System.Object[])">
            <summary>
            获取单个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>实体对象</returns>
            <remarks>Throws an exception if there are zero or more than one matching record</remarks>
        </member>
        <member name="M:NetRube.Data.Database.SingleOrDefault``1(System.String,System.Object[])">
            <summary>
            获取单个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NetRube.Data.Database.First``1(System.String,System.Object[])">
            <summary>
            获取第一个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NetRube.Data.Database.FirstOrDefault``1(System.String,System.Object[])">
            <summary>
            获取第一个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NetRube.Data.Database.Single``1(NetRube.Data.Sql)">
            <summary>
            获取单个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>实体对象</returns>
            <remarks>Throws an exception if there are zero or more than one matching record</remarks>
        </member>
        <member name="M:NetRube.Data.Database.SingleOrDefault``1(NetRube.Data.Sql)">
            <summary>
            获取单个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NetRube.Data.Database.First``1(NetRube.Data.Sql)">
            <summary>
            获取第一个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NetRube.Data.Database.FirstOrDefault``1(NetRube.Data.Sql)">
            <summary>
            获取第一个记录
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NetRube.Data.Database.Insert(System.String,System.String,System.Object)">
            <summary>
            执行插入命令。
            <para>对于有自增主键的返回插入后的值，并更新实体相应的值</para>
            <para>对于有主键但不是自增的返回原值</para>
            <para>对于没有主键的返回 <c>null</c></para>
            </summary>
            <param name="tableName">数据表名</param>
            <param name="primaryKeyName">主键名</param>
            <param name="poco">要插入的实体</param>
            <returns>返回插入后的主键值</returns>
        </member>
        <member name="M:NetRube.Data.Database.Insert(System.String,System.String,System.Boolean,System.Object)">
            <summary>
            执行插入命令。
            <para>对于有自增主键的返回插入后的值，并更新实体相应的值</para>
            <para>对于有主键但不是自增的返回原值</para>
            <para>对于没有主键的返回 <c>null</c></para>
            </summary>
            <param name="tableName">数据表名</param>
            <param name="primaryKeyName">主键名</param>
            <param name="autoIncrement">主键是否为自增列</param>
            <param name="poco">要插入的实体</param>
            <returns>返回插入后的主键值</returns>
            <remarks>Inserts a poco into a table.  If the poco has a property with the same name
            as the primary key the id of the new record is assigned to it.  Either way,
            the new id is returned.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Insert(System.Object)">
            <summary>
            执行插入命令。
            <para>对于有自增主键的返回插入后的值，并更新实体相应的值</para>
            <para>对于有主键但不是自增的返回原值</para>
            <para>对于没有主键的返回 <c>null</c></para>
            </summary>
            <param name="poco">要插入的实体</param>
            <returns>返回插入后的主键值</returns>
            <remarks>The name of the table, it's primary key and whether it's an auto-allocated primary key are retrieved
            from the POCO's attributes</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Update(System.String,System.String,System.Object,System.Object)">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="tableName">数据表名</param>
            <param name="primaryKeyName">主键名</param>
            <param name="poco">要更新的实体</param>
            <param name="primaryKeyValue">主键值</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Update(System.String,System.String,System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="tableName">数据表名</param>
            <param name="primaryKeyName">主键名</param>
            <param name="poco">要更新的实体</param>
            <param name="primaryKeyValue">主键值</param>
            <param name="columns">要更新的字段名集合</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Update(System.String,System.String,System.Object)">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="tableName">数据表名</param>
            <param name="primaryKeyName">主键名</param>
            <param name="poco">要更新的实体</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Update(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="tableName">数据表名</param>
            <param name="primaryKeyName">主键名</param>
            <param name="poco">要更新的实体</param>
            <param name="columns">要更新的字段名集合</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Update(System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="poco">要更新的实体</param>
            <param name="columns">要更新的字段名集合</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Update``1(``0)">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="poco">要更新的实体</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Update(System.Object,System.Object)">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="poco">要更新的实体</param>
            <param name="primaryKeyValue">主键值</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Update(System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="poco">要更新的实体</param>
            <param name="primaryKeyValue">主键值</param>
            <param name="columns">要更新的字段名集合</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Update``1(System.String,System.Object[])">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">更新和条件部分的 SQL 语句（“UPDATE 表名”后面的部分）</param>
            <param name="args">参数</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Update``1(NetRube.Data.Sql)">
            <summary>
            执行更新命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Delete(System.String,System.String,System.Object)">
            <summary>
            执行删除命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKeyName">主键名</param>
            <param name="poco">要更新的实体</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Delete(System.String,System.String,System.Object,System.Object)">
            <summary>
            执行删除命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKeyName">主键名</param>
            <param name="poco">要更新的实体</param>
            <param name="primaryKeyValue">主键值</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Delete(System.Object)">
            <summary>
            执行删除命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <param name="poco">要更新的实体</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Delete``1(System.Object)">
            <summary>
            执行删除命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="pocoOrPrimaryKey">主键值</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Delete``1(System.String,System.Object[])">
            <summary>
            执行删除命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">条件部分的 SQL 语句（“DELETE FROM 表名”后面的部分）</param>
            <param name="args">参数</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.Delete``1(NetRube.Data.Sql)">
            <summary>
            执行删除命令，并返回受影响的行数，返回 -1 表示执行命令出错
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>返回受影响的行数，返回 -1 表示执行命令出错</returns>
        </member>
        <member name="M:NetRube.Data.Database.IsNew(System.String,System.Object)">
            <summary>
            检测实体是否为新记录
            </summary>
            <param name="primaryKeyName">主键名</param>
            <param name="poco">要检测的实体</param>
            <returns>是否为新记录</returns>
            <exception cref="T:System.ArgumentException">找不到主键</exception>
            <remarks>This method simply tests if the POCO's primary key column property has been set to something non-zero.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.IsNew(System.Object)">
            <summary>
            检测实体是否为新记录
            </summary>
            <param name="poco">要检测的实体</param>
            <returns>是否为新记录</returns>
            <exception cref="T:System.InvalidOperationException">没有定义自增主键</exception>
            <remarks>This method simply tests if the POCO's primary key column property has been set to something non-zero.</remarks>
        </member>
        <member name="M:NetRube.Data.Database.Save(System.String,System.String,System.Object)">
            <summary>
            保存实体（自动判断插入或更新）
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKeyName">主键名</param>
            <param name="poco">要保存的实体</param>
        </member>
        <member name="M:NetRube.Data.Database.Save(System.Object)">
            <summary>
            保存实体（自动判断插入或更新）
            </summary>
            <param name="poco">要保存的实体</param>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``3(System.Func{``0,``1,``2},System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``4(System.Func{``0,``1,``2,``3},System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``5(System.Func{``0,``1,``2,``3,``4},System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="T4">实体类型4</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``3(System.Func{``0,``1,``2},System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``4(System.Func{``0,``1,``2,``3},System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``5(System.Func{``0,``1,``2,``3,``4},System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="T4">实体类型4</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``3(System.Func{``0,``1,``2},NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``4(System.Func{``0,``1,``2,``3},NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``5(System.Func{``0,``1,``2,``3,``4},NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="T4">实体类型4</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``3(System.Func{``0,``1,``2},NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``4(System.Func{``0,``1,``2,``3},NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``5(System.Func{``0,``1,``2,``3,``4},NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="T4">实体类型4</typeparam>
            <typeparam name="TRet">返回的结果实体类型</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``2(System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``3(System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``4(System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="T4">实体类型4</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``2(System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``3(System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``4(System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="T4">实体类型4</typeparam>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``2(NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``3(NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Fetch``4(NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="T4">实体类型4</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``2(NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``3(NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``4(NetRube.Data.Sql)">
            <summary>
            获取结果集
            </summary>
            <typeparam name="T1">实体类型1</typeparam>
            <typeparam name="T2">实体类型2</typeparam>
            <typeparam name="T3">实体类型3</typeparam>
            <typeparam name="T4">实体类型4</typeparam>
            <param name="sql">SQL 语句生成器对象</param>
            <returns>结果集</returns>
        </member>
        <member name="M:NetRube.Data.Database.Query``1(System.Type[],System.Object,System.String,System.Object[])">
            <summary>
            获取结果集
            </summary>
            <typeparam name="TRet">结果实体类型</typeparam>
            <param name="types">多个实体类型</param>
            <param name="cb">实体间的关联转换器</param>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>结果集</returns>
        </member>
        <member name="P:NetRube.Data.Database.LastSQL">
            <summary>
            获取最后执行的 SQL 语句
            </summary>
            <value>最后执行的 SQL 语句</value>
        </member>
        <member name="P:NetRube.Data.Database.LastArgs">
            <summary>
            获取最后执行 SQL 语句所用的参数
            </summary>
            <value>最后使用的参数</value>
        </member>
        <member name="P:NetRube.Data.Database.LastCommand">
            <summary>
            获取最后执行的命令（包含 SQL 语句和参数）
            </summary>
            <value>最后执行的命令</value>
        </member>
        <member name="M:NetRube.Data.Database.FormatCommand(System.Data.IDbCommand)">
            <summary>
            以友好方式格式化命令信息（SQL 语句和参数）
            </summary>
            <param name="cmd">命令</param>
            <returns>格式化后的 SQL 语句和参数</returns>
        </member>
        <member name="M:NetRube.Data.Database.FormatCommand(System.String,System.Object[])">
            <summary>
            以友好方式格式化 SQL 语句和参数
            </summary>
            <param name="sql">SQL 语句</param>
            <param name="args">参数</param>
            <returns>格式化后的 SQL 语句和参数</returns>
        </member>
        <member name="P:NetRube.Data.Database.EnableAutoSelect">
            <summary>
            获取或设置是否在需要时自动创建“SELECT 字段”部分
            </summary>
            <value>指示是否在需要时自动创建“SELECT 字段”部分</value>
        </member>
        <member name="P:NetRube.Data.Database.EnableNamedParams">
            <summary>
            获取或设置是否启用“@参数名”格式的参数名
            </summary>
            <value>指示是否启用“@参数名”格式的参数名</value>
        </member>
        <member name="P:NetRube.Data.Database.CommandTimeout">
            <summary>
            获取或设置所有 SQL 语句每次执行的超时时间
            </summary>
            <value>所有 SQL 语句每次执行的超时时间</value>
        </member>
        <member name="P:NetRube.Data.Database.OneTimeCommandTimeout">
            <summary>
            获取或设置下一个 SQL 语句执行的超时时间
            </summary>
            <value>下一个 SQL 语句执行的超时时间</value>
        </member>
        <member name="P:NetRube.Data.Database.EnableLazyLoad">
            <summary>
            是否开启延迟加载
            </summary>
        </member>
        <member name="P:NetRube.Data.Database.EnableWriteLog">
            <summary>
            获取或设置是否启用日志记录
            </summary>
            <value>如果启用日志记录，则该值为 <c>true</c>；否则为 <c>false</c>。</value>
        </member>
        <member name="M:NetRube.Data.Database.WriteLog">
            <summary>
            记录日志
            </summary>
        </member>
        <member name="T:NetRube.Data.DatabaseTypes.MySqlDatabaseType">
            <summary>
            MySql 数据源
            </summary>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.MySqlDatabaseType.GetParameterPrefix(System.String)">
            <summary>
            获取 SQL 参数名称前缀
            </summary>
            <param name="ConnectionString">数据源连接字符串</param>
            <returns>参数名称前缀</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.MySqlDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>
            转码标识符
            </summary>
            <param name="str">要转码的表名或列名</param>
            <returns>转码后的表名或列名</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.MySqlDatabaseType.GetExistsSql">
            <summary>
            返回用于查询记录是否存在的 SQL 语句
            </summary>
            <returns>用于查询记录是否存在的 SQL 语句</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.MySqlDatabaseType.EscapeSqlConcat">
            <summary>
            相加
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetRube.Data.DatabaseTypes.OracleDatabaseType">
            <summary>
            Oracle 数据源
            </summary>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.OracleDatabaseType.GetParameterPrefix(System.String)">
            <summary>
            获取 SQL 参数名称前缀
            </summary>
            <param name="ConnectionString">数据源连接字符串</param>
            <returns>参数名称前缀</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.OracleDatabaseType.PreExecute(System.Data.IDbCommand)">
            <summary>
            在命令执行前对命令进行修改
            </summary>
            <param name="cmd">命令</param>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.OracleDatabaseType.BuildPageQuery(System.Int64,System.Int64,NetRube.Data.Internal.PagingHelper.SQLParts,System.Object[]@)">
            <summary>
            生成 SQL 分页查询语句
            </summary>
            <param name="skip">要跳过记录数量</param>
            <param name="take">要获取记录数</param>
            <param name="parts">原始 SQL 查询语句被解析后的组成部分</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 分页查询语句</returns>
            <exception cref="T:System.Exception">Query must alias '*' when performing a paged query.\neg. select t.* from table t order by t.id</exception>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.OracleDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>
            转码标识符
            </summary>
            <param name="str">要转码的表名或列名</param>
            <returns>转码后的表名或列名</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.OracleDatabaseType.GetAutoIncrementExpression(NetRube.Data.TableInfo)">
            <summary>
            返回一个 SQL 表达式，以用来填充自增主键的字段
            </summary>
            <param name="ti">数据表信息</param>
            <returns>一个 SQL 表达式</returns>
            <remarks>参照 Oracle 数据库的相关用法</remarks>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.OracleDatabaseType.ExecuteInsert(NetRube.Data.Database,System.Data.IDbCommand,System.String)">
            <summary>
            执行插入操作
            </summary>
            <param name="db">数据库对象</param>
            <param name="cmd">要执行插入的命令</param>
            <param name="PrimaryKeyName">主键名</param>
            <returns>插入后的主键值</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.OracleDatabaseType.BuildTopSql(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            生成 SQL TOP 查询语句
            </summary>
            <param name="take">要获取记录数</param>
            <param name="dist">指定是否返回非重复记录</param>
            <param name="rownoname">序列号字段名</param>
            <param name="selectColumns">要获取的字段名列表</param>
            <param name="tableName">表名</param>
            <param name="joins">联合子句</param>
            <param name="where">条件子句</param>
            <param name="groupby">分组子句</param>
            <param name="having">聚合条件子句</param>
            <param name="orderby">排序子句</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 查询语句</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.OracleDatabaseType.BuildPagedSql(System.Int64,System.Int64,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            生成 SQL 分页查询语句
            </summary>
            <param name="skip">要跳过记录数量</param>
            <param name="take">要获取记录数</param>
            <param name="dist">指定是否返回非重复记录</param>
            <param name="rownoname">序列号字段名</param>
            <param name="selectColumns">要获取的字段名列表</param>
            <param name="tableName">表名</param>
            <param name="joins">联合子句</param>
            <param name="where">条件子句</param>
            <param name="groupby">分组子句</param>
            <param name="having">聚合条件子句</param>
            <param name="orderby">排序子句</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 查询语句</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:NetRube.Data.DatabaseTypes.PostgreSQLDatabaseType">
            <summary>
            PostgreSQL 数据源
            </summary>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.PostgreSQLDatabaseType.MapParameterValue(System.Object)">
            <summary>
            将 C# 数据类型转换为相应数据源的数据类型
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.PostgreSQLDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>
            转码标识符
            </summary>
            <param name="str">要转码的表名或列名</param>
            <returns>转码后的表名或列名</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.PostgreSQLDatabaseType.ExecuteInsert(NetRube.Data.Database,System.Data.IDbCommand,System.String)">
            <summary>
            执行插入操作
            </summary>
            <param name="db">数据库对象</param>
            <param name="cmd">要执行插入的命令</param>
            <param name="PrimaryKeyName">主键名</param>
            <returns>插入后的主键值</returns>
        </member>
        <member name="T:NetRube.Data.DatabaseTypes.SQLiteDatabaseType">
            <summary>
            SQLite 数据源
            </summary>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SQLiteDatabaseType.MapParameterValue(System.Object)">
            <summary>
            将 C# 数据类型转换为相应数据源的数据类型
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SQLiteDatabaseType.ExecuteInsert(NetRube.Data.Database,System.Data.IDbCommand,System.String)">
            <summary>
            执行插入操作
            </summary>
            <param name="db">数据库对象</param>
            <param name="cmd">要执行插入的命令</param>
            <param name="PrimaryKeyName">主键名</param>
            <returns>插入后的主键值</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SQLiteDatabaseType.GetExistsSql">
            <summary>
            返回用于查询记录是否存在的 SQL 语句
            </summary>
            <returns>用于查询记录是否存在的 SQL 语句</returns>
        </member>
        <member name="T:NetRube.Data.DatabaseTypes.SqlServerCEDatabaseType">
            <summary>
            SqlServer CE 数据源
            </summary>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerCEDatabaseType.BuildPageQuery(System.Int64,System.Int64,NetRube.Data.Internal.PagingHelper.SQLParts,System.Object[]@)">
            <summary>
            生成 SQL 分页查询语句
            </summary>
            <param name="skip">要跳过记录数量</param>
            <param name="take">要获取记录数</param>
            <param name="parts">原始 SQL 查询语句被解析后的组成部分</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 分页查询语句</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerCEDatabaseType.ExecuteInsert(NetRube.Data.Database,System.Data.IDbCommand,System.String)">
            <summary>
            执行插入操作
            </summary>
            <param name="db">数据库对象</param>
            <param name="cmd">要执行插入的命令</param>
            <param name="PrimaryKeyName">主键名</param>
            <returns>插入后的主键值</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerCEDatabaseType.BuildTopSql(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            生成 SQL TOP 查询语句
            </summary>
            <param name="take">要获取记录数</param>
            <param name="dist">指定是否返回非重复记录</param>
            <param name="rownoname">序列号字段名</param>
            <param name="selectColumns">要获取的字段名列表</param>
            <param name="tableName">表名</param>
            <param name="joins">联合子句</param>
            <param name="where">条件子句</param>
            <param name="groupby">分组子句</param>
            <param name="having">聚合条件子句</param>
            <param name="orderby">排序子句</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 查询语句</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerCEDatabaseType.BuildPagedSql(System.Int64,System.Int64,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            生成 SQL 分页查询语句
            </summary>
            <param name="skip">要跳过记录数量</param>
            <param name="take">要获取记录数</param>
            <param name="dist">指定是否返回非重复记录</param>
            <param name="rownoname">序列号字段名</param>
            <param name="selectColumns">要获取的字段名列表</param>
            <param name="tableName">表名</param>
            <param name="joins">联合子句</param>
            <param name="where">条件子句</param>
            <param name="groupby">分组子句</param>
            <param name="having">聚合条件子句</param>
            <param name="orderby">排序子句</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 查询语句</returns>
        </member>
        <member name="T:NetRube.Data.DatabaseTypes.SqlServerDatabaseType">
            <summary>
            SQLServer 数据源
            </summary>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerDatabaseType.BuildPageQuery(System.Int64,System.Int64,NetRube.Data.Internal.PagingHelper.SQLParts,System.Object[]@)">
            <summary>
            生成 SQL 分页查询语句
            </summary>
            <param name="skip">要跳过记录数量</param>
            <param name="take">要获取记录数</param>
            <param name="parts">原始 SQL 查询语句被解析后的组成部分</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 分页查询语句</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerDatabaseType.ExecuteInsert(NetRube.Data.Database,System.Data.IDbCommand,System.String)">
            <summary>
            执行插入操作
            </summary>
            <param name="db">数据库对象</param>
            <param name="cmd">要执行插入的命令</param>
            <param name="PrimaryKeyName">主键名</param>
            <returns>插入后的主键值</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerDatabaseType.GetExistsSql">
            <summary>
            返回用于查询记录是否存在的 SQL 语句
            </summary>
            <returns>用于查询记录是否存在的 SQL 语句</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerDatabaseType.GetInsertOutputClause(System.String)">
            <summary>
            返回一个 SQL 表达式，以用来填充自增主键的返回值
            </summary>
            <param name="primaryKeyName">主键名</param>
            <returns>一个 SQL 表达式</returns>
            <remarks>参照 MS SQLServer 数据库的相关用法</remarks>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerDatabaseType.BuildTopSql(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            生成 SQL TOP 查询语句
            </summary>
            <param name="take">要获取记录数</param>
            <param name="dist">指定是否返回非重复记录</param>
            <param name="rownoname">序列号字段名</param>
            <param name="selectColumns">要获取的字段名列表</param>
            <param name="tableName">表名</param>
            <param name="joins">联合子句</param>
            <param name="where">条件子句</param>
            <param name="groupby">分组子句</param>
            <param name="having">聚合条件子句</param>
            <param name="orderby">排序子句</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 查询语句</returns>
        </member>
        <member name="M:NetRube.Data.DatabaseTypes.SqlServerDatabaseType.BuildPagedSql(System.Int64,System.Int64,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            生成 SQL 分页查询语句
            </summary>
            <param name="skip">要跳过记录数量</param>
            <param name="take">要获取记录数</param>
            <param name="dist">指定是否返回非重复记录</param>
            <param name="rownoname">序列号字段名</param>
            <param name="selectColumns">要获取的字段名列表</param>
            <param name="tableName">表名</param>
            <param name="joins">联合子句</param>
            <param name="where">条件子句</param>
            <param name="groupby">分组子句</param>
            <param name="having">聚合条件子句</param>
            <param name="orderby">排序子句</param>
            <param name="args">SQL 查询用的参数</param>
            <returns>最终可以执行的 SQL 查询语句</returns>
        </member>
        <member name="T:NetRube.Data.DbFactory">
            <summary>
            数据上下文工厂
            </summary>
        </member>
        <member name="P:NetRube.Data.DbFactory.Default">
            <summary>
            默认连接数据上下文（连接字符串：mysql）
            </summary>
        </member>
        <member name="P:NetRube.Data.DbFactory.MongoDB">
            <summary>
            MongoDB连接上下文（连接字符串：MongoDB）
            </summary>
        </member>
        <member name="M:NetRube.Data.DbFactory.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:NetRube.Data.BuilderContext">
            <summary>
            构建器状态上下文
            </summary>
        </member>
        <member name="P:NetRube.Data.BuilderContext.Database">
            <summary>
            数据库查询对象
            </summary>
        </member>
        <member name="P:NetRube.Data.BuilderContext.Parameters">
            <summary>
            构建参数集合
            </summary>
        </member>
        <member name="P:NetRube.Data.BuilderContext.WithTableName">
            <summary>
            是否启用表别名
            </summary>
        </member>
        <member name="P:NetRube.Data.BuilderContext.Skip">
            <summary>
            忽略行数
            </summary>
        </member>
        <member name="P:NetRube.Data.BuilderContext.Take">
            <summary>
            获取行数
            </summary>
        </member>
        <member name="T:NetRube.Data.DelBuilder`1">
            <summary>
            删除构建器
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:NetRube.Data.DelBuilder`1.#ctor(NetRube.Data.Database,System.Collections.Generic.List{System.Object})">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.DelBuilder`1" /> 实例。
            </summary>
            <param name="db">数据库实例</param>
            <param name="args">参数</param>
        </member>
        <member name="M:NetRube.Data.DelBuilder`1.FOREIGNKEYCHECKS(System.Boolean)">
            <summary>
            是否关闭外键检查
            </summary>
            <param name="flag">true时不执行外键检查</param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Data.DelBuilder`1.Where(System.Linq.Expressions.Expression)">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>删除构建器</returns>
        </member>
        <member name="M:NetRube.Data.DelBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>删除构建器</returns>
        </member>
        <member name="M:NetRube.Data.DelBuilder`1.WhereOr(System.Linq.Expressions.Expression)">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>删除构建器</returns>
        </member>
        <member name="M:NetRube.Data.DelBuilder`1.WhereOr(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>删除构建器</returns>
        </member>
        <member name="M:NetRube.Data.DelBuilder`1.Execute">
            <summary>
            执行操作
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:NetRube.Data.DelBuilder`1.Succeed">
            <summary>
            返回是否执行成功
            </summary>
            <returns>指示是否执行成功</returns>
        </member>
        <member name="T:NetRube.Data.ExpressionVisitor">
            <summary>
            表达式处理器
            </summary>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            处理表达式或委托
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">expression</exception>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            处理常量表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            处理字段或属性表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            处理方法调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            处理二元运算表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            处理一元运算表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.VisitLamda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            处理 Lambda 表达式
            </summary>
            <param name="lambdaExpression">Lambda 表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>处理参数表达式</summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            处理构造函数调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.GetRightValue(System.Linq.Expressions.Expression)">
            <summary>
            获取二元表达式右则的值
            </summary>
            <param name="expression">表达式</param>
            <returns>二元表达式右则计算出来的值</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.GetOperator(NetRube.QueryOperatorType)">
            <summary>
            获取查询操作符
            </summary>
            <param name="op">操作符类型</param>
            <returns>查询操作符</returns>
            <exception cref="T:System.NotSupportedException">指定操作符未实现</exception>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.GetOperator(System.Linq.Expressions.ExpressionType)">
            <summary>
            获取查询操作符
            </summary>
            <param name="expType">表达式树节点类型</param>
            <returns>查询操作符</returns>
            <exception cref="T:System.NotSupportedException">指定操作符未实现</exception>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.GetColumnName(System.Boolean,NetRube.Data.Database,System.Linq.Expressions.MemberExpression)">
            <summary>
            获取字段名称
            </summary>
            <param name="wtn">是否包括表名</param>
            <param name="db">数据连接</param>
            <param name="expression">表达式</param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.IsParameterOrConstant(System.Linq.Expressions.MemberExpression)">
            <summary>
            检测MemberAccess是Parameter还是Constant
            </summary>
            <param name="expression"></param>
            <returns>Parameter返回true,Constant返回false</returns>
        </member>
        <member name="M:NetRube.Data.ExpressionVisitor.IsDateTimeProperty(System.Linq.Expressions.MemberExpression)">
            <summary>
            检测是否为时间属性
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="T:NetRube.Data.IGetBuilder">
            <summary>
            查询构建器基类。内部使用，不能直接初始化此类。
            </summary>
        </member>
        <member name="T:NetRube.Data.GetBuilder`1">
            <summary>
            查询构建器
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.#ctor(NetRube.Data.Database,System.Collections.Generic.List{System.Object})">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.GetBuilder`1" /> 实例。
            </summary>
            <param name="db">数据库实例</param>
            <param name="args">参数</param>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.InnerJoin``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            内连其它实体
            </summary>
            <typeparam name="TJoin">连接的实体类型</typeparam>
            <param name="expression">连接表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.InnerJoin``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            内连其它实体
            </summary>
            <typeparam name="TJoin">连接的实体类型</typeparam>
            <typeparam name="TEntity">设置关联的实体类型</typeparam>
            <param name="expression">连接表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.LeftJoin``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            左连其它实体
            </summary>
            <typeparam name="TJoin">连接的实体类型</typeparam>
            <param name="expression">连接表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.LeftJoin``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            左连其它实体
            </summary>
            <typeparam name="TJoin">连接的实体类型</typeparam>
            <typeparam name="TEntity">设置关联的实体类型</typeparam>
            <param name="expression">连接表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.RightJoin``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            右连其它实体
            </summary>
            <typeparam name="TJoin">连接的实体类型</typeparam>
            <param name="expression">连接表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.RightJoin``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            右连其它实体
            </summary>
            <typeparam name="TJoin">连接的实体类型</typeparam>
            <typeparam name="TEntity">设置关联的实体类型</typeparam>
            <param name="expression">连接表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Where(System.Linq.Expressions.Expression)">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <typeparam name="T1">实体类型</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Where``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <typeparam name="T1">实体类型</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Where``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Where``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.WhereOr(System.Linq.Expressions.Expression)">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.WhereOr(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.WhereOr``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <typeparam name="T1">实体类型</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.WhereOr``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <typeparam name="T1">实体类型</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.WhereOr``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.WhereOr``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.GroupBy(System.Linq.Expressions.Expression)">
            <summary>
            分组条件
            </summary>
            <param name="expression">表达式</param>
            <returns>分组构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.GroupBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            分组条件
            </summary>
            <param name="expression">表达式</param>
            <returns>分组构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.GroupBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            分组条件
            </summary>
            <param name="expression">表达式</param>
            <returns>分组构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Having(System.Linq.Expressions.Expression)">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Having(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Having``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <typeparam name="T1">实体类型 1</typeparam>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Having``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <typeparam name="T1">实体类型 1</typeparam>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Having``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Having``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.HavingOr(System.Linq.Expressions.Expression)">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.HavingOr(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.HavingOr``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <typeparam name="T1">实体类型 1</typeparam>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.HavingOr``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <typeparam name="T1">实体类型 1</typeparam>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.HavingOr``2(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.HavingOr``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            聚合条件
            </summary>
            <param name="expression">表达式</param>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <returns>聚合条件构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.SelectAll">
            <summary>
            获取所有字段
            </summary>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Select">
            <summary>
            添加获取 <typeparamref name="T" /> 类型的所有字段
            </summary>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Select``1">
            <summary>
            添加获取 <typeparamref name="TEntity" /> 类型的所有字段
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Select(System.Linq.Expressions.Expression)">
            <summary>
            添加要获取的字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            添加要获取的字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Select``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            添加要获取的字段
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            添加要获取的字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Select``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            添加要获取的字段
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Object}})">
            <summary>
            添加要获取的字段
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.From(NetRube.Data.GetBuilder{`0})">
            <summary>
            从指定查询构建器里查询数据，如“FROM (SQL 语句)”
            </summary>
            <param name="from">查询构建器</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Skip(System.Int32)">
            <summary>
            跳过第几条记录
            </summary>
            <param name="count">跳过记录数量</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Take(System.Int32)">
            <summary>
            取连续记录数
            </summary>
            <param name="count">获取记录数</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderBy(System.Linq.Expressions.Expression)">
            <summary>
            添加排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            添加排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            添加排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Object}})">
            <summary>
            添加排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            添加排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            添加排序字段
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderByDescending(System.Linq.Expressions.Expression)">
            <summary>
            添加降序排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            添加降序排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            添加降序排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Object}})">
            <summary>
            添加降序排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            添加降序排序字段
            </summary>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            添加降序排序字段
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Distinct">
            <summary>
            返回非重复记录
            </summary>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Map``2(System.Func{``0,``1,`0})">
            <summary>
            多实体关联映射
            </summary>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Map``3(System.Func{``0,``1,``2,`0})">
            <summary>
            多实体关联映射
            </summary>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <typeparam name="T3">实体类型 3</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Map``4(System.Func{``0,``1,``2,``3,`0})">
            <summary>
            多实体关联映射
            </summary>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <typeparam name="T3">实体类型 3</typeparam>
            <typeparam name="T4">实体类型 4</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Map``5(System.Func{``0,``1,``2,``3,``4,`0})">
            <summary>
            多实体关联映射
            </summary>
            <typeparam name="T1">实体类型 1</typeparam>
            <typeparam name="T2">实体类型 2</typeparam>
            <typeparam name="T3">实体类型 3</typeparam>
            <typeparam name="T4">实体类型 4</typeparam>
            <typeparam name="T5">实体类型 5</typeparam>
            <param name="cb">实体间的关联转换器</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.GetSql">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.GetSql(System.Collections.Generic.List{System.Object})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Count">
            <summary>
            获取符合相关条件的记录数量
            </summary>
            <returns>返回符合相关条件的记录数量</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Count``1">
            <summary>
            获取符合相关条件的记录数量
            </summary>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <returns>以指定的数据类型返回符合相关条件的记录数量</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Exist">
            <summary>
            获取是否存在相关条件的记录
            </summary>
            <returns>返回是否存在相关条件的记录</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Sum``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取指定字段的和
            </summary>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="expression">表达式</param>
            <returns>以指定的数据类型返回符合相关条件的和</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Sum``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            获取指定字段的和
            </summary>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="expression">表达式</param>
            <returns>以指定的数据类型返回符合相关条件的和</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Sum``2(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取指定字段的和
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="expression">表达式</param>
            <returns>以指定的数据类型返回符合相关条件的和</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Max``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取指定字段的最大值
            </summary>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="expression">表达式</param>
            <returns>以指定的数据类型返回符合相关条件的最大值</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Max``2(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取指定字段的最大值
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="expression">表达式</param>
            <returns>以指定的数据类型返回符合相关条件的最大值</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Min``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取指定字段的最小值
            </summary>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="expression">表达式</param>
            <returns>以指定的数据类型返回符合相关条件的最小值</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Min``2(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取指定字段的最小值
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="expression">表达式</param>
            <returns>以指定的数据类型返回符合相关条件的最小值</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Avg``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取指定字段的平均值
            </summary>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="expression">表达式</param>
            <returns>以指定的数据类型返回符合相关条件的平均值</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.Avg``2(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取指定字段的平均值
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="expression">表达式</param>
            <returns>以指定的数据类型返回符合相关条件的平均值</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.ToList">
            <summary>
            获取列表
            </summary>
            <returns>符合相关条件的实体列表</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.ToList``1">
            <summary>
            获取列表
            </summary>
            <returns>符合相关条件的实体列表</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.FirstOrDefault">
            <summary>
            获取满足条件的第一项或默认内容
            </summary>
            <returns>符合相关条件的单个实体</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.FirstOrDefault``1">
            <summary>
            获取满足条件的第一项或默认内容
            </summary>
            <returns>符合相关条件的单个实体</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.ToPagedList(System.Int32,System.Int32)">
            <summary>
            获取分页列表
            </summary>
            <param name="pageIndex">当前页索引</param>
            <param name="pageSize">每页记录数</param>
            <returns>符合相关条件的分页列表</returns>
        </member>
        <member name="M:NetRube.Data.GetBuilder`1.ToPagedList``1(System.Int32,System.Int32)">
            <summary>
            获取分页列表
            </summary>
            <param name="pageIndex">当前页索引</param>
            <param name="pageSize">每页记录数</param>
            <returns>符合相关条件的分页列表</returns>
        </member>
        <member name="T:NetRube.Data.JoinBuilder">
            <summary>
            Join 构建器
            </summary>
        </member>
        <member name="M:NetRube.Data.JoinBuilder.#ctor(NetRube.Data.BuilderContext,System.Boolean)">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.JoinBuilder" /> 实例。
            </summary>
            <param name="context">构建器上下文</param>
            <param name="withTableName">指定是否包含表名</param>
        </member>
        <member name="M:NetRube.Data.JoinBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            处理方法调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
            <exception cref="T:System.NotImplementedException">指定方法未实现</exception>
        </member>
        <member name="T:NetRube.Data.OrderByBuilder">
            <summary>
            Select 构建器
            </summary>
        </member>
        <member name="M:NetRube.Data.OrderByBuilder.ToString">
            <summary>
            返回 Select 字段
            </summary>
            <returns>Select 字段</returns>
        </member>
        <member name="M:NetRube.Data.OrderByBuilder.IsEmpty">
            <summary>
            返回 Select 字段是否为空
            </summary>
            <returns>Select 字段是否为空</returns>
        </member>
        <member name="M:NetRube.Data.OrderByBuilder.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            处理构造函数调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Data.OrderByBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            处理方法调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
            <exception cref="T:System.NotImplementedException">指定方法未实现</exception>
        </member>
        <member name="M:NetRube.Data.OrderByBuilder.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            处理字段或属性表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="T:NetRube.Data.SelectBuilder">
            <summary>
            Select 构建器
            </summary>
        </member>
        <member name="M:NetRube.Data.SelectBuilder.#ctor(NetRube.Data.BuilderContext,System.Linq.Expressions.Expression)">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.SelectBuilder" /> 实例。
            </summary>
        </member>
        <member name="M:NetRube.Data.SelectBuilder.ToString">
            <summary>
            返回 Select 字段
            </summary>
            <returns>Select 字段</returns>
        </member>
        <member name="M:NetRube.Data.SelectBuilder.IsEmpty">
            <summary>
            返回 Select 字段是否为空
            </summary>
            <returns>Select 字段是否为空</returns>
        </member>
        <member name="P:NetRube.Data.SelectBuilder.RowNoName">
            <summary>
            序列号字段名
            </summary>
        </member>
        <member name="M:NetRube.Data.SelectBuilder.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            处理构造函数调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Data.SelectBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            处理方法调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
            <exception cref="T:System.NotImplementedException">指定方法未实现</exception>
        </member>
        <member name="M:NetRube.Data.SelectBuilder.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            处理字段或属性表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="T:NetRube.Data.SetBuilder`1">
            <summary>
            更新构建器
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.#ctor(NetRube.Data.Database)">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.SetBuilder`1" /> 实例。
            </summary>
            <param name="db">数据库实例</param>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.Set(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            要更新的字段
            </summary>
            <param name="property">实体属性表达式</param>
            <param name="value">值</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.Set(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            要更新的字段
            </summary>
            <param name="property">实体属性表达式</param>
            <param name="expression">值</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.Set(`0,`0)">
            <summary>
            要更新的实体
            </summary>
            <param name="entity">要更新的实体</param>
            <param name="refer">用于参照的实体</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.Set(NetRube.TrackingEntity{`0})">
            <summary>
            要更新的实体
            </summary>
            <param name="snapshot">实体快照</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.Set(System.Collections.Generic.List{NetRube.TrackingEntity{`0}.Change})">
            <summary>
            要更新的实体
            </summary>
            <param name="changes">被更改属性列表</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.Where(System.Linq.Expressions.Expression)">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.WhereOr(System.Linq.Expressions.Expression)">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.WhereOr(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询条件
            </summary>
            <param name="expression">表达式</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.Execute">
            <summary>
            执行操作
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:NetRube.Data.SetBuilder`1.Succeed">
            <summary>
            返回是否执行成功
            </summary>
            <returns>指示是否执行成功</returns>
        </member>
        <member name="T:NetRube.Data.StrBuilder">
            <summary>
            字符串解析
            </summary>
        </member>
        <member name="M:NetRube.Data.StrBuilder.#ctor(NetRube.Data.Database,System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.StrBuilder" /> 实例。
            </summary>
            <param name="db">数据库实例</param>
            /// <param name="expression">表达式</param>
            <param name="withTableName">指定是否包含表名</param>
        </member>
        <member name="M:NetRube.Data.StrBuilder.ToString">
            <summary>
            返回 字符串 内容
            </summary>
            <returns>返回 字符串 内容</returns>
        </member>
        <member name="T:NetRube.Data.UpdateBuilder`1">
            <summary>
            UPDATE 构建器
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:NetRube.Data.UpdateBuilder`1.ToString">
            <summary>
            返回 SET 子句内容
            </summary>
            <returns>SET 子句内容</returns>
        </member>
        <member name="M:NetRube.Data.UpdateBuilder`1.Append(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>添加 SET 子句</summary>
            <param name="field">SET 字段</param>
            <param name="value">SET 值</param>
            <returns>UPDATE 构建器</returns>
        </member>
        <member name="M:NetRube.Data.UpdateBuilder`1.Append(System.String,System.Object)">
            <summary>添加 SET 子句</summary>
            <param name="field">SET 字段</param>
            <param name="value">SET 值</param>
            <returns>UPDATE 构建器</returns>
        </member>
        <member name="M:NetRube.Data.UpdateBuilder`1.Append(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression)">
            <summary>添加 SET 子句</summary>
            <param name="field">SET 字段</param>
            <param name="value">SET 值</param>
            <returns>UPDATE 构建器</returns>
        </member>
        <member name="M:NetRube.Data.UpdateBuilder`1.Append(System.String,System.Linq.Expressions.Expression)">
            <summary>添加 SET 子句</summary>
            <param name="field">SET 字段</param>
            <param name="value">SET 值</param>
            <returns>UPDATE 构建器</returns>
        </member>
        <member name="M:NetRube.Data.UpdateBuilder`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            处理二元运算表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.UpdateBuilder`1.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            处理字段或属性表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.UpdateBuilder`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            处理常量表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.UpdateBuilder`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            处理方法调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
            <exception cref="T:System.NotImplementedException">指定方法未实现</exception>
        </member>
        <member name="T:NetRube.Data.GroupByBuilder">
            <summary>
            GroupBy 构建器
            </summary>
        </member>
        <member name="M:NetRube.Data.GroupByBuilder.#ctor(NetRube.Data.BuilderContext)">
            <summary>
             初始化一个新 <see cref="T:NetRube.Data.GroupByBuilder" /> 实例。
            </summary>
            <param name="context">构建器上下文</param>
        </member>
        <member name="M:NetRube.Data.GroupByBuilder.ToString">
            <summary>
            返回 Group By 子句内容
            </summary>
            <returns>Group By 子句内容</returns>
        </member>
        <member name="M:NetRube.Data.GroupByBuilder.IsEmpty">
            <summary>
            返回 Group By 子句是否为空
            </summary>
            <returns>返回 Group By 子句是否为空</returns>
        </member>
        <member name="M:NetRube.Data.GroupByBuilder.Append(System.Linq.Expressions.Expression)">
            <summary>添加 Group By 子句</summary>
            <param name="expression">条件表达式</param>
            <returns>Group By 构建器</returns>
        </member>
        <member name="M:NetRube.Data.GroupByBuilder.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            处理二元运算表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.GroupByBuilder.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            处理字段或属性表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="T:NetRube.Data.HavingBuilder">
            <summary>
            Having 构建器
            </summary>
        </member>
        <member name="M:NetRube.Data.HavingBuilder.#ctor(NetRube.Data.BuilderContext,System.Boolean)">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.HavingBuilder" /> 实例。
            </summary>
            <param name="context">构建器上下文</param>
            <param name="withTableName">指定是否包含表名</param>
        </member>
        <member name="M:NetRube.Data.HavingBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            处理方法调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
            <exception cref="T:System.NotImplementedException">指定方法未实现</exception>
        </member>
        <member name="T:NetRube.Data.WhereBuilder">
            <summary>
            WHERE 构建器
            </summary>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.#ctor(NetRube.Data.BuilderContext,System.Boolean)">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.WhereBuilder" /> 实例。
            </summary>
            <param name="context">构建器上下文</param>
            <param name="withTableName">指定是否包含表名</param>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.ToString">
            <summary>
            返回 WHERE 子句内容
            </summary>
            <returns>WHERE 子句内容</returns>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.Append(System.Linq.Expressions.Expression)">
            <summary>添加 WHERE 子句</summary>
            <param name="expression">条件表达式</param>
            <returns>WHERE 构建器</returns>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.Append(System.String)">
            <summary>添加 WHERE 子句</summary>
            <param name="where">WHERE 子句</param>
            <returns>WHERE 构建器</returns>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.AppendOr(System.Linq.Expressions.Expression)">
            <summary>添加 WHERE OR 子句</summary>
            <param name="expression">条件表达式</param>
            <returns>WHERE 构建器</returns>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.AppendOr(System.String)">
            <summary>添加 WHERE OR 子句</summary>
            <param name="where">WHERE 子句</param>
            <returns>WHERE 构建器</returns>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            处理二元运算表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            处理字段或属性表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            处理常量表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:NetRube.Data.WhereBuilder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            处理方法调用表达式
            </summary>
            <param name="expression">表达式</param>
            <returns>表达式</returns>
            <exception cref="T:System.NotImplementedException">指定方法未实现</exception>
        </member>
        <member name="T:NetRube.Data.MongoDBClient">
            <summary>
            MongoDB客户端
            </summary>
        </member>
        <member name="M:NetRube.Data.MongoDBClient.AsQueryable``1">
            <summary>
            获取集合
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:NetRube.Data.MongoDBClient.Get``1">
            <summary>
            获取集合
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="F:NetRube.Data.MongoDBClient.clientLocker">
            <summary>
            客户端锁
            </summary>
        </member>
        <member name="F:NetRube.Data.MongoDBClient._client">
            <summary>
            用于保存客户端，全局只实例化一次
            </summary>
        </member>
        <member name="F:NetRube.Data.MongoDBClient.mongoUrl">
            <summary>
            Mongodb的连接串
            </summary>
        </member>
        <member name="P:NetRube.Data.MongoDBClient.Client">
            <summary>
            客户端
            </summary>
        </member>
        <member name="P:NetRube.Data.MongoDBClient.Database">
            <summary>
            MongoDB数据库实例
            </summary>
        </member>
        <member name="T:NetRube.Data.OracleProvider">
            <summary>
            Oracle 数据源适配器
            </summary>
        </member>
        <member name="F:NetRube.Data.OracleProvider.Instance">
            <summary>
            Oracle 数据源适配器实例
            </summary>
        </member>
        <member name="M:NetRube.Data.OracleProvider.#ctor">
            <summary>
            初始化一个新 <see cref="T:NetRube.Data.OracleProvider" /> 实例。
            </summary>
            <exception cref="T:System.InvalidOperationException">Can't find Connection type:  + _connectionTypeName</exception>
        </member>
        <member name="M:NetRube.Data.OracleProvider.CreateConnection">
            <summary>
            返回实现 <see cref="T:System.Data.Common.DbConnection" /> 类的提供程序的类的一个新实例。
            </summary>
            <returns><see cref="T:System.Data.Common.DbConnection" /> 的新实例。</returns>
        </member>
        <member name="M:NetRube.Data.OracleProvider.CreateCommand">
            <summary>
            返回实现 <see cref="T:System.Data.Common.DbCommand" /> 类的提供程序的类的一个新实例。
            </summary>
            <returns><see cref="T:System.Data.Common.DbCommand" /> 的新实例。</returns>
        </member>
        <member name="T:NetRube.Data.PetaPocoExt">
            <summary>
            PetaPoco 扩展
            </summary>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Get``1(NetRube.Data.Database)">
            <summary>
            获取实体数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Get``1(NetRube.Data.Database,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取实体数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="expression">查询条件表达式</param>
            <returns>查询构建器</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Del``1(NetRube.Data.Database,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="expression">删除条件表达式</param>
            <returns>受影响的行</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Del``1(NetRube.Data.Database,``0)">
            <summary>
            删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="entity">要删除的实体</param>
            <returns>指示是否删除成功</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Del``1(NetRube.Data.Database,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="entitys">要删除的实体集合</param>
            <returns>指示是否删除成功</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Del``1(NetRube.Data.Database)">
            <summary>
            删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <returns>删除构建器</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Set``1(NetRube.Data.Database)">
            <summary>
            更新
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Set``1(NetRube.Data.Database,``0)">
            <summary>
            更新
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="entity">要更新的实体</param>
            <returns>更新构建器</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Add``1(NetRube.Data.Database,``0)">
            <summary>
            添加
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="entity">要添加的实体</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.Add``1(NetRube.Data.Database,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量添加
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="entity">要添加的实体集合</param>
            <returns>指示是否添加成功</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.InTransaction(NetRube.Data.Database,System.Action,System.Action,System.Action{System.Exception})">
            <summary>
            在事务范围内处理
            </summary>
            <param name="db">数据库实例</param>
            <param name="action">要处理操作</param>
            <param name="succedAction">The succed action.</param>
            <param name="failedAction">处理失败时的操作</param>
            <returns>提示是否操作成功</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.InTransaction(NetRube.Data.Database,System.Func{System.Boolean},System.Action,System.Action{System.Exception})">
            <summary>
            在事务范围内处理
            </summary>
            <param name="db">数据库实例</param>
            <param name="action">要处理操作</param>
            <param name="succeedAction">处理成功时的操作</param>
            <param name="failedAction">处理失败时的操作</param>
            <returns>提示是否操作成功</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetColumnName(NetRube.Data.Database,System.String)">
            <summary>
            获取字段列名称
            </summary>
            <param name="db">数据库实例</param>
            <param name="columnName">原始名称</param>
            <returns>转码后的字段列名称</returns>
            <exception cref="T:NetRube.ArgumentNullOrEmptyException"><paramref name="columnName" /> 为空或 null</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetColumnName(NetRube.Data.Database,System.Type,System.String)">
            <summary>
            获取字段列名称
            </summary>
            <param name="db">数据库实例</param>
            <param name="type">实体类型</param>
            <param name="columnName">原始名称</param>
            <returns>转码后的字段列名称</returns>
            <exception cref="T:NetRube.ArgumentNullOrEmptyException"><paramref name="columnName" /> 为空或 null</exception>
            <exception cref="T:System.NullReferenceException">找不到字段列名</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetColumnName``1(NetRube.Data.Database,System.String)">
            <summary>
            获取表名称
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="columnName">原字段列名称</param>
            <returns>转码后的字段列名称</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetColumnName``1(NetRube.Data.Database,``0,System.String)">
            <summary>
            获取表名称
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="entity">实体</param>
            <param name="columnName">原字段列名称</param>
            <returns>转码后的字段列名称</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableName(NetRube.Data.Database,System.String)">
            <summary>
            获取表名称
            </summary>
            <param name="db">数据库实例</param>
            <param name="tableName">原始表名</param>
            <returns>转码后的表名</returns>
            <exception cref="T:NetRube.ArgumentNullOrEmptyException"><paramref name="tableName" /> 为空或 null</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableName(NetRube.Data.Database,System.Type)">
            <summary>
            获取表名称
            </summary>
            <param name="db">数据库实例</param>
            <param name="type">实体类型</param>
            <returns>转码后的表名</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableName``1(NetRube.Data.Database)">
            <summary>
            获取表名称
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <returns>转码后的表名</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableName``1(NetRube.Data.Database,``0)">
            <summary>
            获取表名称
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="entity">实体</param>
            <returns>转码后的表名</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableAndColumnName(NetRube.Data.Database,System.String,System.String)">
            <summary>
            获取表名称和字段列名称
            </summary>
            <param name="db">数据库实例</param>
            <param name="tableName">表名称</param>
            <param name="columnName">字段列名称</param>
            <returns>组合后的表名称和字段列名称</returns>
            <exception cref="T:NetRube.ArgumentNullOrEmptyException"><paramref name="tableName" /> 或 <paramref name="columnName" /> 为空或 null</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableAndColumnName(NetRube.Data.Database,System.Type)">
            <summary>
            获取表名称和字段列名称
            </summary>
            <param name="db">数据库实例</param>
            <param name="type">实体类型</param>
            <returns>组合后的表名称和字段列名称</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableAndColumnName``1(NetRube.Data.Database)">
            <summary>
            获取表名称和字段列名称
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <returns>组合后的表名称和字段列名称</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableAndColumnName``1(NetRube.Data.Database,``0)">
            <summary>
            获取表名称和字段列名称
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="entity">实体</param>
            <returns>组合后的表名称和字段列名称</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableAndColumnName(NetRube.Data.Database,System.Type,System.String)">
            <summary>
            获取表名称和字段列名称
            </summary>
            <param name="db">数据库实例</param>
            <param name="type">实体类型</param>
            <param name="columnName">原字段列名称</param>
            <returns>组合后的表名称和字段列名称</returns>
            <exception cref="T:NetRube.ArgumentNullOrEmptyException"><paramref name="columnName" /> 为空或 null</exception>
            <exception cref="T:System.NullReferenceException">找不到字段列名</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableAndColumnName``1(NetRube.Data.Database,System.String)">
            <summary>
            获取表名称和字段列名称
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="columnName">原字段列名称</param>
            <returns>组合后的表名称和字段列名称</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.GetTableAndColumnName``1(NetRube.Data.Database,``0,System.String)">
            <summary>
            获取表名称和字段列名称
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="db">数据库实例</param>
            <param name="entity">实体</param>
            <param name="columnName">原字段列名称</param>
            <returns>组合后的表名称和字段列名称</returns>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExNotExists``2(``0,NetRube.Data.GetBuilder{``1})">
            <summary>
            调用 SQL NOT EXISTS 操作符(Where)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="Table"></typeparam>
            <param name="field">字段栏</param>
            <param name="gb"></param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExExists``2(``0,NetRube.Data.GetBuilder{``1})">
            <summary>
            调用 SQL EXISTS 操作符(Where)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="Table"></typeparam>
            <param name="field">字段栏</param>
            <param name="gb"></param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExIn``2(``0,NetRube.Data.GetBuilder{``1})">
            <summary>
            调用 SQL IN 操作符(Where)
            </summary>
            <typeparam name="T">字段栏数据库类型</typeparam>
            <typeparam name="Table">数据库表数据库类型</typeparam>
            <param name="field">字段栏</param>
            <param name="gb">查询构建器</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExIn``2(``0,System.Collections.Generic.IEnumerable{``1})">
            <summary>
            调用 SQL IN 操作符(Where)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="field">字段栏</param>
            <param name="gb"></param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExIn``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            调用 SQL IN 操作符(Where)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <param name="gb">字符串数组</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExNotIn``2(``0,NetRube.Data.GetBuilder{``1})">
            <summary>
            调用 SQL NOT IN 操作符(Where)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="Table"></typeparam>
            <param name="field">字段栏</param>
            <param name="gb"></param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExNotIn``2(``0,System.Collections.Generic.IEnumerable{``1})">
            <summary>
            调用 SQL NOT IN 操作符(Where)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="field">字段栏</param>
            <param name="gb"></param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExNotIn``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            调用 SQL NOT IN 操作符(Where)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <param name="gb"></param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExIsNull``1(``0)">
            <summary>
            调用 SQL IS NULL 函数(Where,Having)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExSql``1(``0)">
            <summary>
            调用  函数(Select)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExIsNotNull``1(``0)">
            <summary>
            调用 SQL IS NOT NULL 函数(Where,Having)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExSum``1(``0)">
            <summary>
            调用 SQL Sum 函数(Select,Having)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExCount``1(``0,System.Boolean)">
            <summary>
            调用 SQL Count 函数(Select,Having)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <param name="includeField">是否包含当前字段[false=COUNT(0) true=COUNT(field)]</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExCount``2(``0,System.Boolean)">
            <summary>
            调用 SQL Count 函数(Select,Having)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult">返回类型</typeparam>
            <param name="field">字段栏</param>
            <param name="includeField">是否包含当前字段[false=COUNT(0) true=COUNT(field)]</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExAvg``1(``0)">
            <summary>
            调用 SQL AVG 函数(Select,Having)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExMax``1(``0)">
            <summary>
            调用 SQL MAX 函数(Select,Having)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExMin``1(``0)">
            <summary>
            调用 SQL MIN 函数(Select,Having)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExResolve``1(NetRube.Data.IGetBuilder)">
            <summary>
            生成子查询(Select,Where)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gb">子查询</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExIfNull``1(``0,``0)">
            <summary>
            调用 SQL IFNULL 函数(Select,Where,Having)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <param name="defaultvalue">字段为NULL时的默认值</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExFormat``1(System.String)">
            <summary>
            lamuda表达式格式化(Where)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExRowNo``1(``0)">
            <summary>
            生成序列号列(Select)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExCase``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            调用 SQL Case When Then Else End 函数(Select)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <param name="expression">例n=>n.Id.ExThen(1) == 2[When Id = 2 Then 1]</param>
            <param name="value">默认值</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExCase``2(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,``1,System.Object}}[])">
            <summary>
            调用 SQL Case When Then Else End 函数(Select)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <param name="field">字段栏</param>
            <param name="expression">例n=>n.Id.ExThen(1) == 2[When Id = 2 Then 1]</param>
            <param name="value">默认值</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="M:NetRube.Data.PetaPocoExt.ExThen``1(``0,System.Object)">
            <summary>
            调用 SQL Then 必须搭配ExCase使用(Select)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">字段栏</param>
            <param name="value">默认值</param>
            <returns>表示此SQL 函数的返回值类型。只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发 <see cref="T:System.NotSupportedException"/> 异常。</returns>
            <exception cref="T:System.NotSupportedException">只能在 SQL 构建器中调用，当直接调用此 SQL 函数时将引发此异常。</exception>
        </member>
        <member name="T:NetRube.Accessor">
            <summary>字段/属性访问器</summary>
        </member>
        <member name="F:NetRube.Accessor.Name">
            <summary>访问器名称</summary>
        </member>
        <member name="F:NetRube.Accessor.Member">
            <summary>成员信息</summary>
        </member>
        <member name="F:NetRube.Accessor.DataType">
            <summary>访问器数据类型</summary>
        </member>
        <member name="F:NetRube.Accessor.AccessorType">
            <summary>访问器类型</summary>
        </member>
        <member name="F:NetRube.Accessor.CanRade">
            <summary>是否为可读属性</summary>
        </member>
        <member name="F:NetRube.Accessor.CanWrite">
            <summary>是否为可写属性</summary>
        </member>
        <member name="F:NetRube.Accessor.IsVirtual">
            <summary>是否为虚属性</summary>
        </member>
        <member name="M:NetRube.Accessor.SetValue(System.Object,System.Object)">
            <summary>设置访问器的值</summary>
            <param name="instance">要设置的对象实例</param>
            <param name="value">要设置的值</param>
        </member>
        <member name="M:NetRube.Accessor.GetValue(System.Object)">
            <summary>获取访问器的值</summary>
            <param name="instance">要获取的对象实例</param>
            <returns>访问器的值</returns>
        </member>
        <member name="M:NetRube.Accessor.GetValue``1(System.Object)">
            <summary>获取访问器的值</summary>
            <typeparam name="T">值的数据类型</typeparam>
            <param name="instance">要获取的对象实例</param>
            <returns>访问器的值</returns>
        </member>
        <member name="T:NetRube.ArgumentNullOrEmptyException">
            <summary>当将空引用（null 或 empyt）传递给不接受它作为有效参数的方法时引发的异常。</summary>
        </member>
        <member name="M:NetRube.ArgumentNullOrEmptyException.#ctor">
            <summary>初始化 <see cref="T:NetRube.ArgumentNullOrEmptyException"/> 类的新实例。</summary>
        </member>
        <member name="M:NetRube.ArgumentNullOrEmptyException.#ctor(System.String)">
            <summary>使用导致此异常的参数的名称初始化 <see cref="T:NetRube.ArgumentNullOrEmptyException"/> 类的新实例。</summary>
            <param name="paramName">导致异常的参数的名称。</param>
        </member>
        <member name="M:NetRube.ArgumentNullOrEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>用序列化数据初始化 <see cref="T:NetRube.ArgumentNullOrEmptyException"/> 类的新实例。</summary>
            <param name="info">保存序列化对象数据的对象。</param>
            <param name="context">有关源或目标的上下文信息。</param>
        </member>
        <member name="M:NetRube.ArgumentNullOrEmptyException.#ctor(System.String,System.String)">
            <summary>使用指定的错误消息和导致此异常的参数的名称来初始化 <see cref="T:NetRube.ArgumentNullOrEmptyException"/> 类的实例。</summary>
            <param name="paramName">导致异常的参数的名称。</param>
            <param name="message">描述错误的消息。</param>
        </member>
        <member name="T:NetRube.Constants">
            <summary>
            常量
            </summary>
        </member>
        <member name="T:NetRube.Dict`2">
            <summary>简单的可以多线程同时访问的字典</summary>
            <typeparam name="TKey">键的类型</typeparam>
            <typeparam name="TValue">值的类型</typeparam>
        </member>
        <member name="M:NetRube.Dict`2.#ctor">
            <summary>初始化一个新 <see cref="T:NetRube.Dict`2"/> 实例。</summary>
        </member>
        <member name="M:NetRube.Dict`2.#ctor(System.Int32)">
            <summary>初始化一个新 <see cref="T:NetRube.Dict`2"/> 实例。</summary>
            <param name="capacity">可包含的初始元素数</param>
        </member>
        <member name="M:NetRube.Dict`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>初始化一个新 <see cref="T:NetRube.Dict`2"/> 实例。</summary>
            <param name="comparer">比较键时要使用的比较器</param>
        </member>
        <member name="M:NetRube.Dict`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>初始化一个新 <see cref="T:NetRube.Dict`2"/> 实例。</summary>
            <param name="capacity">可包含的初始元素数</param>
            <param name="comparer">比较键时要使用的比较器</param>
        </member>
        <member name="P:NetRube.Dict`2.Count">
            <summary>获取当前字典中的数目</summary>
            <value>当前字典中的数目</value>
        </member>
        <member name="M:NetRube.Dict`2.Get(`0,System.Func{`1})">
            <summary>获取值</summary>
            <param name="key">键名</param>
            <param name="func">用于在值不存在时添加值的委托</param>
            <returns>值</returns>
        </member>
        <member name="M:NetRube.Dict`2.Del(`0)">
            <summary>移除指定键的值</summary>
            <param name="key">要移除的键</param>
            <returns>返回是否移除成功</returns>
        </member>
        <member name="M:NetRube.Dict`2.Clear">
            <summary>清除所有条目</summary>
        </member>
        <member name="T:NetRube.AccessorType">
            <summary>访问器类型</summary>
        </member>
        <member name="F:NetRube.AccessorType.Property">
            <summary>属性</summary>
        </member>
        <member name="F:NetRube.AccessorType.Field">
            <summary>字段</summary>
        </member>
        <member name="T:NetRube.QueryOperatorType">
            <summary>查询比较运算符类型</summary>
        </member>
        <member name="F:NetRube.QueryOperatorType.Equal">
            <summary>等于（默认值）</summary>
        </member>
        <member name="F:NetRube.QueryOperatorType.NotEqual">
            <summary>不等于</summary>
        </member>
        <member name="F:NetRube.QueryOperatorType.GreaterThan">
            <summary>大于</summary>
        </member>
        <member name="F:NetRube.QueryOperatorType.LessThan">
            <summary>小于</summary>
        </member>
        <member name="F:NetRube.QueryOperatorType.GreaterThanOrEqual">
            <summary>大于或等于</summary>
        </member>
        <member name="F:NetRube.QueryOperatorType.LessThanOrEqual">
            <summary>小于或等于</summary>
        </member>
        <member name="F:NetRube.QueryOperatorType.Contains">
            <summary>包含</summary>
        </member>
        <member name="F:NetRube.QueryOperatorType.StartsWith">
            <summary>以……开头</summary>
        </member>
        <member name="F:NetRube.QueryOperatorType.EndsWith">
            <summary>以……结尾</summary>
        </member>
        <member name="T:NetRube.TextCaseType">
            <summary>转换大小写类型</summary>
        </member>
        <member name="F:NetRube.TextCaseType.None">
            <summary>不处理</summary>
        </member>
        <member name="F:NetRube.TextCaseType.LowerCase">
            <summary>小写</summary>
        </member>
        <member name="F:NetRube.TextCaseType.UpperCase">
            <summary>大写</summary>
        </member>
        <member name="F:NetRube.TextCaseType.PascalCase">
            <summary>首字母大写（每个单词的首字母大写）</summary>
        </member>
        <member name="F:NetRube.TextCaseType.CamelCase">
            <summary>驼峰格式（首个单词的首字母小写，其余单词的首字母大写）</summary>
        </member>
        <member name="F:NetRube.TextCaseType.Hyphenate">
            <summary>以连字符分隔</summary>
        </member>
        <member name="T:NetRube.FastJson.Json">
            <summary>JSON 序列化/反序列化</summary>
        </member>
        <member name="M:NetRube.FastJson.Json.#ctor(NetRube.FastJson.Json.Parameters)">
            <summary>初始化一个新 <see cref="T:NetRube.FastJson.Json"/> 实例。</summary>
            <param name="param">参数</param>
        </member>
        <member name="M:NetRube.FastJson.Json.ToJson(System.Object)">
            <summary>将对象转换成 JSON 字符串</summary>
            <param name="obj">要转换的对象</param>
            <returns>转换后的 JSON 字符串</returns>
        </member>
        <member name="M:NetRube.FastJson.Json.Parse(System.String)">
            <summary>将 JSON 字符串转换成对象</summary>
            <param name="json">要转换的 JSON 字符串</param>
            <returns>转换后的对象</returns>
        </member>
        <member name="M:NetRube.FastJson.Json.ToObject``1(System.String)">
            <summary>将 JSON 字符串转换成对象</summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="json">要转换的 JSON 字符串</param>
            <returns>转换后的对象</returns>
        </member>
        <member name="M:NetRube.FastJson.Json.ToObject(System.String)">
            <summary>将 JSON 字符串转换成对象</summary>
            <param name="json">要转换的 JSON 字符串</param>
            <returns>转换后的对象</returns>
        </member>
        <member name="M:NetRube.FastJson.Json.ToObject(System.String,System.Type)">
            <summary>将 JSON 字符串转换成对象</summary>
            <param name="json">要转换的 JSON 字符串</param>
            <param name="type">对象类型</param>
            <returns>转换后的对象</returns>
        </member>
        <member name="M:NetRube.FastJson.Json.FillObject(System.Object,System.String)">
            <summary>填充对象</summary>
            <param name="input">要填充的对象</param>
            <param name="json">用于填充的 JSON 代码</param>
            <returns>填充后的对象</returns>
        </member>
        <member name="T:NetRube.FastJson.Json.Parameters">
            <summary>参数</summary>
        </member>
        <member name="F:NetRube.FastJson.Json.Parameters.GuidFormat">
            <summary>GUID 格式，默认为 GuidType.D</summary>
        </member>
        <member name="F:NetRube.FastJson.Json.Parameters.EnumFormat">
            <summary>枚举格式，默认为 EnumType.Value</summary>
        </member>
        <member name="F:NetRube.FastJson.Json.Parameters.UseDateTimeTicks">
            <summary>是否使用 Ticks 日期格式，默认为 false</summary>
        </member>
        <member name="F:NetRube.FastJson.Json.Parameters.SerializeNullValues">
            <summary>序列化 null 值 (默认为 True)</summary>
        </member>
        <member name="T:NetRube.FastJson.Json.GuidType">
            <summary>
            GUID 格式类型
            </summary>
        </member>
        <member name="F:NetRube.FastJson.Json.GuidType.N">
            <summary>
            <para>32 位：</para>
            <para>00000000000000000000000000000000</para>
            </summary>
        </member>
        <member name="F:NetRube.FastJson.Json.GuidType.D">
            <summary>
            <para>由连字符分隔的 32 位数字：</para>
            <para>00000000-0000-0000-0000-000000000000</para>
            </summary>
        </member>
        <member name="F:NetRube.FastJson.Json.GuidType.B">
            <summary>
            <para>括在大括号中、由连字符分隔的 32 位数字：</para>
            <para>{00000000-0000-0000-0000-000000000000}</para>
            </summary>
        </member>
        <member name="F:NetRube.FastJson.Json.GuidType.P">
            <summary>
            <para>括在圆括号中、由连字符分隔的 32 位数字：</para>
            <para>(00000000-0000-0000-0000-000000000000)</para>
            </summary>
        </member>
        <member name="F:NetRube.FastJson.Json.GuidType.X">
            <summary>
            <para>括在大括号的 4 个十六进制值，其中第 4 个值是 8 个十六进制值的子集（也括在大括号中）位：</para>
            <para>{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</para>
            </summary>
        </member>
        <member name="T:NetRube.FastJson.Json.EnumType">
            <summary>枚举格式类型</summary>
        </member>
        <member name="F:NetRube.FastJson.Json.EnumType.Name">
            <summary>名称</summary>
        </member>
        <member name="F:NetRube.FastJson.Json.EnumType.Value">
            <summary>值</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsValueType">
            <summary>数据类型是否为值类型</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsGenericType">
            <summary>数据类型是否为泛型</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.GenericTypes">
            <summary>数据类型为泛型时的类型集合</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsDictionary">
            <summary>数据类型是否为字典</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsArray">
            <summary>数据类型是否为数组</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsByteArray">
            <summary>数据类型是否为字节数组</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsGuid">
            <summary>数据类型是否为 GUID</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsDataSet">
            <summary>数据类型是否为 DataSet</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsDataTable">
            <summary>数据类型是否为 DataTable</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsHashtable">
            <summary>数据类型是否为 Hashtable</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsEnum">
            <summary>数据类型是否为枚举</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsDateTime">
            <summary>数据类型是否为日期时间</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsInt">
            <summary>数据类型是否为整数</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsLong">
            <summary>数据类型是否为长整数</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsString">
            <summary>数据类型是否为字符串</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsBool">
            <summary>数据类型是否为布尔值</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsClass">
            <summary>数据类型是否为一个类</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.IsStringDictionary">
            <summary>数据类型是否为字符串字典</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.ElementType">
            <summary>泛型或数组的元素数据类型</summary>
        </member>
        <member name="F:NetRube.FastJson.JsonAccessor.ConversionType">
            <summary>用于 JSON 处理的数据转换类型</summary>
        </member>
        <member name="T:NetRube.FastJson.JsonParser">
            <summary>JSON 处理器</summary>
        </member>
        <member name="M:NetRube.FastJson.JsonParser.#ctor(System.String,System.Boolean)">
            <summary>初始化一个新 <see cref="T:NetRube.FastJson.JsonParser" /> 实例。</summary>
            <param name="json">JSON 字符串</param>
            <param name="ignorecase">指定是否忽略大小写</param>
        </member>
        <member name="M:NetRube.FastJson.JsonParser.Decode">
            <summary>将当前的 JSON 字符串转换为对象</summary>
            <returns>返回处理后的对象</returns>
        </member>
        <member name="T:NetRube.FastReflection">
            <summary>
            快速反射类
            </summary>
        </member>
        <member name="M:NetRube.FastReflection.FastInvoke(System.Reflection.ConstructorInfo,System.Object[])">
            <summary>通过类的构造器信息创建对象实例</summary>
            <param name="constructorInfo">构造器信息</param>
            <param name="parameters">参数</param>
            <returns>新对象实例</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastInvoke``1(System.Reflection.ConstructorInfo,System.Object[])">
            <summary>通过类的构造器信息创建对象实例</summary>
            <typeparam name="T">返回对象类型</typeparam>
            <param name="constructorInfo">构造器信息</param>
            <param name="parameters">参数</param>
            <returns>新对象实例</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastInvoke(System.Type,System.Object[])">
            <summary>通过对象类型创建对象实例</summary>
            <param name="type">对象类型</param>
            <param name="parameters">参数</param>
            <returns>新对象实例</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastInvoke``1(System.Type,System.Object[])">
            <summary>通过对象类型创建对象实例</summary>
            <typeparam name="T">返回对象类型</typeparam>
            <param name="type">对象类型</param>
            <param name="parameters">参数</param>
            <returns>新对象实例</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastInvoke``1(System.Object[])">
            <summary>创建对象实例</summary>
            <typeparam name="T">返回对象类型</typeparam>
            <param name="parameters">参数</param>
            <returns>新对象实例</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastInvoke(System.String,System.Object[])">
            <summary>通过对象类型名称创建对象实例</summary>
            <param name="typeName">对象类型名称，格式为“类型名, 程序集名”，如：NetRube.Plugin.Mail, NetRube.Plugin</param>
            <param name="parameters">参数</param>
            <returns>新对象实例</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastInvoke``1(System.String,System.Object[])">
            <summary>通过对象类型名称创建对象实例</summary>
            <typeparam name="T">返回对象类型</typeparam>
            <param name="typeName">对象类型名称，格式为“类型名, 程序集名”，如：NetRube.Plugin.Mail, NetRube.Plugin</param>
            <param name="parameters">参数</param>
            <returns>新对象实例</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastInvoke(System.Reflection.MethodInfo,System.Object,System.Object[])">
            <summary>快速调用对象实例的方法</summary>
            <param name="methodInfo">要调用的方法</param>
            <param name="instance">对象实例</param>
            <param name="parameters">参数</param>
            <returns>方法执行的结果</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastInvoke(System.String,System.Object,System.Object[])">
            <summary>通过方法名称快速调用对象实例的方法</summary>
            <param name="methodName">方法名称</param>
            <param name="instance">对象实例</param>
            <param name="parameters">参数</param>
            <returns>方法执行的结果</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastGetValue(System.Reflection.PropertyInfo,System.Object)">
            <summary>快速获取对象属性值</summary>
            <param name="propertyInfo">要获取的对象属性</param>
            <param name="instance">要获取的对象实例</param>
            <returns>属性值</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastGetPropertyValue(System.String,System.Object)">
            <summary>通过属性名称快速获取对象属性值</summary>
            <param name="propertyName">要获取的对象属性名称</param>
            <param name="instance">要获取的对象实例</param>
            <returns>属性值</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastGetValue``1(System.Reflection.PropertyInfo,System.Object)">
            <summary>快速获取对象属性值</summary>
            <typeparam name="T">返回的数据类型</typeparam>
            <param name="propertyInfo">要获取的对象属性</param>
            <param name="instance">要获取的对象实例</param>
            <returns>属性值</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastGetPropertyValue``1(System.String,System.Object)">
            <summary>通过属性名称快速获取对象属性值</summary>
            <typeparam name="T">返回的数据类型</typeparam>
            <param name="propertyName">要获取的对象属性名称</param>
            <param name="instance">要获取的对象实例</param>
            <returns>属性值</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastSetValue(System.Reflection.PropertyInfo,System.Object,System.Object)">
            <summary>快速设置对象属性值</summary>
            <param name="propertyInfo">要设置的对象属性</param>
            <param name="instance">要设置的对象实例</param>
            <param name="value">要设置的值</param>
        </member>
        <member name="M:NetRube.FastReflection.FastSetPropertyValue(System.String,System.Object,System.Object)">
            <summary>通过属性名称快速设置对象属性值</summary>
            <param name="propertyName">要设置的对象属性名称</param>
            <param name="instance">要设置的对象实例</param>
            <param name="value">要设置的值</param>
        </member>
        <member name="M:NetRube.FastReflection.FastGetValue(System.Reflection.FieldInfo,System.Object)">
            <summary>快速获取对象字段值</summary>
            <param name="fieldInfo">要获取的对象字段</param>
            <param name="instance">要获取的对象实例</param>
            <returns>属性值</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastGetFieldValue(System.String,System.Object)">
            <summary>通过字段名称快速获取对象字段值</summary>
            <param name="fieldName">要获取的对象字段名称</param>
            <param name="instance">要获取的对象实例</param>
            <returns>属性值</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastGetValue``1(System.Reflection.FieldInfo,System.Object)">
            <summary>快速获取对象字段值</summary>
            <typeparam name="T">返回的数据类型</typeparam>
            <param name="fieldInfo">要获取的对象字段</param>
            <param name="instance">要获取的对象实例</param>
            <returns>属性值</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastGetFieldValue``1(System.String,System.Object)">
            <summary>通过字段名称快速获取对象字段值</summary>
            <typeparam name="T">返回的数据类型</typeparam>
            <param name="fieldName">要获取的对象字段名称</param>
            <param name="instance">要获取的对象实例</param>
            <returns>属性值</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastSetValue(System.Reflection.FieldInfo,System.Object,System.Object)">
            <summary>快速设置对象字段值</summary>
            <param name="fieldInfo">要设置的对象字段</param>
            <param name="instance">要设置的对象实例</param>
            <param name="value">要设置的值</param>
        </member>
        <member name="M:NetRube.FastReflection.FastSetFieldValue(System.String,System.Object,System.Object)">
            <summary>通过字段名称快速设置对象字段值</summary>
            <param name="fieldName">要设置的对象字段名称</param>
            <param name="instance">要设置的对象实例</param>
            <param name="value">要设置的值</param>
        </member>
        <member name="M:NetRube.FastReflection.FastGetType(System.String)">
            <summary>通过类型的程序集限定名称获取类型</summary>
            <param name="typeName">要获取的类型的程序集限定名称</param>
            <returns>类型</returns>
            <exception cref="T:NetRube.ArgumentNullOrEmptyException">类型的程序集限定名称为 null 或为空</exception>
        </member>
        <member name="M:NetRube.FastReflection.FastGetAccessors(System.Type)">
            <summary>获取类型的访问器集合</summary>
            <param name="type">要获取的类型</param>
            <returns>类型的访问器集合</returns>
        </member>
        <member name="M:NetRube.FastReflection.FastGetAccessors``1">
            <summary>获取类型的访问器集合</summary>
            <typeparam name="T">要获取的类型</typeparam>
            <returns>类型的访问器集合</returns>
        </member>
        <member name="T:NetRube.PagedList`1">
            <summary>分页列表</summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="M:NetRube.PagedList`1.#ctor(System.Collections.Generic.IList{`0},System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>初始化一个新 <see cref="T:NetRube.PagedList`1" /> 实例。</summary>
            <param name="list">列表源</param>
            <param name="pageIndex">当前页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="recordCount">总记录数</param>
            <param name="context">其它相关内容</param>
        </member>
        <member name="P:NetRube.PagedList`1.CurrentPageIndex">
            <summary>获取或设置当前页索引</summary>
            <value>当前页索引</value>
        </member>
        <member name="P:NetRube.PagedList`1.PageSize">
            <summary>获取或设置每页记录数</summary>
            <value>每页记录数</value>
        </member>
        <member name="P:NetRube.PagedList`1.TotalRecordCount">
            <summary>获取或设置总记录数</summary>
            <value>总记录数</value>
        </member>
        <member name="P:NetRube.PagedList`1.TotalPageCount">
            <summary>获取总页数</summary>
            <value>总页数</value>
        </member>
        <member name="P:NetRube.PagedList`1.StartRecordIndex">
            <summary>获取开始记录索引</summary>
            <value>开始记录索引</value>
        </member>
        <member name="P:NetRube.PagedList`1.EndRecordIndex">
            <summary>获取结束记录索引</summary>
            <value>结束记录索引</value>
        </member>
        <member name="P:NetRube.PagedList`1.Context">
            <summary>获取或设置其它相关内容</summary>
            <value>其它相关内容</value>
        </member>
        <member name="T:NetRube.Singleton`1">
            <summary>以单例模式调用 <typeparamref name="T"/></summary>
            <typeparam name="T">要使用单例的类型</typeparam>
        </member>
        <member name="F:NetRube.Singleton`1.Instance">
            <summary><typeparamref name="T"/> 的实例</summary>
        </member>
        <member name="T:NetRube.StartAndEnd`1">
            <summary>开始和结束</summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="P:NetRube.StartAndEnd`1.Start">
            <summary>获取或设置开始值</summary>
            <value>开始值</value>
        </member>
        <member name="P:NetRube.StartAndEnd`1.End">
            <summary>获取或设置结束值</summary>
            <value>结束值</value>
        </member>
        <member name="P:NetRube.StartAndEnd`1.IsEqual">
            <summary>获取一个值，该值指示此实例的开始值与结束值是否相等</summary>
            <value>如果开始值与结束值是否相等，则该值为 <c>true</c>；否则为 <c>false</c>。</value>
        </member>
        <member name="T:NetRube.STR">
            <summary>字符串处理</summary>
        </member>
        <member name="F:NetRube.STR.__SB">
            <summary>内部 StringBuilder 对象</summary>
        </member>
        <member name="M:NetRube.STR.#ctor">
            <summary>初始化一个新 <see cref="T:NetRube.STR" /> 实例。</summary>
        </member>
        <member name="M:NetRube.STR.#ctor(System.Int32)">
            <summary>使用指定的容量初始化新 <see cref="T:NetRube.STR" /> 实例</summary>
            <param name="capacity">此实例的建议起始大小</param>
        </member>
        <member name="M:NetRube.STR.#ctor(System.String)">
            <summary>使用指定的字符串初始化新 <see cref="T:NetRube.STR" /> 实例</summary>
            <param name="value">用于初始化实例值的字符串。如果 value 为 nullNothingnullptrnull 引用（在 Visual Basic 中为 Nothing），则新的实例将包含空字符串（即包含 Empty）</param>
        </member>
        <member name="M:NetRube.STR.#ctor(System.Int32,System.Int32)">
            <summary>初始化新 <see cref="T:NetRube.STR" /> 实例，起始于指定容量并且可增长到指定的最大容量</summary>
            <param name="capacity">此实例的建议起始大小</param>
            <param name="maxCapacity">当前字符串可包含的最大字符数</param>
        </member>
        <member name="M:NetRube.STR.#ctor(System.String,System.Int32)">
            <summary>使用指定的字符串和容量初始化新 <see cref="T:NetRube.STR" /> 实例</summary>
            <param name="value">用于初始化实例值的字符串。如果 value 为 nullNothingnullptrnull 引用（在 Visual Basic 中为 Nothing），则新的实例将包含空字符串（即包含 Empty）</param>
            <param name="capacity">此实例的建议起始大小</param>
        </member>
        <member name="M:NetRube.STR.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>使用指定的子字符串和容量初始化新 <see cref="T:NetRube.STR" /> 实例</summary>
            <param name="value">字符串，包含用于初始化此实例值的子字符串。如果 value 为 nullNothingnullptrnull 引用（在 Visual Basic 中为 Nothing），则新的实例将包含空字符串（即包含 Empty）</param>
            <param name="starIndex">value 中子字符串开始的位置</param>
            <param name="length">子字符串中的字符数</param>
            <param name="capacity">此实例的建议起始大小</param>
        </member>
        <member name="M:NetRube.STR.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>使用指定的字符串集合初始化新 <see cref="T:NetRube.STR" /> 实例</summary>
            <param name="collection">用于初始化的字符串集合</param>
        </member>
        <member name="M:NetRube.STR.#ctor(NetRube.STR)">
            <summary>使用指定的另一个实例初始化新 <see cref="T:NetRube.STR" /> 实例</summary>
            <param name="value">用于初始化实例值的另一个实例</param>
        </member>
        <member name="M:NetRube.STR.#ctor(System.Text.StringBuilder)">
            <summary>使用指定的 StringBuilder 对象初始化新 <see cref="T:NetRube.STR" /> 实例</summary>
            <param name="value">StringBuilder 对象</param>
        </member>
        <member name="P:NetRube.STR.Capacity">
            <summary>获取或设置可包含在当前实例所分配的内存中的最大字符数</summary>
            <value>可包含在当前实例所分配的内存中的最大字符数</value>
        </member>
        <member name="P:NetRube.STR.Item(System.Int32)">
            <summary>获取或设置此实例中指定字符位置处的字符</summary>
            <value><paramref name="index" /> 位置处的 Unicode 字符</value>
            <param name="index">字符的位置</param>
            <returns></returns>
        </member>
        <member name="P:NetRube.STR.Length">
            <summary>获取或设置当前字符串的长度</summary>
            <value>此实例的长度</value>
        </member>
        <member name="P:NetRube.STR.MaxCapacity">
            <summary>获取此实例的最大容量</summary>
            <value>此实例可容纳的最大字符数</value>
        </member>
        <member name="P:NetRube.STR.IsEmpty">
            <summary>获取此实例的内容是否为空</summary>
            <value>如果内容为空，则该值为 <c>true</c>；否则为 <c>false</c>。</value>
        </member>
        <member name="M:NetRube.STR.Append(System.String)">
            <summary>在此实例的结尾追加字符串</summary>
            <param name="value">要追加的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(System.String[])">
            <summary>在此实例的结尾追加字符串集合</summary>
            <param name="value">要追加的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(System.Collections.Generic.IEnumerable{System.String})">
            <summary>在此实例的结尾追加字符串集合</summary>
            <param name="value">要追加的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append``1(``0)">
            <summary>在此实例的结尾追加对象的字符串表示形式</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="value">要追加的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(System.Char)">
            <summary>在此实例的结尾追加指定的 Unicode 字符的字符串表示形式</summary>
            <param name="value">要追加的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(System.Char[])">
            <summary>在此实例的结尾追加指定的 Unicode 字符数组的字符串表示形式</summary>
            <param name="value">要追加的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(System.Char,System.Int32)">
            <summary>在此实例的结尾追加 Unicode 字符的字符串表示形式指定数目的副本</summary>
            <param name="value">要追加的字符</param>
            <param name="repeatCount">追加 value 的次数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(System.Char[],System.Int32,System.Int32)">
            <summary>在此实例的结尾追加指定的 Unicode 字符子数组的字符串表示形式</summary>
            <param name="value">字符数组</param>
            <param name="startIndex">value 内的起始索引</param>
            <param name="charCount">要追加的字符数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(System.String,System.Int32,System.Int32)">
            <summary>在此实例的结尾追加指定子字符串的副本</summary>
            <param name="value">包含要追加的子字符串的 String</param>
            <param name="startIndex">value 中子字符串开始的位置</param>
            <param name="charCount">value 中要追加的字符数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(NetRube.STR)">
            <summary>在此实例的结尾追加另一个实例的字符串表示形式</summary>
            <param name="value">要追加的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(NetRube.STR,System.Int32,System.Int32)">
            <summary>在此实例的结尾追加另一个实例指定子字符串的副本</summary>
            <param name="value">包含要追加的另一个实例</param>
            <param name="startIndex">value 中子字符串开始的位置</param>
            <param name="charCount">value 中要追加的字符数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(System.Text.StringBuilder)">
            <summary>在此实例的结尾追加 StringBuilder 实例的字符串表示形式</summary>
            <param name="value">要追加的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Append(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>在此实例的结尾追加另一个实例指定子字符串的副本</summary>
            <param name="value">包含要追加的另一个实例</param>
            <param name="startIndex">value 中子字符串开始的位置</param>
            <param name="charCount">value 中要追加的字符数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.AppendFormat(System.String,System.Object)">
            <summary>向此实例追加包含零个或更多格式规范的格式化字符串。每个格式规范由相应对象参数的字符串表示形式替换</summary>
            <param name="format">复合格式字符串</param>
            <param name="arg0">要设置格式的对象</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.AppendFormat(System.String,System.Object[])">
            <summary>向此实例追加包含零个或更多格式规范的格式化字符串。每个格式规范由相应对象参数的字符串表示形式替换</summary>
            <param name="format">复合格式字符串</param>
            <param name="args">要设置格式的对象数组</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>向此实例追加包含零个或更多格式规范的设置了格式的字符串。每个格式规范由相应对象参数的字符串表示形式替换</summary>
            <param name="provider">一个 IFormatProvider，它提供区域性特定的格式设置信息</param>
            <param name="format">复合格式字符串</param>
            <param name="args">要设置格式的对象数组</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.AppendFormat(System.String,System.Object,System.Object)">
            <summary>向此实例追加包含零个或更多格式规范的格式化字符串。每个格式规范由相应对象参数的字符串表示形式替换</summary>
            <param name="format">复合格式字符串</param>
            <param name="arg0">要设置格式的第一个对象</param>
            <param name="arg1">要设置格式的第二个对象</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.AppendFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>向此实例追加包含零个或更多格式规范的格式化字符串。每个格式规范由相应对象参数的字符串表示形式替换</summary>
            <param name="format">复合格式字符串</param>
            <param name="arg0">要设置格式的第一个对象</param>
            <param name="arg1">要设置格式的第二个对象</param>
            <param name="arg2">要设置格式的第三个对象</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Replace(System.Char,System.Char)">
            <summary>将此实例中所有的指定字符替换为其他指定字符</summary>
            <param name="oldChar">要替换的字符</param>
            <param name="newChar">替换 oldChar 的字符</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Replace(System.String,System.String)">
            <summary>将此实例中所有指定字符串的匹配项替换为其他指定字符串</summary>
            <param name="oldValue">要替换的字符串</param>
            <param name="newValue">替换 oldValue 的字符串</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Replace(System.Char,System.Char,System.Int32,System.Int32)">
            <summary>将此实例的子字符串中所有指定字符的匹配项替换为其他指定字符</summary>
            <param name="oldChar">要替换的字符</param>
            <param name="newChar">替换 oldChar 的字符</param>
            <param name="startIndex">此实例中子字符串开始的位置</param>
            <param name="count">子字符串的长度</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Replace(System.String,System.String,System.Int32,System.Int32)">
            <summary>将此实例的子字符串中所有指定字符串的匹配项替换为其他指定字符串</summary>
            <param name="oldValue">要替换的字符串</param>
            <param name="newValue">替换 oldValue 的字符串</param>
            <param name="startIndex">此实例中子字符串开始的位置</param>
            <param name="count">子字符串的长度</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert(System.Int32,System.Char)">
            <summary>将指定的 Unicode 字符的字符串表示形式插入到此实例中的指定位置</summary>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">要插入的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert(System.Int32,System.Char[])">
            <summary>将指定的 Unicode 字符数组的字符串表示形式插入到此实例中的指定字符位置</summary>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">要插入的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert(System.Int32,System.String)">
            <summary>将字符串插入到此实例中的指定字符位置</summary>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">要插入的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert(System.Int32,System.String[])">
            <summary>将字符串集合插入到此实例中的指定字符位置</summary>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">要插入的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>将字符串集合插入到此实例中的指定字符位置</summary>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">要插入的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert``1(System.Int32,``0)">
            <summary>将对象的字符串表示形式插入到此实例中的指定字符位置</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">要插入的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert(System.Int32,System.String,System.Int32)">
            <summary>将指定字符串的一个或更多副本插入到此实例中的指定字符位置</summary>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">要插入的字符串</param>
            <param name="count">插入 value 的次数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
            <summary>将指定的 Unicode 字符子数组的字符串表示形式插入到此实例中的指定字符位置</summary>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">字符数组</param>
            <param name="startIndex">value 内的起始索引</param>
            <param name="charCount">要插入的字符数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert(System.Int32,NetRube.STR)">
            <summary>在此实例的结尾追加另一个实例的字符串表示形式</summary>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">要插入的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Insert(System.Int32,System.Text.StringBuilder)">
            <summary>在此实例的结尾追加 StringBuilder 实例的字符串表示形式</summary>
            <param name="index">此实例中开始插入的位置</param>
            <param name="value">要插入的值</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.TrimStart(System.Char[])">
            <summary>移除前导字符</summary>
            <param name="trimChars">要移除的字符，如果不指定将移除空白字符</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.TrimEnd(System.Char[])">
            <summary>移除结尾字符</summary>
            <param name="trimChars">要移除的字符，如果不指定将移除空白字符</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Trim(System.Char[])">
            <summary>移除前导和结尾字符</summary>
            <param name="trimChars">要移除的字符，如果不指定将移除空白字符</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Get(System.Int32)">
            <summary>截取指定位置到结束的内容</summary>
            <param name="startIndex">从 0 开始的位置</param>
            <returns>新字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Get(System.Int32,System.Int32)">
            <summary>截取指定范围内的内容</summary>
            <param name="startIndex">从 0 开始的位置</param>
            <param name="length">要截取的字符数</param>
            <returns>新字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.GetPart(System.Int32,System.Int32)">
            <summary>截取指定范围内的内容</summary>
            <param name="startIndex">从 0 开始的位置</param>
            <param name="endIndex">从 0 开始的结束位置</param>
            <returns>新字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.GetPart(System.Int32)">
            <summary>截取指定位置到结束的内容</summary>
            <param name="startIndex">从 0 开始的位置</param>
            <returns>新字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.GetLeft(System.Int32)">
            <summary>截取左边指定字符数的内容</summary>
            <param name="len">要获取的字符数</param>
            <returns>新字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.GetRight(System.Int32)">
            <summary>截取右边指定字符数的内容</summary>
            <param name="len">要获取的字符数</param>
            <returns>新字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Remove(System.Int32,System.Int32)">
            <summary>删除指定范围的字符</summary>
            <param name="startIndex">从 0 开始的位置</param>
            <param name="length">要移除的字符数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.Remove(System.Int32)">
            <summary>删除指定位置到结束的内容</summary>
            <param name="startIndex">从 0 开始的位置</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.RemovePart(System.Int32,System.Int32)">
            <summary>删除指定范围的字符</summary>
            <param name="startIndex">从 0 开始的位置</param>
            <param name="endIndex">结束位置</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.RemovePart(System.Int32)">
            <summary>删除指定位置到结束的内容</summary>
            <param name="startIndex">从 0 开始的位置</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.RemoveLeft(System.Int32)">
            <summary>删除左边指定的字符数</summary>
            <param name="len">要删除的字符数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.RemoveRight(System.Int32)">
            <summary>删除右边指定的字符数</summary>
            <param name="len">要删除的字符数</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.RemoveLeft(System.String)">
            <summary>删除左边指定的字符串</summary>
            <param name="str">要删除的字符串</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.RemoveRight(System.String)">
            <summary>删除右边指定的字符串</summary>
            <param name="str">要删除的字符串</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.AppendLine">
            <summary>将默认的行终止符追加到当前对象的末尾</summary>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.AppendLine(System.String)">
            <summary>将指定字符串的副本和默认的行终止符追加到当前对象的末尾</summary>
            <param name="value">要追加的字符串</param>
            <returns>此字符串处理实例</returns>
        </member>
        <member name="M:NetRube.STR.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
            <summary>将此实例的指定段中的字符复制到目标 Char 数组的指定段中</summary>
            <param name="sourceIndex">此实例中开始复制字符的位置。索引是从零开始的</param>
            <param name="destination">要将字符复制到的 Char 数组</param>
            <param name="destinationIndex">要将字符复制到的 destination 中的起始位置。索引是从零开始的</param>
            <param name="count">要复制的字符数</param>
        </member>
        <member name="M:NetRube.STR.EnsureCapacity(System.Int32)">
            <summary>确保此实例的容量至少是指定值</summary>
            <param name="capacity">要确保的最小容量</param>
            <returns>此实例的新容量</returns>
        </member>
        <member name="M:NetRube.STR.ToString">
            <summary>返回当前实例的内容</summary>
            <returns>当前实例的内容</returns>
        </member>
        <member name="M:NetRube.STR.ToString(System.Int32,System.Int32)">
            <summary>返回当前实例的内容</summary>
            <param name="startIndex">此实例内子字符串的起始位置</param>
            <param name="length">子字符串的长度</param>
            <returns>当前实例的内容</returns>
        </member>
        <member name="M:NetRube.STR.op_Implicit(System.String)~NetRube.STR">
            <summary>将 <see cref="T:System.String" /> 隐式转换成 <see cref="T:NetRube.STR" /></summary>
            <param name="value">要转换的内容</param>
            <returns>新 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Boolean)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Byte)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Char)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Char[])">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Decimal)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Double)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Int16)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Int32)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Int64)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.SByte)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Single)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.String)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.String[])">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Collections.Generic.IEnumerable{System.String})">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.UInt16)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.UInt32)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.UInt64)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,NetRube.STR)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Text.StringBuilder)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(NetRube.STR,System.Object)">
            <summary>添加</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要添加的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.String,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.String[],NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Collections.Generic.IEnumerable{System.String},NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Char,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Boolean,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Byte,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Char[],NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Decimal,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Double,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Int16,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Int32,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Int64,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.SByte,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Single,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.UInt16,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.UInt32,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.UInt64,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Text.StringBuilder,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Addition(System.Object,NetRube.STR)">
            <summary>插入</summary>
            <param name="value">要插入的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Subtraction(NetRube.STR,System.String)">
            <summary>删除</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要删除的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Subtraction(NetRube.STR,System.Text.StringBuilder)">
            <summary>删除</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要删除的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Subtraction(NetRube.STR,NetRube.STR)">
            <summary>删除</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要删除的值</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Subtraction(System.String,NetRube.STR)">
            <summary>删除</summary>
            <param name="value">要删除的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Subtraction(System.Text.StringBuilder,NetRube.STR)">
            <summary>删除</summary>
            <param name="value">要删除的值</param>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <returns>此 <see cref="T:NetRube.STR" /> 实例</returns>
        </member>
        <member name="M:NetRube.STR.op_Equality(NetRube.STR,System.String)">
            <summary>比较此 <see cref="T:NetRube.STR" /> 实例和指定的对象是否表示相同的值</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要比较的值</param>
            <returns>指示是否表示相同的值</returns>
        </member>
        <member name="M:NetRube.STR.op_Equality(NetRube.STR,System.Text.StringBuilder)">
            <summary>比较此 <see cref="T:NetRube.STR" /> 实例和指定的对象是否表示相同的值</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要比较的值</param>
            <returns>指示是否表示相同的值</returns>
        </member>
        <member name="M:NetRube.STR.op_Equality(NetRube.STR,NetRube.STR)">
            <summary>比较此 <see cref="T:NetRube.STR" /> 实例和指定的对象是否表示相同的值</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要比较的值</param>
            <returns>指示是否表示相同的值</returns>
        </member>
        <member name="M:NetRube.STR.op_Inequality(NetRube.STR,NetRube.STR)">
            <summary>比较此 <see cref="T:NetRube.STR" /> 实例和指定的对象是否表示相同的值</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要比较的值</param>
            <returns>指示是否表示相同的值</returns>
        </member>
        <member name="M:NetRube.STR.op_Inequality(NetRube.STR,System.String)">
            <summary>比较此 <see cref="T:NetRube.STR" /> 实例和指定的对象是否表示相同的值</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要比较的值</param>
            <returns>指示是否表示相同的值</returns>
        </member>
        <member name="M:NetRube.STR.op_Inequality(NetRube.STR,System.Text.StringBuilder)">
            <summary>比较此 <see cref="T:NetRube.STR" /> 实例和指定的对象是否表示相同的值</summary>
            <param name="self">此 <see cref="T:NetRube.STR" /> 实例</param>
            <param name="value">要比较的值</param>
            <returns>指示是否表示相同的值</returns>
        </member>
        <member name="M:NetRube.STR.GetHashCode">
            <summary>返回此实例的哈希代码。</summary>
            <returns>此实例的 32 位有符号整数哈希代码，适用于如哈希表的哈希算法和数据结构的使用。</returns>
        </member>
        <member name="M:NetRube.STR.Equals(NetRube.STR)">
            <summary>确定指定的对象是否等于当前实例。</summary>
            <param name="obj">要与当前实例进行比较的对象。</param>
            <returns>如果指定的对象等于当前实例，则为 <c>true</c>；否则为 <c>false</c>。</returns>
        </member>
        <member name="M:NetRube.STR.Equals(System.Text.StringBuilder)">
            <summary>确定指定的对象是否等于当前实例。</summary>
            <param name="obj">要与当前实例进行比较的对象。</param>
            <returns>如果指定的对象等于当前实例，则为 <c>true</c>；否则为 <c>false</c>。</returns>
        </member>
        <member name="M:NetRube.STR.Equals(System.Object)">
            <summary>确定指定的对象是否等于当前实例。</summary>
            <param name="obj">要与当前实例进行比较的对象。</param>
            <returns>如果指定的对象等于当前实例，则为 <c>true</c>；否则为 <c>false</c>。</returns>
        </member>
        <member name="M:NetRube.STR.Concat(System.String[])">
            <summary>连接字符串数组元素</summary>
            <param name="str">要连接的字符串</param>
            <returns>连接后的字符串</returns>
        </member>
        <member name="T:NetRube.TrackingEntity`1">
            <summary>跟踪实体对象</summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="P:NetRube.TrackingEntity`1.OriginalEntity">
            <summary>获取原实体</summary>
            <value>原实体</value>
        </member>
        <member name="P:NetRube.TrackingEntity`1.TrackedEntity">
            <summary>获取跟踪后的实体</summary>
            <value>跟踪后的实体</value>
        </member>
        <member name="M:NetRube.TrackingEntity`1.#ctor(`0,NetRube.TrackingEntity{`0}.Parameters)">
            <summary>初始化一个新 <see cref="T:NetRube.TrackingEntity`1" /> 实例。</summary>
            <param name="original">要被跟踪的实体</param>
            <param name="param">参数</param>
        </member>
        <member name="M:NetRube.TrackingEntity`1.Start(`0,NetRube.TrackingEntity{`0}.Parameters)">
            <summary>开始跟踪</summary>
            <param name="original">要跟踪的实体</param>
            <param name="param">参数</param>
            <returns>快照</returns>
        </member>
        <member name="M:NetRube.TrackingEntity`1.GetChanges(`0,`0,NetRube.TrackingEntity{`0}.Parameters)">
            <summary>获取被更改属性列表</summary>
            <param name="entity">要跟踪的实体</param>
            <param name="refer">用于参照的实体</param>
            <param name="param">参数</param>
            <returns>被更改的集合</returns>
        </member>
        <member name="M:NetRube.TrackingEntity`1.GetChanges">
            <summary>获取被更改属性列表</summary>
            <returns>被更改的集合</returns>
        </member>
        <member name="M:NetRube.TrackingEntity`1.GetChangeNames">
            <summary>获取被更改属性名称列表</summary>
            <returns>被更改的属性名称集合</returns>
        </member>
        <member name="T:NetRube.TrackingEntity`1.Change">
            <summary>更改内容</summary>
        </member>
        <member name="P:NetRube.TrackingEntity`1.Change.Name">
            <summary>获取或设置属性名</summary>
            <value>属性名</value>
        </member>
        <member name="P:NetRube.TrackingEntity`1.Change.OldValue">
            <summary>获取或设置原始值</summary>
            <value>原始值</value>
        </member>
        <member name="P:NetRube.TrackingEntity`1.Change.NewValue">
            <summary>获取或设置新值</summary>
            <value>新值</value>
        </member>
        <member name="T:NetRube.TrackingEntity`1.Parameters">
            <summary>参数</summary>
        </member>
        <member name="F:NetRube.TrackingEntity`1.Parameters.IgnoreVirtual">
            <summary>
            是否忽略虚属性，默认为是。
            </summary>
        </member>
        <member name="T:NetRube.Utils">
            <summary>NetRube 实用操作类库</summary>
        </member>
        <member name="M:NetRube.Utils.EmptyArray``1">
            <summary>返回空数组</summary>
            <typeparam name="T">数据类型</typeparam>
            <returns>一个长度为 0 的空数组</returns>
        </member>
        <member name="M:NetRube.Utils.GetArray``1(``0[])">
            <summary>以传入的参数包装成数组</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="value">要包装的参数</param>
            <returns>以传入的参数组成的数组</returns>
        </member>
        <member name="M:NetRube.Utils.Concat_``1(``0,``0[])">
            <summary>将传入的参数合并成数组</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="item">要合并的对象</param>
            <param name="value">要合并的集合</param>
            <returns>合并成的数组</returns>
        </member>
        <member name="M:NetRube.Utils.Concat_``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>将传入的参数合并成数组</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要合并的集合</param>
            <param name="item">要合并的对象</param>
            <returns>合并成的数组</returns>
        </member>
        <member name="M:NetRube.Utils.NewArray``1(System.Int32)">
            <summary>以指定的大小创建新数组</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="size">数组大小</param>
            <returns>一个指定大小的空数组</returns>
        </member>
        <member name="M:NetRube.Utils.SetSize_``1(``0[],System.Int32)">
            <summary>设置数组大小</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要设置的数组</param>
            <param name="size">新数组的大小</param>
            <returns>一个指定大小的新数组</returns>
        </member>
        <member name="M:NetRube.Utils.SetSize_``1(``0[],System.Int32,``0)">
            <summary>设置数组大小</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要设置的数组</param>
            <param name="size">新数组的大小</param>
            <param name="defval">当新数组大小大于源数组时要添加的默认值</param>
            <returns>一个指定大小的新数组</returns>
        </member>
        <member name="M:NetRube.Utils.Copy_``1(System.Collections.Generic.List{``0})">
            <summary>复制集合。复制后的集合元素会受原元素的修改影响</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要复制的集合</param>
            <returns>新集合</returns>
        </member>
        <member name="M:NetRube.Utils.Copy_``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>复制集合。复制后的集合元素会受原元素的修改影响</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要复制的集合</param>
            <returns>新集合</returns>
        </member>
        <member name="M:NetRube.Utils.Add_``1(System.Collections.Generic.List{``0},``0)">
            <summary>将非 null 对象添加到集合</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">原集合</param>
            <param name="item">要添加的对象</param>
            <returns>新集合</returns>
        </member>
        <member name="M:NetRube.Utils.Add_``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>将非 null 对象添加到集合</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">原集合</param>
            <param name="item">要添加的对象</param>
            <returns>新集合</returns>
        </member>
        <member name="M:NetRube.Utils.Join_``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>串连数组为字符串</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要串连的数组</param>
            <param name="separator">分隔符</param>
            <returns>串连后的新字符串</returns>
        </member>
        <member name="M:NetRube.Utils.Join_(System.String[],System.String)">
            <summary>串连数组为字符串</summary>
            <param name="source">要串连的数组</param>
            <param name="separator">分隔符</param>
            <returns>串连后的新字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ForEach_``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>对集合中的每个元素执行指定操作</summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">集合</param>
            <param name="action">要对集合中的每个元素执行的委托</param>
        </member>
        <member name="M:NetRube.Utils.ForEach_``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>对集合中的每个元素执行指定操作</summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">集合</param>
            <param name="action">要对集合中的每个元素执行的委托</param>
        </member>
        <member name="M:NetRube.Utils.IndexOf_``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>检索指定的元素在集合中第一次出现的索引位置，如果没找到则返回 -1</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">集合</param>
            <param name="value">要检索的元素</param>
            <param name="comparer">相等比较器</param>
            <returns>元素在集合中第一次出现的索引位置，如果没找到则返回 -1</returns>
        </member>
        <member name="M:NetRube.Utils.GetNext_``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>获取元素位于集合中的下一个元素</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">集合</param>
            <param name="item">要检索的元素</param>
            <param name="comparer">相等比较器</param>
            <returns>下一个元素</returns>
        </member>
        <member name="M:NetRube.Utils.GetPrevious_``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>获取元素位于集合中的上一个元素</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">集合</param>
            <param name="item">要检索的元素</param>
            <param name="comparer">相等比较器</param>
            <returns>上一个元素</returns>
        </member>
        <member name="M:NetRube.Utils.MaxOrDefault_(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>返回序列中的最大值或默认值</summary>
            <param name="source">集合</param>
            <returns>序列中的最大值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.MaxOrDefault_``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>返回序列中的最大值或默认值</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">集合</param>
            <returns>序列中的最大值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.MaxOrDefault_``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>返回序列中的最大值或默认值</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">集合</param>
            <param name="selector">应用于每个元素的转换函数</param>
            <returns>序列中的最大值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.MaxOrDefault_``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>返回序列中的最大值或默认值</summary>
            <typeparam name="TSource">集合中元素的数据类型</typeparam>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="source">集合</param>
            <param name="selector">应用于每个元素的转换函数</param>
            <returns>序列中的最大值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.MinOrDefault_(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>返回序列中的最小值或默认值</summary>
            <param name="source">集合</param>
            <returns>序列中的最小值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.MinOrDefault_``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>返回序列中的最小值或默认值</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">集合</param>
            <returns>序列中的最小值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.MinOrDefault_``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>返回序列中的最小值或默认值</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">集合</param>
            <param name="selector">应用于每个元素的转换函数</param>
            <returns>序列中的最小值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.MinOrDefault_``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>返回序列中的最小值或默认值</summary>
            <typeparam name="TSource">集合中元素的数据类型</typeparam>
            <typeparam name="TResult">返回的数据类型</typeparam>
            <param name="source">集合</param>
            <param name="selector">应用于每个元素的转换函数</param>
            <returns>序列中的最小值或默认值</returns>
        </member>
        <member name="F:NetRube.Utils.WhitespaceChars">
            <summary>空白字符集</summary>
        </member>
        <member name="M:NetRube.Utils.IsAscii_(System.Char)">
            <summary>验证字符是否属于 ASCII 字符(0-127)</summary>
            <param name="c">要验证的字符</param>
            <returns>指示是否属于 ASCII 字符(0-127)</returns>
        </member>
        <member name="M:NetRube.Utils.IsLatin_(System.Char)">
            <summary>验证字符是否属于拉丁字符(0-255)</summary>
            <param name="c">要验证的字符</param>
            <returns>指示是否属于拉丁字符(0-255)</returns>
        </member>
        <member name="M:NetRube.Utils.IsWhiteSpace_(System.Char)">
            <summary>验证字符是否属于空白字符</summary>
            <param name="c">要验证的字符</param>
            <returns>指示是否属于空白字符</returns>
        </member>
        <member name="M:NetRube.Utils.IsHex_(System.Char)">
            <summary>验证字符是否属于十六进制字符</summary>
            <param name="c">要验证的字符</param>
            <returns>指示是否属于十六进制字符</returns>
        </member>
        <member name="M:NetRube.Utils.Contains_``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>验证集合中是否包含特定值</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="array">要验证的集合</param>
            <param name="value">用于验证的值</param>
            <returns>指示集合中是否包含特定值</returns>
        </member>
        <member name="M:NetRube.Utils.Contains_``1(``0[],``0)">
            <summary>验证数组中是否包含特定值</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="array">要验证的数组</param>
            <param name="value">用于验证的值</param>
            <returns>指示数组中是否包含特定值</returns>
        </member>
        <member name="M:NetRube.Utils.Contains_(System.String[],System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>验证数组中是否包含特定字符串</summary>
            <param name="strArray">要比较的字符串数组</param>
            <param name="value">要比较的字符串</param>
            <param name="ignoreCase">是否区分大小写</param>
            <param name="full">是否完整匹配</param>
            <param name="atArray">非完整匹配时，true 为验证数组中的字符串是否包含要匹配的字符串，false 为验证要匹配的字符串是否包含数组里的字符串</param>
            <returns>指示数组中是否包含特定字符串</returns>
        </member>
        <member name="M:NetRube.Utils.In_``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>验证对象是否存在于集合中</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要验证的对象</param>
            <param name="array">用于验证的集合</param>
            <returns>指示对象是否存在于集合中</returns>
        </member>
        <member name="M:NetRube.Utils.In_``1(``0,``0[])">
            <summary>验证对象是否存在于集合中</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要验证的对象</param>
            <param name="array">用于验证的集合</param>
            <returns>指示对象是否存在于集合中</returns>
        </member>
        <member name="M:NetRube.Utils.In_(System.String,System.Boolean,System.Boolean,System.Boolean,System.String[])">
            <summary>验证字符串是否跟数组中的字符串匹配</summary>
            <param name="str">要比较的字符串</param>
            <param name="ignoreCase">是否区分大小写</param>
            <param name="full">是否完整匹配</param>
            <param name="atArray">非完整匹配时，true 为验证数组中的字符串是否包含要匹配的字符串，false 为验证要匹配的字符串是否包含数组里的字符串</param>
            <param name="strArray">要比较的字符串数组</param>
            <returns>指示字符串是否跟数组中的字符串匹配</returns>
            <remarks>
            非完整匹配时，atArray 为 true 时验证数组中的字符串是否包含要匹配的字符串，为 false 时验证要匹配的字符串是否包含数组里的字符串
            </remarks>
        </member>
        <member name="M:NetRube.Utils.In_(System.String,System.String,System.String,System.Boolean)">
            <summary>验证字符串是否跟数组中的字符串匹配</summary>
            <param name="str">要比较的字符串</param>
            <param name="list">要比较的字符串列表</param>
            <param name="split">列表分隔符</param>
            <param name="ignoreCase">是否区分大小写</param>
            <returns>指示字符串是否跟数组中的字符串匹配</returns>
            <remarks>默认的 list 以半角逗号（,）拆分；默认忽略大小写。</remarks>
        </member>
        <member name="M:NetRube.Utils.IsNullOrEmpty_(System.String)">
            <summary>验证字符串是否为 null 或为空</summary>
            <param name="source">要验证的字符串</param>
            <returns>指示字符串是否为 null 或为空</returns>
        </member>
        <member name="M:NetRube.Utils.IsNullOrWhiteSpace_(System.String)">
            <summary>验证字符串是否为 null 或为空白字符串</summary>
            <param name="source">要验证的字符串</param>
            <returns>指示字符串是否为 null 或为空白字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsNull``1(``0)">
            <summary>验证对象是否为 null</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要验证的对象</param>
            <returns>指示对象是否为 null</returns>
        </member>
        <member name="M:NetRube.Utils.IsEmpty_(System.String)">
            <summary>验证字符串是否为空</summary>
            <param name="source">要验证的字符串</param>
            <returns>指示字符串是否为空</returns>
        </member>
        <member name="M:NetRube.Utils.IsEmpty_(System.Guid)">
            <summary>验证 GUID 是否为空</summary>
            <param name="guid">要验证的 GUID</param>
            <returns>指示 GUID 是否为空</returns>
        </member>
        <member name="M:NetRube.Utils.IsNullOrEmpty_(System.Guid)">
            <summary>验证 GUID 是否为 null 或为空</summary>
            <param name="guid">要验证的 GUID</param>
            <returns>指示 GUID 是否为 null 或为空</returns>
        </member>
        <member name="M:NetRube.Utils.IsNullOrEmpty_(System.Collections.IEnumerable)">
            <summary>验证集合是否为 null 或为空</summary>
            <param name="source">要验证的集合</param>
            <returns>指示集合是否为 null 或为空</returns>
        </member>
        <member name="M:NetRube.Utils.IsNullOrEmpty_``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>验证集合是否为 null 或为空</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要验证的集合</param>
            <returns>指示集合是否为 null 或为空</returns>
        </member>
        <member name="M:NetRube.Utils.IsNullOrEmpty``1(``0[])">
            <summary>验证数组是否为 null 或为空</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要验证的数组</param>
            <returns>指示数组是否为 null 或为空</returns>
        </member>
        <member name="M:NetRube.Utils.IsNullOrEmpty_``1(NetRube.StartAndEnd{``0},``0)">
            <summary>验证对象是否为 null 或为空</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">要验证的对象</param>
            <param name="defval">默认值</param>
            <returns>指示对象是否为 null 或为空</returns>
        </member>
        <member name="M:NetRube.Utils.IsDBNull_``1(``0)">
            <summary>验证对象是否为数据库字段 null 值</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="value">要验证的对象</param>
            <returns>指示对象是否为数据库字段 null 值</returns>
        </member>
        <member name="M:NetRube.Utils.IsNullOrDBNull_``1(``0)">
            <summary>验证对象是否为 null 或数据库字段 null 值</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="value">要验证的对象</param>
            <returns>指示对象是否为 null 或数据库字段 null 值</returns>
        </member>
        <member name="M:NetRube.Utils.IsFirstItem_``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>检测元素项是否是集合中的第一项</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">集合</param>
            <param name="item">要检测的元素项</param>
            <param name="comparer">相等比较器</param>
            <returns>指示是否为集合中的第一项</returns>
        </member>
        <member name="M:NetRube.Utils.IsLastItem_``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>检测元素项是否是集合中的最后项</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">集合</param>
            <param name="item">要检测的元素项</param>
            <param name="comparer">相等比较器</param>
            <returns>指示是否为集合中的最后项</returns>
        </member>
        <member name="M:NetRube.Utils.IsStruct_(System.Type)">
            <summary>验证是否为结构数据</summary>
            <param name="type">要验证的类型</param>
            <returns>指示是否为结构数据</returns>
        </member>
        <member name="M:NetRube.Utils.IsStruct_``1(``0)">
            <summary>验证是否为结构数据</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="value">要验证的对象</param>
            <returns>指示是否为结构数据</returns>
        </member>
        <member name="M:NetRube.Utils.IsStruct_(System.Object)">
            <summary>
            验证是否为结构数据
            </summary>
            <param name="value">要验证的对象</param>
            <returns>指示是否为结构数据</returns>
        </member>
        <member name="M:NetRube.Utils.IsValue_``1(``0)">
            <summary>
            验证对象是否为值类型
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="value">要验证的对象</param>
            <returns>指示对象是否为值类型</returns>
        </member>
        <member name="M:NetRube.Utils.IsNumber_``1(``0)">
            <summary>
            验证是否为数字（sbyte、byte、short、ushort、int、uint、long、ulong、float、double、decimal）
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="n">要验证的对象</param>
            <returns>指示是否为数字</returns>
        </member>
        <member name="M:NetRube.Utils.IsInt_``1(``0)">
            <summary>验证是否为整数（sbyte、byte、short、ushort、int、uint、long、ulong）</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="n">要验证的对象</param>
            <returns>指示是否为整数</returns>
        </member>
        <member name="M:NetRube.Utils.IsFloat_``1(``0)">
            <summary>验证是否为浮点数（float、double、decimal）</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="n">要验证的对象</param>
            <returns>指示是否为浮点数</returns>
        </member>
        <member name="M:NetRube.Utils.IsVirtual_(System.Reflection.PropertyInfo)">
            <summary>验证是否为虚属性</summary>
            <param name="property">属性信息</param>
            <returns>指示是否为虚属性</returns>
        </member>
        <member name="M:NetRube.Utils.IsNullable_(System.Type)">
            <summary>验证是否为可 null 类型</summary>
            <param name="type">要验证的类型</param>
            <returns>指示是否为可 null 类型</returns>
        </member>
        <member name="M:NetRube.Utils.IsNullable_``1(``0)">
            <summary>验证是否为可 null 类型</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="value">要验证的对象</param>
            <returns>指示是否为可 null 类型</returns>
        </member>
        <member name="M:NetRube.Utils.ToBool_(System.Char)">
            <summary>将不为 '0' 的字符转换为 true</summary>
            <param name="c">要转换的字符，'0' 为 false，其余为 true</param>
            <returns>'0' 为 false，其余为 true</returns>
        </member>
        <member name="M:NetRube.Utils.ToBool_(System.String)">
            <summary>将不为空值、null 值、"false"字符串的内容转换为 true</summary>
            <param name="str">要转换的字符串，空值、null 值、"false" 为 false，其余为 true</param>
            <returns>空值、null 值、"false" 为 false，其余为 true</returns>
        </member>
        <member name="M:NetRube.Utils.ToBool_``1(``0)">
            <summary>将大于 0 的数字或不为空值、null 值、"false"字符串的内容转换为 true</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <returns>大于 0 的数字或不为空值、null 值、"false"字符串的内容转换为 true</returns>
        </member>
        <member name="M:NetRube.Utils.ToChar_(System.Boolean)">
            <summary>转换为相应的字符</summary>
            <param name="b">要转换的布尔值，true 为 1，false 为 0</param>
            <returns>true 为 1，false 为 0</returns>
        </member>
        <member name="M:NetRube.Utils.ToChar_(System.String,System.Char)">
            <summary>转换为相应的字符</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>字符串的第一个字符或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToChar_``1(``0,System.Char)">
            <summary>转换为相应的字符</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的字符或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToCharOrNull_(System.String)">
            <summary>转换为相应的字符，转换不成功时返回 null</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的字符或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToCharOrNull_``1(``0)">
            <summary>转换为相应的字符，转换不成功时返回 null</summary>
            <typeparam name="T"></typeparam>
            <param name="obj">要转换的对象</param>
            <returns>相应的字符或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToByte_(System.String,System.Byte)">
            <summary>转换为相应的整数</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的整数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToByte_``1(``0,System.Byte)">
            <summary>转换为相应的整数</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的整数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToByteOrNull_(System.String)">
            <summary>转换为相应的整数，转换不成功时返回 null</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的整数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToByteOrNull_``1(``0)">
            <summary>转换为相应的整数，转换不成功时返回 null</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <returns>相应的整数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToInt_(System.String,System.Int32)">
            <summary>转换为相应的整数</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的整数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToInt_``1(``0,System.Int32)">
            <summary>转换为相应的整数</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的整数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToIntOrNull_(System.String)">
            <summary>转换为相应的整数，转换不成功时返回 null</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的整数，转换不成功时返回 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToIntOrNull_``1(``0)">
            <summary>转换为相应的整数或 null</summary>
            <typeparam name="T"></typeparam>
            <param name="obj">要转换的字符串</param>
            <returns>相应的整数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToShort_(System.String,System.Int16)">
            <summary>转换为相应的整数</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的整数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToShort_``1(``0,System.Int16)">
            <summary>转换为相应的整数</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的整数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToShortOrNull_(System.String)">
            <summary>转换为相应的整数，转换不成功时返回 null</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的整数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToShortOrNull_``1(``0)">
            <summary>转换为相应的整数，转换不成功时返回 null</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <returns>相应的整数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToLong_(System.String,System.Int64)">
            <summary>转换为相应的整数</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的整数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToLong_``1(``0,System.Int64)">
            <summary>转换为相应的整数</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的整数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToLongOrNull_(System.String)">
            <summary>转换为相应的整数，转换不成功时返回 null</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的整数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToLongOrNull_``1(``0)">
            <summary>转换为相应的整数，转换不成功时返回 null</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <returns>相应的整数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToFloat_(System.String,System.Single)">
            <summary>转换为相应的单精度浮点数</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的单精度浮点数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToFloat_``1(``0,System.Single)">
            <summary>转换为相应的单精度浮点数</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的单精度浮点数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToFloatOrNull_(System.String)">
            <summary>转换为相应的单精度浮点数，转换不成功时返回 null</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的单精度浮点数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToFloatOrNull_``1(``0)">
            <summary>转换为相应的单精度浮点数，转换不成功时返回 null</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <returns>相应的单精度浮点数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToDouble_(System.String,System.Double)">
            <summary>转换为相应的双精度浮点数</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的双精度浮点数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToDouble_``1(``0,System.Double)">
            <summary>转换为相应的双精度浮点数</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的双精度浮点数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToDoubleOrNull_(System.String)">
            <summary>转换为相应的双精度浮点数，转换不成功时返回 null</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的双精度浮点数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToDoubleOrNull_``1(``0)">
            <summary>转换为相应的双精度浮点数，转换不成功时返回 null</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <returns>相应的双精度浮点数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToDecimal_(System.String,System.Decimal)">
            <summary>转换高精度的十进制数（一般用于货币）</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的十进制数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToDecimal_``1(``0,System.Decimal)">
            <summary>转换高精度的十进制数（一般用于货币）</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的十进制数或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToDecimalOrNull_(System.String)">
            <summary>转换高精度的十进制数（一般用于货币），转换不成功时返回 null</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的十进制数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToDecimalOrNull_``1(``0)">
            <summary>转换高精度的十进制数（一般用于货币），转换不成功时返回 null</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <returns>相应的十进制数或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToEnum_``1(System.String,``0)">
            <summary>转换为相应的枚举值</summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的枚举值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToEnum_(System.String,System.Type)">
            <summary>转换为相应的枚举值</summary>
            <param name="str">要转换的字符串</param>
            <param name="type">枚举类型</param>
            <returns>相应的枚举值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToEnum_``1(System.Object,``0)">
            <summary>转换为相应的枚举值</summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="num">要转换的数字</param>
            <param name="defval">转换不成功时的默认值</param>
            <returns>相应的枚举值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToEnumOrNull_``1(System.String)">
            <summary>转换为相应的枚举值</summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="str">要转换的字符串</param>
            <returns>相应的枚举值或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToEnumOrNull_(System.String,System.Type)">
            <summary>转换为相应的枚举值</summary>
            <param name="str">要转换的字符串</param>
            <param name="type">枚举类型</param>
            <returns>相应的枚举值或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToEnumOrNull_``1(System.Object)">
            <summary>转换为相应的枚举值</summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="num">要转换的数字</param>
            <returns>相应的枚举值或 null</returns>
        </member>
        <member name="M:NetRube.Utils.ToString_(System.Enum)">
            <summary>转换为相应的枚举值名称</summary>
            <param name="e">要转换的枚举值</param>
            <returns>枚举值名称</returns>
        </member>
        <member name="M:NetRube.Utils.ToString_(System.Guid)">
            <summary>转换为不含分隔符的 GUID 字符串</summary>
            <param name="g">要转换的 GUID</param>
            <returns>不含分隔符的 GUID 字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToString_(System.Boolean)">
            <summary>将 true 转换为 "1"，false 转换为 "0"</summary>
            <param name="b">要转换的布尔值，true 为 "1"，false 为 "0"</param>
            <returns>true 为 "1"，false 为 "0"</returns>
        </member>
        <member name="M:NetRube.Utils.ToString_(System.Nullable{System.Boolean})">
            <summary>将 true 转换为 "1"，false 转换为 "0"</summary>
            <param name="b">要转换的布尔值，true 为 "1"，false 为 "0"，为 null 时返回空字符串</param>
            <returns>true 为 "1"，false 为 "0"，为 null 时返回空字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToString_(System.DateTime)">
            <summary>转换为 yyyy-MM-dd HH:mm:ss 格式的字符串</summary>
            <param name="time">要转换的日期</param>
            <returns>yyyy-MM-dd HH:mm:ss 格式的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToString_(System.Nullable{System.DateTime})">
            <summary>转换为 yyyy-MM-dd HH:mm:ss 格式的字符串</summary>
            <param name="time">要转换的日期，为 null 时返回空字符串</param>
            <returns>yyyy-MM-dd HH:mm:ss 格式或空字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToString_(System.TimeSpan)">
            <summary>转换成对应的字符串格式（x 天 xx 小时 xx 分 xx 秒 xxx 毫秒）</summary>
            <param name="ts">时间间隔</param>
            <returns>“x 天 xx 小时 xx 分 xx 秒 xxx 毫秒”格式的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToString_(System.Nullable{System.TimeSpan})">
            <summary>转换成对应的字符串格式（x 天 xx 小时 xx 分 xx 秒 xxx 毫秒）</summary>
            <param name="ts">时间间隔，为 null 时返回空字符串</param>
            <returns>“x 天 xx 小时 xx 分 xx 秒 xxx 毫秒”格式或空字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToDate_(System.String,System.DateTime)">
            <summary>转换为相应的日期</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认日期</param>
            <returns>相应的日期或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToDate_(System.String)">
            <summary>转换为相应的日期</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的日期</returns>
        </member>
        <member name="M:NetRube.Utils.ToDate_(System.String,System.DateTime,System.String)">
            <summary>以指定格式转换为相应的日期</summary>
            <param name="str">要转换的字符串</param>
            <param name="defval">转换不成功时的默认日期</param>
            <param name="format">日期格式（如：yyyy年MM月dd日 HH时mm分ss秒），如果格式中任一部分跟要转换的字符串不一致，都将导致转换失败而返回默认日期</param>
            <returns>相应的日期或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToDate_(System.String,System.String)">
            <summary>以指定格式转换为相应的日期</summary>
            <param name="str">要转换的字符串</param>
            <param name="format">日期格式（如：yyyy年MM月dd日 HH时mm分ss秒），如果格式中任一部分跟要转换的字符串不一致，都将导致转换失败而返回默认日期</param>
            <returns>相应的日期</returns>
        </member>
        <member name="M:NetRube.Utils.ToDate_(System.Int64,System.DateTime,System.DateTimeKind)">
            <summary>将以100纳（毫微）秒表示的日期转换为相应的日期</summary>
            <param name="num">要转换的数字</param>
            <param name="defval">转换不成功时的默认日期</param>
            <param name="kind">指示此数字是指定了本地时间、协调世界时 (UTC)，还是两者皆未指定。</param>
            <returns>相应的日期或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToDate_(System.Int64,System.DateTimeKind)">
            <summary>将以100纳（毫微）秒表示的日期转换为相应的日期</summary>
            <param name="num">要转换的数字</param>
            <param name="kind">指示此数字是指定了本地时间、协调世界时 (UTC)，还是两者皆未指定。</param>
            <returns>相应的日期或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToDate_``1(``0,System.DateTime,System.String)">
            <summary>转换为相应的日期</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="defval">转换不成功时的默认日期</param>
            <param name="format">如果 obj 为字符串时的日期格式（如：yyyy年MM月dd日 HH时mm分ss秒），如果格式中任一部分跟要转换的字符串不一致，都将导致转换失败而返回默认日期</param>
            <returns>相应的日期或默认值</returns>
        </member>
        <member name="M:NetRube.Utils.ToDate_``1(``0,System.String)">
            <summary>转换为相应的日期</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <param name="format">如果 obj 为字符串时的日期格式（如：yyyy年MM月dd日 HH时mm分ss秒），如果格式中任一部分跟要转换的字符串不一致，都将导致转换失败而返回默认日期</param>
            <returns>相应的日期</returns>
        </member>
        <member name="M:NetRube.Utils.ToGuid_(System.String)">
            <summary>转换为相应的 GUID</summary>
            <param name="str">要转换的字符串</param>
            <returns>相应的 GUID</returns>
        </member>
        <member name="M:NetRube.Utils.ToGuid_(System.Guid)">
            <summary>转换为相应的 GUID</summary>
            <param name="guid">要转换的 GUID</param>
            <returns>相应的 GUID</returns>
        </member>
        <member name="M:NetRube.Utils.ToGuid_``1(``0)">
            <summary>转换为相应的 GUID</summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="obj">要转换的对象</param>
            <returns>相应的 GUID</returns>
        </member>
        <member name="M:NetRube.Utils.ToJson_(System.Object)">
            <summary>将对象转换成 JSON 字符串</summary>
            <param name="obj">要转换的对象</param>
            <returns>转换后的 JSON 字符串</returns>
        </member>
        <member name="M:NetRube.Utils.AddDirectory(System.String)">
            <summary>创建目录</summary>
            <param name="path">要创建的目录及路径</param>
            <returns>创建的目录路径</returns>
        </member>
        <member name="M:NetRube.Utils.Rename_(System.IO.FileInfo,System.String)">
            <summary>重命名</summary>
            <param name="fileInfo">要重命名的文件实例</param>
            <param name="newName">新文件名</param>
            <returns>返回重命名后的完整文件路径</returns>
        </member>
        <member name="M:NetRube.Utils.RenameFile(System.String,System.String)">
            <summary>重命名文件</summary>
            <param name="path">要重命名的</param>
            <param name="newName">新文件名</param>
            <returns>如果重命名成功，则返回重命名后的完整文件路径，否则返回空字符串</returns>
        </member>
        <member name="M:NetRube.Utils.Rename_(System.IO.DirectoryInfo,System.String)">
            <summary>重命名</summary>
            <param name="dirInfo">要重命名的目录实例</param>
            <param name="newName">新目录名称</param>
            <returns>如果重命名成功，则返回重命名后的完整目录路径，否则返回空字符串</returns>
        </member>
        <member name="M:NetRube.Utils.RenameDirectory(System.String,System.String)">
            <summary>重命名目录</summary>
            <param name="path">要重命名的目录路径</param>
            <param name="newName">新目录名称</param>
            <returns>如果重命名成功，则返回重命名后的完整目录路径，否则返回空字符串</returns>
        </member>
        <member name="M:NetRube.Utils.GetSize_(System.IO.DirectoryInfo)">
            <summary>获取目录的大小（字节）</summary>
            <param name="dirInfo">要获取的目录实例</param>
            <returns>返回一个表示目录大小（字节）的长整型数字</returns>
        </member>
        <member name="M:NetRube.Utils.GetDirectorySize(System.String)">
            <summary>获取指定目录的大小（字节）</summary>
            <param name="path">要获取的目录</param>
            <returns>一个表示目录大小（字节）的长整型数字</returns>
        </member>
        <member name="M:NetRube.Utils.GetFilesSize_(System.IO.DirectoryInfo)">
            <summary>获取指定目录里不包含子目录的文件大小（字节）</summary>
            <param name="dirInfo">要获取的目录实例</param>
            <returns>一个表示目录大小（字节）的长整型数字</returns>
        </member>
        <member name="M:NetRube.Utils.GetDirectoryFilesSize(System.String)">
            <summary>获取指定目录里不包含子目录的文件大小（字节）</summary>
            <param name="path">要获取的目录</param>
            <returns>一个表示目录下文件大小（字节）的长整型数字</returns>
        </member>
        <member name="M:NetRube.Utils.IsInvalidPathChar_(System.Char)">
            <summary>是否为不允许用于路径的字符</summary>
            <param name="c">要检测的字符</param>
            <returns>指示是否为不允许用于路径的字符</returns>
        </member>
        <member name="M:NetRube.Utils.RemoveInvalidPathChars(System.String)">
            <summary>移除路径里的不允许使用的字符</summary>
            <param name="path">要处理的路径</param>
            <returns>处理后的路径</returns>
        </member>
        <member name="M:NetRube.Utils.IsInvalidFileNameChar_(System.Char)">
            <summary>是否为不允许用于文件名的字符</summary>
            <param name="c">要检测的字符</param>
            <returns>指示是否为不允许用于文件名的字符</returns>
        </member>
        <member name="M:NetRube.Utils.RemoveInvalidFileNameChars(System.String)">
            <summary>移除文件名里的不允许使用的字符</summary>
            <param name="path">要处理的文件名</param>
            <returns>处理后的文件名</returns>
        </member>
        <member name="M:NetRube.Utils.FileExists(System.String)">
            <summary>确定指定文件是否存在</summary>
            <param name="path">要检查的文件</param>
            <returns>指示指定文件是否存在</returns>
        </member>
        <member name="M:NetRube.Utils.DirectoryExists(System.String)">
            <summary>确定指定目录是否存在</summary>
            <param name="path">要检查的目录</param>
            <returns>指示指定目录是否存在</returns>
        </member>
        <member name="M:NetRube.Utils.GetMapPath(System.String)">
            <summary>获取绝对路径</summary>
            <param name="path">以应用程序域（Asp.Net 中为站点根目录）开始的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:NetRube.Utils.GetFileExtension(System.String)">
            <summary>获取包含“.”的文件扩展名</summary>
            <param name="path">要获取的文件</param>
            <returns>包含“.”的文件扩展名</returns>
        </member>
        <member name="M:NetRube.Utils.GetFileName(System.String)">
            <summary>获取包含扩展名的文件名</summary>
            <param name="path">要获取的路径</param>
            <returns>包含扩展名的文件名</returns>
        </member>
        <member name="M:NetRube.Utils.GetFileNameWithoutExtension(System.String,System.Boolean)">
            <summary>获取不包含扩展名的文件名</summary>
            <param name="path">要获取的路径</param>
            <param name="withPath">是否包含路径</param>
            <returns>不包含扩展名的文件名</returns>
        </member>
        <member name="M:NetRube.Utils.FormatSize(System.Int64)">
            <summary>格式化字节格式</summary>
            <param name="size">要格式化的字节数</param>
            <returns>返回以Y、Z、E、T、G、M、K 和 B 表示的大小格式</returns>
        </member>
        <member name="M:NetRube.Utils.BackupFile(System.String,System.String,System.Boolean)">
            <summary>备份文件</summary>
            <param name="sourceFileName">要备份的文件名</param>
            <param name="destFileName">备份后的文件名</param>
            <param name="overwrite">是否覆盖存在的文件</param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Utils.RestoreFile(System.String,System.String,System.String)">
            <summary>恢复文件</summary>
            <param name="backupFileName">备份文件名</param>
            <param name="targetFileName">要恢复的文件名</param>
            <param name="backupTargetFileName">恢复时先备份源文件的文件名，如果为空则不先备份</param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Utils.ReadTextFile(System.String)">
            <summary>读取 UTF-8 编码的文本文件</summary>
            <param name="fileName">文件名</param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Utils.WriteTextFile(System.String,System.String)">
            <summary>写入 UTF-8 编码的文本文件，不存在时将自动创建该文件</summary>
            <param name="text">要写入的文本内容</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:NetRube.Utils.GetXml(System.String)">
            <summary>获取 XML 文件内容，可以是远程的</summary>
            <param name="path">XML 文件路径或 URL</param>
            <returns></returns>
        </member>
        <member name="M:NetRube.Utils.Rand">
            <summary>生成随机数</summary>
            <returns>随机数</returns>
        </member>
        <member name="M:NetRube.Utils.Rand(System.Int32)">
            <summary>生成随机数</summary>
            <param name="max">生成的随机数最大值</param>
            <returns>随机数</returns>
        </member>
        <member name="M:NetRube.Utils.Rand(System.Int32,System.Int32)">
            <summary>生成随机数</summary>
            <param name="min">生成的随机数最小值</param>
            <param name="max">生成的随机数最大值</param>
            <returns>随机数</returns>
        </member>
        <member name="M:NetRube.Utils.Limit_(System.Int32,System.Int32,System.Int32)">
            <summary>限制数字处于给出的范围中</summary>
            <param name="num">要限制的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.Limit_(System.Char,System.Char,System.Char)">
            <summary>限制字符处于给出的范围中</summary>
            <param name="num">要限制的字符</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.Limit_(System.Byte,System.Byte,System.Byte)">
            <summary>限制数字处于给出的范围中</summary>
            <param name="num">要限制的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.Limit_(System.Decimal,System.Decimal,System.Decimal)">
            <summary>限制数字处于给出的范围中</summary>
            <param name="num">要限制的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.Limit_(System.Double,System.Double,System.Double)">
            <summary>限制数字处于给出的范围中</summary>
            <param name="num">要限制的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.Limit_(System.Int16,System.Int16,System.Int16)">
            <summary>限制数字处于给出的范围中</summary>
            <param name="num">要限制的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.Limit_(System.Int64,System.Int64,System.Int64)">
            <summary>限制数字处于给出的范围中</summary>
            <param name="num">要限制的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.Limit_(System.Single,System.Single,System.Single)">
            <summary>限制数字处于给出的范围中</summary>
            <param name="num">要限制的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotLessThan_(System.Int32,System.Int32)">
            <summary>限制数字不小于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotGreaterThan_(System.Int32,System.Int32)">
            <summary>限制数字不大于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotLessThan_(System.Byte,System.Byte)">
            <summary>限制数字不小于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotGreaterThan_(System.Byte,System.Byte)">
            <summary>限制数字不大于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotLessThan_(System.Char,System.Char)">
            <summary>限制数字不小于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotGreaterThan_(System.Char,System.Char)">
            <summary>限制数字不大于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotLessThan_(System.Decimal,System.Decimal)">
            <summary>限制数字不小于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotGreaterThan_(System.Decimal,System.Decimal)">
            <summary>限制数字不大于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotLessThan_(System.Double,System.Double)">
            <summary>限制数字不小于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotGreaterThan_(System.Double,System.Double)">
            <summary>限制数字不大于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotLessThan_(System.Int16,System.Int16)">
            <summary>限制数字不小于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotGreaterThan_(System.Int16,System.Int16)">
            <summary>限制数字不大于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotLessThan_(System.Int64,System.Int64)">
            <summary>限制数字不小于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotGreaterThan_(System.Int64,System.Int64)">
            <summary>限制数字不大于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotLessThan_(System.Single,System.Single)">
            <summary>限制数字不小于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.NotGreaterThan_(System.Single,System.Single)">
            <summary>限制数字不大于指定值</summary>
            <param name="num">要限制的数字</param>
            <param name="value">指定的值</param>
            <returns>位于范围内的数字</returns>
        </member>
        <member name="M:NetRube.Utils.Between_(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>验证数字是否位于范围内</summary>
            <param name="num">要验证的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <param name="include">是否包含范围值</param>
            <returns>指示是否位于范围内</returns>
        </member>
        <member name="M:NetRube.Utils.Between_(System.Byte,System.Byte,System.Byte,System.Boolean)">
            <summary>验证数字是否位于范围内</summary>
            <param name="num">要验证的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <param name="include">是否包含范围值</param>
            <returns>指示是否位于范围内</returns>
        </member>
        <member name="M:NetRube.Utils.Between_(System.Decimal,System.Decimal,System.Decimal,System.Boolean)">
            <summary>验证数字是否位于范围内</summary>
            <param name="num">要验证的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <param name="include">是否包含范围值</param>
            <returns>指示是否位于范围内</returns>
        </member>
        <member name="M:NetRube.Utils.Between_(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>验证数字是否位于范围内</summary>
            <param name="num">要验证的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <param name="include">是否包含范围值</param>
            <returns>指示是否位于范围内</returns>
        </member>
        <member name="M:NetRube.Utils.Between_(System.Int16,System.Int16,System.Int16,System.Boolean)">
            <summary>验证数字是否位于范围内</summary>
            <param name="num">要验证的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <param name="include">是否包含范围值</param>
            <returns>指示是否位于范围内</returns>
        </member>
        <member name="M:NetRube.Utils.Between_(System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>验证数字是否位于范围内</summary>
            <param name="num">要验证的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <param name="include">是否包含范围值</param>
            <returns>指示是否位于范围内</returns>
        </member>
        <member name="M:NetRube.Utils.Between_(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>验证数字是否位于范围内</summary>
            <param name="num">要验证的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <param name="include">是否包含范围值</param>
            <returns>指示是否位于范围内</returns>
        </member>
        <member name="M:NetRube.Utils.Between_(System.Char,System.Char,System.Char,System.Boolean)">
            <summary>验证数字是否位于范围内</summary>
            <param name="num">要验证的数字</param>
            <param name="num1">范围起点</param>
            <param name="num2">范围终点</param>
            <param name="include">是否包含范围值</param>
            <returns>指示是否位于范围内</returns>
        </member>
        <member name="M:NetRube.Utils.GetPages_(System.Int32,System.Int32)">
            <summary>计算记录总页数</summary>
            <param name="recordCount">记录数量</param>
            <param name="pageSize">每页记录数</param>
            <returns>总页数</returns>
        </member>
        <member name="M:NetRube.Utils.GetPager_``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>返回分页记录</summary>
            <typeparam name="TSource">实体类型</typeparam>
            <param name="source">包含要计数的元素的 IQueryable&lt;T&gt;</param>
            <param name="pageIndex">当前页索引</param>
            <param name="pageSize">每页记录数</param>
            <returns>分页记录</returns>
        </member>
        <member name="M:NetRube.Utils.ToPagedList_``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>返回分页记录列表</summary>
            <typeparam name="TSource">实体类型</typeparam>
            <param name="source">包含要计数的元素的 IQueryable&lt;T&gt;</param>
            <param name="pageIndex">当前页索引</param>
            <param name="pageSize">每页记录数</param>
            <returns>分页记录列表</returns>
        </member>
        <member name="M:NetRube.Utils.GetPager_``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>返回分页记录</summary>
            <typeparam name="TSource">实体类型</typeparam>
            <param name="source">包含要计数的元素的 IQueryable&lt;T&gt;</param>
            <param name="pageIndex">当前页索引</param>
            <param name="pageSize">每页记录数</param>
            <returns>分页记录</returns>
        </member>
        <member name="M:NetRube.Utils.ToPagedList_``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>返回分页记录列表</summary>
            <typeparam name="TSource">实体类型</typeparam>
            <param name="source">包含要计数的元素的 IQueryable&lt;T&gt;</param>
            <param name="pageIndex">当前页索引</param>
            <param name="pageSize">每页记录数</param>
            <returns>分页记录列表</returns>
        </member>
        <member name="F:NetRube.Utils.BaseDateTime">
            <summary>基本日期，1900-01-01，主要针对 SQL 数据库的最小日期范围</summary>
            <value>针对 SQL 数据库的最小日期</value>
        </member>
        <member name="M:NetRube.Utils.IsInAspDotNet">
            <summary>是否运行于 Asp.Net 环境</summary>
            <returns>如果运行于 Asp.Net 环境中，则返回 <c>true</c>；否则返回 <c>false</c>。</returns>
        </member>
        <member name="M:NetRube.Utils.IsInMono">
            <summary>是否运行于 Mono 环境</summary>
            <returns>如果运行于 Mono 环境中，则返回 <c>true</c>；否则返回 <c>false</c>。</returns>
        </member>
        <member name="M:NetRube.Utils.GetMemberExpression(System.Linq.Expressions.Expression)">
            <summary>
            获取表达式字段或属性
            </summary>
            <param name="expression">表达式</param>
            <returns>字段或属性</returns>
        </member>
        <member name="M:NetRube.Utils.GetDescription_(System.Enum)">
            <summary>获取枚举值的说明（Description 属性），如果不存在则返回该枚举值的名称</summary>
            <param name="e">枚举值</param>
            <returns>说明或名称</returns>
        </member>
        <member name="M:NetRube.Utils.GetLocalization_(System.Enum,System.Resources.ResourceManager,System.Globalization.CultureInfo)">
            <summary>获取本地化资源</summary>
            <param name="e">要获取的枚举值</param>
            <param name="res">所在的本地化资源</param>
            <param name="info">区域性信息</param>
            <returns>本地化资源</returns>
        </member>
        <member name="M:NetRube.Utils.GetLocalization_(System.String,System.Resources.ResourceManager,System.Globalization.CultureInfo)">
            <summary>获取本地化资源</summary>
            <param name="name">要获取的资源名称</param>
            <param name="res">所在的本地化资源</param>
            <param name="info">区域性信息</param>
            <returns>本地化资源</returns>
        </member>
        <member name="M:NetRube.Utils.GetValidValue_``2(``0,System.Func{``0,``1},``1)">
            <summary>获取对象有效值</summary>
            <typeparam name="T">对象类型</typeparam>
            <typeparam name="V">值类型</typeparam>
            <param name="obj">要获取的对象</param>
            <param name="key">对象键</param>
            <param name="defval">无法获取时的默认值</param>
            <returns>有效值</returns>
        </member>
        <member name="M:NetRube.Utils.GetValidValue_``1(``0,System.Func{``0,System.Object},System.Object)">
            <summary>获取对象有效值</summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">要获取的对象</param>
            <param name="key">对象键</param>
            <param name="defval">无法获取时的默认值</param>
            <returns>有效值</returns>
        </member>
        <member name="M:NetRube.Utils.Clone_``1(``0)">
            <summary>克隆对象</summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">要克隆的对象</param>
            <returns>新对象</returns>
        </member>
        <member name="M:NetRube.Utils.GetLength_(System.String)">
            <summary>获取指定字符串的实际长度，1 个汉字长度为 2。</summary>
            <param name="str">要获取的字符串</param>
            <returns>返回指定字符串的实际长度，1 个汉字长度为 2</returns>
        </member>
        <member name="M:NetRube.Utils.Repeat_(System.String,System.Int32)">
            <summary>重复字符串</summary>
            <param name="str">要重复的字符串</param>
            <param name="count">重复次数</param>
            <returns>返回按重复次数串连起来的要重复内容的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.F(System.String,System.Object[])">
            <summary>格式化字符串</summary>
            <param name="str">要格式化的字符串</param>
            <param name="args">格式化参数</param>
            <returns>格式化后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.C(System.String,System.String[])">
            <summary>连接字符串数组</summary>
            <param name="str">要连接的字符串</param>
            <param name="args">要连接的字符串集合</param>
            <returns>连接的字符串数组</returns>
        </member>
        <member name="M:NetRube.Utils.Split_(System.String,System.String,System.StringSplitOptions)">
            <summary>拆分字符串</summary>
            <param name="str">要拆分的字符串</param>
            <param name="split">用于分隔的字符串</param>
            <param name="splitOption">拆分选项</param>
            <returns>拆分后的字符串数组</returns>
        </member>
        <member name="M:NetRube.Utils.Split_(System.String,System.String,System.Boolean)">
            <summary>以给出的正则表达式拆分字符串</summary>
            <param name="str">用于拆分的字符串</param>
            <param name="pattern">正则表达式。可以使用内联 (?imnsx-imnsx:) 分组构造或 (?imnsx-imnsx) 其他构造设置选项，一个选项或一组选项前面的减号 (-) 用于关闭这些选项。例如，内联构造 (?ix-ms)
            <para>* i 指定不区分大小写的匹配</para>
            <para>* m 指定多行模式。更改 ^ 和 $ 的含义，以使它们分别与任何行的开头和结尾匹配，而不只是与整个字符串的开头和结尾匹配</para>
            <para>* n 指定唯一有效的捕获是显式命名或编号的 (?&lt;name&gt;…) 形式的组。这允许圆括号充当非捕获组，从而避免了由 (?:…) 导致的语法上的笨拙</para>
            <para>* s 指定单行模式。更改句点字符 (.) 的含义，以使它与每个字符（而不是除 \n 之外的所有字符）匹配</para>
            <para>* x 指定从模式中排除非转义空白并启用数字符号 (#) 后面的注释</para></param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns>拆分后的字符串数组</returns>
        </member>
        <member name="M:NetRube.Utils.GetSubString(System.String,System.Int32,System.String)">
            <summary>截取指定字节数的字符串</summary>
            <param name="srcString">要截取的字符串</param>
            <param name="length">要截取的长度，1 个汉字长度为 2，所以汉字的话长度要乘 2</param>
            <param name="tailString">结尾附加的内容，如“...”，长度会自动减去该附加内容的长度</param>
            <returns>返回截取后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.GetSubChineseString_(System.String,System.Int32,System.String)">
            <summary>截取指定中文文字长度的字符串</summary>
            <param name="srcString">要截取的字符串</param>
            <param name="length">要截取的长度，2 个英文及半角符号长度为 1</param>
            <param name="tailString">结尾附加的内容，如“...”，长度会自动减去该附加内容的长度</param>
            <returns>返回截取后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.GetSubstr_(System.String,System.String,System.String,System.Boolean)">
            <summary>获取指定字符串范围内的字符串</summary>
            <param name="str">用于获取的字符串</param>
            <param name="startString">标记为开始的字符串</param>
            <param name="endString">标记为结束的字符串</param>
            <param name="include">是否包含标记的字符串</param>
            <returns>返回指定字符串范围内的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.GetSubstr_(System.String,System.Int32,System.Int32)">
            <summary>获取指定范围内的字符串</summary>
            <param name="str">用于获取的字符串</param>
            <param name="startIndex">从 0 开始的位置</param>
            <param name="endIndex">结束位置</param>
            <returns>返回指定字符串范围内的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.GetLeft_(System.String,System.Int32)">
            <summary>获取左边指定字符数的字符串</summary>
            <param name="str">用于获取的字符串</param>
            <param name="len">要获取的字符数</param>
            <returns>返回左边指定字符数的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.GetLeft_(System.String,System.String,System.Boolean)">
            <summary>获取左边指定字符串前的字符串</summary>
            <param name="str">用于获取的字符串</param>
            <param name="endString">标记为结束的字符串</param>
            <param name="include">是否包含标记的字符串</param>
            <returns>返回左边指定字符数的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.GetRight_(System.String,System.Int32)">
            <summary>获取右边指定字符数的字符串</summary>
            <param name="str">用于获取的字符串</param>
            <param name="len">要获取的字符数</param>
            <returns>返回右边指定字符数的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.GetRight_(System.String,System.String,System.Boolean)">
            <summary>获取右边指定字符串后的字符串</summary>
            <param name="str">用于获取的字符串</param>
            <param name="startString">标记为开始的字符串</param>
            <param name="include">是否包含标记的字符串</param>
            <returns>返回右边指定字符数的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.GetMatch(System.String,System.String,System.Boolean)">
            <summary>以给出的正则表达式获取匹配的字符串</summary>
            <param name="str">用于获取的字符串</param>
            <param name="pattern">正则表达式。可以使用内联 (?imnsx-imnsx:) 分组构造或 (?imnsx-imnsx) 其他构造设置选项，一个选项或一组选项前面的减号 (-) 用于关闭这些选项。例如，内联构造 (?ix-ms)
            <para>* i 指定不区分大小写的匹配</para>
            <para>* m 指定多行模式。更改 ^ 和 $ 的含义，以使它们分别与任何行的开头和结尾匹配，而不只是与整个字符串的开头和结尾匹配</para>
            <para>* n 指定唯一有效的捕获是显式命名或编号的 (?&lt;name&gt;…) 形式的组。这允许圆括号充当非捕获组，从而避免了由 (?:…) 导致的语法上的笨拙</para>
            <para>* s 指定单行模式。更改句点字符 (.) 的含义，以使它与每个字符（而不是除 \n 之外的所有字符）匹配</para>
            <para>* x 指定从模式中排除非转义空白并启用数字符号 (#) 后面的注释</para></param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns>返回匹配的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.RemovePart_(System.String,System.Int32,System.Int32)">
            <summary>删除指定范围的字符</summary>
            <param name="str">用于删除的字符串</param>
            <param name="startIndex">从 0 开始的位置</param>
            <param name="endIndex">结束位置</param>
            <returns>返回删除后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.RemoveLeft_(System.String,System.Int32)">
            <summary>删除左边指定的字符数</summary>
            <param name="str">用于删除的字符串</param>
            <param name="len">要删除的字符数</param>
            <returns>返回删除后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.RemoveRight_(System.String,System.Int32)">
            <summary>删除右边指定的字符数</summary>
            <param name="str">用于删除的字符串</param>
            <param name="len">要删除的字符数</param>
            <returns>返回删除后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.RemoveLeft_(System.String,System.String)">
            <summary>删除左边指定的字符串</summary>
            <param name="srcString">用于删除的字符串</param>
            <param name="str">要删除的字符串</param>
            <returns>返回删除后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.RemoveRight_(System.String,System.String)">
            <summary>删除右边指定的字符串</summary>
            <param name="srcString">用于删除的字符串</param>
            <param name="str">要删除的字符串</param>
            <returns>返回删除后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToDBC_(System.Char,System.Boolean)">
            <summary>将全角字符转换为半角字符</summary>
            <param name="c">要转换的字符</param>
            <param name="ignoreSpace">是否忽略对空格的转换</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToDBC_(System.String,System.Boolean)">
            <summary>将字符串中的全角字符转换为半角字符</summary>
            <param name="str">要转换的字符串</param>
            <param name="ignoreSpace">是否忽略对空格的转换</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToSBC_(System.Char,System.Boolean)">
            <summary>将半角字符转换为全角字符</summary>
            <param name="c">要转换的字符</param>
            <param name="ignoreSpace">是否忽略对空格的转换</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToSBC_(System.String,System.Boolean)">
            <summary>将字符串中的半角字符转换为全角字符</summary>
            <param name="str">要转换的字符串</param>
            <param name="ignoreSpace">是否忽略对空格的转换</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToRMB_(System.Decimal)">
            <summary>转换成中文大写金额</summary>
            <param name="num">要转换的数字</param>
            <returns>中文大写金额</returns>
        </member>
        <member name="M:NetRube.Utils.ToPascalCase_(System.String)">
            <summary>转换成首字母大写（每个单词的首字母大写）</summary>
            <param name="str">要转换的字符串</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToPascalCase_(System.String,System.Char[])">
            <summary>转换成首字母大写（每个单词的首字母大写）</summary>
            <param name="str">要转换的字符串</param>
            <param name="separators">字符串中单词间的分隔符</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToCamelCase_(System.String,System.Char[])">
            <summary>转换成驼峰格式（首个单词的首字母小写，其余单词的首字母大写）</summary>
            <param name="str">要转换的字符串</param>
            <param name="separators">要清除的分隔符</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToCamelCase_(System.String)">
            <summary>将连字符分隔转换成驼峰格式（首个单词的首字母小写，其余单词的首字母大写）</summary>
            <param name="str">要转换的字符串</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToSeparate_(System.String,System.String)">
            <summary>将驼峰格式转换成以指定字符分隔</summary>
            <param name="str">要转换的字符串</param>
            <param name="separator">分隔符</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ToHyphenate_(System.String)">
            <summary>将驼峰格式转换成以连字符分隔</summary>
            <param name="str">要转换的字符串</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.ConvertTextCase_(System.String,NetRube.TextCaseType)">
            <summary>转换文本格式</summary>
            <param name="text">要转换的文本</param>
            <param name="type">要转换的类型</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.Clean_(System.String)">
            <summary>清除多余空白</summary>
            <param name="str">要清除的字符串</param>
            <returns>清除后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.FormatTime(System.Double)">
            <summary>格式化时间量</summary>
            <param name="num">毫秒数</param>
            <returns>返回格式化后的时间量</returns>
        </member>
        <member name="M:NetRube.Utils.EscapeXml_(System.String)">
            <summary>转换 XML 转义符</summary>
            <param name="xml">要转换的 XML 文本</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.Replace_(System.String,System.String,System.String,System.Boolean)">
            <summary>以给出的正则表达式替换字符串</summary>
            <param name="str">要替换的字符串</param>
            <param name="pattern">正则表达式。可以使用内联 (?imnsx-imnsx:) 分组构造或 (?imnsx-imnsx) 其他构造设置选项，一个选项或一组选项前面的减号 (-) 用于关闭这些选项。例如，内联构造 (?ix-ms)
            <para>* i 指定不区分大小写的匹配</para>
            <para>* m 指定多行模式。更改 ^ 和 $ 的含义，以使它们分别与任何行的开头和结尾匹配，而不只是与整个字符串的开头和结尾匹配</para>
            <para>* n 指定唯一有效的捕获是显式命名或编号的 (?&lt;name&gt;…) 形式的组。这允许圆括号充当非捕获组，从而避免了由 (?:…) 导致的语法上的笨拙</para>
            <para>* s 指定单行模式。更改句点字符 (.) 的含义，以使它与每个字符（而不是除 \n 之外的所有字符）匹配</para>
            <para>* x 指定从模式中排除非转义空白并启用数字符号 (#) 后面的注释</para></param>
            <param name="replace">替换字符串</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns>返回替换后的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsDigit_(System.String)">
            <summary>验证是否是纯数字字符串</summary>
            <param name="str">要验证的字符串</param>
            <returns>指示是否为纯数字字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsNumber_(System.String)">
            <summary>验证是否是数字字符串</summary>
            <param name="str">要验证的字符串</param>
            <returns>指示是否为数字字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsInt_(System.String)">
            <summary>验证是否是整数字符串</summary>
            <param name="str">要验证的字符串</param>
            <returns>指示是否为整数字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsAscii_(System.String)">
            <summary>验证是否是 ASCII(0-127)字符串</summary>
            <param name="str">要验证的字符</param>
            <returns>指示是否为 ASCII(0-127)字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsLatin_(System.String)">
            <summary>验证是否是拉丁(0-255)字符串</summary>
            <param name="str">要验证的字符</param>
            <returns>指示是否为拉丁(0-255)字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsWhiteSpace_(System.String)">
            <summary>验证是否是空白字符串</summary>
            <param name="str">要验证的字符</param>
            <returns>指示是否为空白字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsHex_(System.String)">
            <summary>验证是否是十六进制字符串</summary>
            <param name="str">要验证的字符</param>
            <returns>指示是否为十六进制字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsGuid_(System.String)">
            <summary>验证是否是 Guid 字符串</summary>
            <param name="str">要验证的字符串</param>
            <returns>指示是否为 Guid 字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsBase64String_(System.String)">
            <summary>验证是否是 Base64 字符串</summary>
            <param name="str">要验证的字符串</param>
            <returns>指示是否为 Base64 字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsMatch_(System.String,System.String,System.Boolean)">
            <summary>以给出的正则表达式验证匹配字符串</summary>
            <param name="str">要验证的字符串</param>
            <param name="pattern">正则表达式。可以使用内联 (?imnsx-imnsx:) 分组构造或 (?imnsx-imnsx) 其他构造设置选项，一个选项或一组选项前面的减号 (-) 用于关闭这些选项。例如，内联构造 (?ix-ms)
            <para>* i 指定不区分大小写的匹配</para>
            <para>* m 指定多行模式。更改 ^ 和 $ 的含义，以使它们分别与任何行的开头和结尾匹配，而不只是与整个字符串的开头和结尾匹配</para>
            <para>* n 指定唯一有效的捕获是显式命名或编号的 (?&lt;name&gt;…) 形式的组。这允许圆括号充当非捕获组，从而避免了由 (?:…) 导致的语法上的笨拙</para>
            <para>* s 指定单行模式。更改句点字符 (.) 的含义，以使它与每个字符（而不是除 \n 之外的所有字符）匹配</para>
            <para>* x 指定从模式中排除非转义空白并启用数字符号 (#) 后面的注释</para></param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns>指示是否为匹配的字符串</returns>
        </member>
        <member name="M:NetRube.Utils.IsEmail(System.String)">
            <summary>验证 Email 地址格式是否正确</summary>
            <param name="email">要验证的 Email 地址</param>
            <returns>指示是否为 Email 地址格式</returns>
        </member>
        <member name="M:NetRube.Utils.IsUrl(System.String)">
            <summary>验证 URL 格式是否正确</summary>
            <param name="url">要验证的 URL</param>
            <returns>指示是否为 URL 格式</returns>
        </member>
        <member name="M:NetRube.Utils.IsImageFileName(System.String)">
            <summary>验证是否是图像格式文件名</summary>
            <param name="fileName">要验证的文件名</param>
            <returns>指示是否为图像格式文件名</returns>
        </member>
        <member name="M:NetRube.Utils.CheckFileNameByExtension(System.String,System.String[])">
            <summary>验证是否是以某些指定扩展名为结尾的文件名</summary>
            <param name="fileName">要验证的文件名</param>
            <param name="exts">用于验证的扩展名列表</param>
            <returns>指示是否为以某些指定扩展名结尾的文件名</returns>
        </member>
        <member name="M:NetRube.Utils.InIpList(System.String,System.String[])">
            <summary>检测 IP 是否位于 IP 列表中</summary>
            <param name="ip">要检测的 IP</param>
            <param name="ipList">IP 列表</param>
            <returns>指示是否位于 IP 列表中</returns>
        </member>
        <member name="M:NetRube.Utils.IsIp(System.String,System.Boolean)">
            <summary>验证 IP 地址格式是否正确</summary>
            <param name="ip">要验证的 IP 地址</param>
            <param name="allowWildcard">是否允许以星号（*）作为某一段的通配符</param>
            <returns>指示是否为 IP 地址格式</returns>
        </member>
        <member name="T:NetRube.XmlSerialization">
            <summary>XML 文件序列化</summary>
        </member>
        <member name="M:NetRube.XmlSerialization.Load``1(System.String)">
            <summary>从 XML 文件加载反序列化成对象</summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="fileName">文件名</param>
            <returns>反序列化后的对象</returns>
        </member>
        <member name="M:NetRube.XmlSerialization.Deserialize``1(System.String)">
            <summary>从 XML 文本反序列化成对象</summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="xmlData">XML 数据</param>
            <returns>反序列化后的对象</returns>
        </member>
        <member name="M:NetRube.XmlSerialization.Deserialize(System.String,System.Type)">
            <summary>从 XML 文本反序列化成对象</summary>
            <param name="xmlData">XML 数据</param>
            <param name="returnType">返回的对象类型</param>
            <returns>反序列化后的对象</returns>
        </member>
        <member name="M:NetRube.XmlSerialization.Save``1(``0,System.String)">
            <summary>保存要进行 XML 序列化的对象</summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">要序列化的对象</param>
            <param name="fileName">文件名</param>
            <returns>指示是否保存成功</returns>
        </member>
        <member name="M:NetRube.XmlSerialization.Serialize``1(``0)">
            <summary>将对象序列化为 XML 格式文本</summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">要序列化的对象</param>
            <returns>序列化后的 XML 格式文本</returns>
        </member>
    </members>
</doc>
