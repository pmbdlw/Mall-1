using System;
using Mall.Entities.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Mall.Entities
{
    public partial class MallContext : DbContext
    {
        public MallContext()
        {
        }

        public MallContext(DbContextOptions<MallContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AccountInfo> Account { get; set; }
        public virtual DbSet<AccountDetailInfo> Accountdetail { get; set; }
        public virtual DbSet<AccountMetaInfo> Accountmeta { get; set; }
        public virtual DbSet<ActiveInfo> Active { get; set; }
        public virtual DbSet<ActiveMarketServiceInfo> Activemarketservice { get; set; }
        public virtual DbSet<ActiveProductInfo> Activeproduct { get; set; }
        public virtual DbSet<AgreementInfo> Agreement { get; set; }
        public virtual DbSet<AppbaseSafeSettingInfo> Appbasesafesetting { get; set; }
        public virtual DbSet<ApplyWithdrawInfo> Applywithdraw { get; set; }
        public virtual DbSet<AppMessageInfo> Appmessage { get; set; }
        public virtual DbSet<ArticleInfo> Article { get; set; }
        public virtual DbSet<ArticleCategoryInfo> Articlecategory { get; set; }
        public virtual DbSet<Domain.AttributeInfo> Attribute { get; set; }
        public virtual DbSet<AttributeValueInfo> Attributevalue { get; set; }
        public virtual DbSet<AutoreplyInfo> Autoreply { get; set; }
        public virtual DbSet<BannerInfo> Banner { get; set; }
        public virtual DbSet<BonusInfo> Bonus { get; set; }
        public virtual DbSet<BonusReceiveInfo> Bonusreceive { get; set; }
        public virtual DbSet<BrandInfo> Brand { get; set; }
        public virtual DbSet<BrowsingHistoryInfo> Browsinghistory { get; set; }
        public virtual DbSet<BusinessCategoryInfo> Businesscategory { get; set; }
        public virtual DbSet<BusinessCategoryApplyInfo> Businesscategoryapply { get; set; }
        public virtual DbSet<BusinessCategoryApplyDetailInfo> Businesscategoryapplydetail { get; set; }
        public virtual DbSet<CapitalInfo> Capital { get; set; }
        public virtual DbSet<CapitalDetailInfo> Capitaldetail { get; set; }
        public virtual DbSet<CashDepositInfo> Cashdeposit { get; set; }
        public virtual DbSet<CashDepositDetailInfo> Cashdepositdetail { get; set; }
        public virtual DbSet<CategoryInfo> Category { get; set; }
        public virtual DbSet<CategoryCashDepositInfo> Categorycashdeposit { get; set; }
        public virtual DbSet<ChargeDetailInfo> Chargedetail { get; set; }
        public virtual DbSet<ChargeDetailShopInfo> Chargedetailshop { get; set; }
        public virtual DbSet<CityExpressConfigInfo> Cityexpressconfig { get; set; }
        public virtual DbSet<CollocationInfo> Collocation { get; set; }
        public virtual DbSet<CollocationPoruductInfo> Collocationporuduct { get; set; }
        public virtual DbSet<CollocationSKUInfo> Collocationsku { get; set; }
        public virtual DbSet<CouponInfo> Coupon { get; set; }
        public virtual DbSet<CouponProductInfo> Couponproduct { get; set; }
        public virtual DbSet<CouponRecordInfo> Couponrecord { get; set; }
        public virtual DbSet<CouponSendByRegisterInfo> Couponsendbyregister { get; set; }
        public virtual DbSet<CouponSendByRegisterDetailedInfo> Couponsendbyregisterdetailed { get; set; }
        public virtual DbSet<CouponSettingInfo> Couponsetting { get; set; }
        public virtual DbSet<CustomerServiceInfo> Customerservice { get; set; }
        public virtual DbSet<DistributionBrokerageInfo> Distributionbrokerage { get; set; }
        public virtual DbSet<DistributionProductInfo> Distributionproduct { get; set; }
        public virtual DbSet<DistributionRankingInfo> Distributionranking { get; set; }
        public virtual DbSet<DistributionRankingBatchInfo> Distributionrankingbatch { get; set; }
        public virtual DbSet<DistributionShopRateConfigInfo> Distributionshoprateconfig { get; set; }
        public virtual DbSet<DistributionWithdrawInfo> Distributionwithdraw { get; set; }
        public virtual DbSet<DistributorInfo> Distributor { get; set; }
        public virtual DbSet<DistributorGradeInfo> Distributorgrade { get; set; }
        public virtual DbSet<DistributorRecordInfo> Distributorrecord { get; set; }
        public virtual DbSet<ExpressElementInfo> Expresselement { get; set; }
        public virtual DbSet<ExpressInfoInfo> Expressinfo { get; set; }
        public virtual DbSet<FavoriteInfo> Favorite { get; set; }
        public virtual DbSet<FavoriteShopInfo> Favoriteshop { get; set; }
        public virtual DbSet<FightGroupInfo> Fightgroup { get; set; }
        public virtual DbSet<FightGroupActiveInfo> Fightgroupactive { get; set; }
        public virtual DbSet<FightGroupActiveItemInfo> Fightgroupactiveitem { get; set; }
        public virtual DbSet<FightGroupOrderInfo> Fightgrouporder { get; set; }
        public virtual DbSet<FlashSaleInfo> Flashsale { get; set; }
        public virtual DbSet<FlashSaleConfigInfo> Flashsaleconfig { get; set; }
        public virtual DbSet<FlashSaleDetailInfo> Flashsaledetail { get; set; }
        public virtual DbSet<FlashSaleRemindInfo> Flashsaleremind { get; set; }
        public virtual DbSet<FloorBrandInfo> Floorbrand { get; set; }
        public virtual DbSet<FloorCategoryInfo> Floorcategory { get; set; }
        public virtual DbSet<FloorProductInfo> Floorproduct { get; set; }
        public virtual DbSet<FloorTablInfo> Floortabl { get; set; }
        public virtual DbSet<FloorTablDetailInfo> Floortabldetail { get; set; }
        public virtual DbSet<FloorTopicInfo> Floortopic { get; set; }
        public virtual DbSet<FreightAreaContentInfo> Freightareacontent { get; set; }
        public virtual DbSet<FreightAreaDetailInfo> Freightareadetail { get; set; }
        public virtual DbSet<FreightTemplateInfo> Freighttemplate { get; set; }
        public virtual DbSet<FullDiscountRuleInfo> Fulldiscountrule { get; set; }
        public virtual DbSet<GiftInfo> Gift { get; set; }
        public virtual DbSet<GiftOrderInfo> Giftorder { get; set; }
        public virtual DbSet<GiftOrderItemInfo> Giftorderitem { get; set; }
        public virtual DbSet<HandSlideAdInfo> Handslidead { get; set; }
        public virtual DbSet<HomeCategoryInfo> Homecategory { get; set; }
        public virtual DbSet<HomeCategoryRowInfo> Homecategoryrow { get; set; }
        public virtual DbSet<HomeFloorInfo> Homefloor { get; set; }
        public virtual DbSet<ImageAdInfo> Imagead { get; set; }
        public virtual DbSet<IntegralMallAdInfo> Integralmallad { get; set; }
        public virtual DbSet<InviteRecordInfo> Inviterecord { get; set; }
        public virtual DbSet<InviteRuleInfo> Inviterule { get; set; }
        public virtual DbSet<InvoiceContextInfo> Invoicecontext { get; set; }
        public virtual DbSet<InvoiceTitleInfo> Invoicetitle { get; set; }
        public virtual DbSet<LabelInfo> Label { get; set; }
        public virtual DbSet<LogInfo> Log { get; set; }
        public virtual DbSet<ManagerInfo> Manager { get; set; }
        public virtual DbSet<MarketServiceRecordInfo> Marketservicerecord { get; set; }
        public virtual DbSet<MarketSettingInfo> Marketsetting { get; set; }
        public virtual DbSet<MarketSettingMetaInfo> Marketsettingmeta { get; set; }
        public virtual DbSet<MemberInfo> Member { get; set; }
        public virtual DbSet<MemberActivityDegreeInfo> Memberactivitydegree { get; set; }
        public virtual DbSet<MemberBuyCategoryInfo> Memberbuycategory { get; set; }
        public virtual DbSet<MemberConsumeStatisticInfo> Memberconsumestatistic { get; set; }
        public virtual DbSet<MemberContactInfo> Membercontact { get; set; }
        public virtual DbSet<MemberGradeInfo> Membergrade { get; set; }
        public virtual DbSet<MemberGroupInfo> Membergroup { get; set; }
        public virtual DbSet<MemberIntegralInfo> Memberintegral { get; set; }
        public virtual DbSet<MemberIntegralExchangeRuleInfo> Memberintegralexchangerule { get; set; }
        public virtual DbSet<MemberIntegralRecordInfo> Memberintegralrecord { get; set; }
        public virtual DbSet<MemberIntegralRecordActionInfo> Memberintegralrecordaction { get; set; }
        public virtual DbSet<MemberIntegralRuleInfo> Memberintegralrule { get; set; }
        public virtual DbSet<MemberLabelInfo> Memberlabel { get; set; }
        public virtual DbSet<MemberOpenIdInfo> Memberopenid { get; set; }
        public virtual DbSet<MemberSigninInfo> Membersignin { get; set; }
        public virtual DbSet<MenuInfo> Menu { get; set; }
        public virtual DbSet<MessageLogInfo> Messagelog { get; set; }
        public virtual DbSet<MobileFootMenuInfo> Mobilefootmenu { get; set; }
        public virtual DbSet<MobileHomeProductInfo> Mobilehomeproduct { get; set; }
        public virtual DbSet<MobileHomeTopicInfo> Mobilehometopic { get; set; }
        public virtual DbSet<ModuleProductInfo> Moduleproduct { get; set; }
        public virtual DbSet<OpenIdInfo> Openid { get; set; }
        public virtual DbSet<OrderInfo> Order { get; set; }
        public virtual DbSet<OrderCommentInfo> Ordercomment { get; set; }
        public virtual DbSet<OrderComplaintInfo> Ordercomplaint { get; set; }
        public virtual DbSet<OrderExpressDataInfo> Orderexpressdata { get; set; }
        public virtual DbSet<OrderInvoiceInfo> Orderinvoice { get; set; }
        public virtual DbSet<OrderItemInfo> Orderitem { get; set; }
        public virtual DbSet<OrderOperationLogInfo> Orderoperationlog { get; set; }
        public virtual DbSet<OrderPayInfo> Orderpay { get; set; }
        public virtual DbSet<OrderRefundInfo> Orderrefund { get; set; }
        public virtual DbSet<OrderRefundLogInfo> Orderrefundlog { get; set; }
        public virtual DbSet<OrderVerificationCodeInfo> Orderverificationcode { get; set; }
        public virtual DbSet<PaymentConfigInfo> Paymentconfig { get; set; }
        public virtual DbSet<PendingSettlementOrderInfo> Pendingsettlementorder { get; set; }
        public virtual DbSet<PhotoSpaceInfo> Photospace { get; set; }
        public virtual DbSet<PhotoSpaceCategoryInfo> Photospacecategory { get; set; }
        public virtual DbSet<PlatAccountInfo> Plataccount { get; set; }
        public virtual DbSet<PlatAccountItemInfo> Plataccountitem { get; set; }
        public virtual DbSet<PlatVisitInfo> Platvisit { get; set; }
        public virtual DbSet<ProductInfo> Product { get; set; }
        public virtual DbSet<ProductAttributeInfo> Productattribute { get; set; }
        public virtual DbSet<ProductCommentInfo> Productcomment { get; set; }
        public virtual DbSet<ProductCommentImageInfo> Productcommentimage { get; set; }
        public virtual DbSet<ProductConsultationInfo> Productconsultation { get; set; }
        public virtual DbSet<ProductDescriptionInfo> Productdescription { get; set; }
        public virtual DbSet<ProductDescriptionTemplateInfo> Productdescriptiontemplate { get; set; }
        public virtual DbSet<ProductLadderPriceInfo> Productladderprice { get; set; }
        public virtual DbSet<ProductRelationProductInfo> Productrelationproduct { get; set; }
        public virtual DbSet<ProductShopCategoryInfo> Productshopcategory { get; set; }
        public virtual DbSet<ProductVistiInfo> Productvisti { get; set; }
        public virtual DbSet<ReceivingAddressConfigInfo> Receivingaddressconfig { get; set; }
        public virtual DbSet<RechargePresentRuleInfo> Rechargepresentrule { get; set; }
        public virtual DbSet<RefundReasonInfo> Refundreason { get; set; }
        public virtual DbSet<RoleInfo> Role { get; set; }
        public virtual DbSet<RolePrivilegeInfo> Roleprivilege { get; set; }
        public virtual DbSet<SearchProductInfo> Searchproduct { get; set; }
        public virtual DbSet<SellerSpecificationValueInfo> Sellerspecificationvalue { get; set; }
        public virtual DbSet<SendMessageRecordInfo> Sendmessagerecord { get; set; }
        public virtual DbSet<SendMessageRecordCouponInfo> Sendmessagerecordcoupon { get; set; }
        public virtual DbSet<SendMessageRecordCouponSnInfo> Sendmessagerecordcouponsn { get; set; }
        public virtual DbSet<SensitiveWordInfo> Sensitiveword { get; set; }
        public virtual DbSet<SettledInfo> Settled { get; set; }
        public virtual DbSet<ShippingAddressInfo> Shippingaddress { get; set; }
        public virtual DbSet<ShippingFreeGroupInfo> Shippingfreegroup { get; set; }
        public virtual DbSet<ShippingFreeRegionInfo> Shippingfreeregion { get; set; }
        public virtual DbSet<ShopInfo> Shop { get; set; }
        public virtual DbSet<ShopAccountInfo> Shopaccount { get; set; }
        public virtual DbSet<ShopAccountItemInfo> Shopaccountitem { get; set; }
        public virtual DbSet<ShopBonusInfo> Shopbonus { get; set; }
        public virtual DbSet<ShopBonusGrantInfo> Shopbonusgrant { get; set; }
        public virtual DbSet<ShopBonusReceiveInfo> Shopbonusreceive { get; set; }
        public virtual DbSet<ShopBranchInfo> Shopbranch { get; set; }
        public virtual DbSet<ShopBranchIntagInfo> Shopbranchintag { get; set; }
        public virtual DbSet<ShopBranchManagerInfo> Shopbranchmanager { get; set; }
        public virtual DbSet<ShopBranchSKUInfo> Shopbranchsku { get; set; }
        public virtual DbSet<ShopBranchTagInfo> Shopbranchtag { get; set; }
        public virtual DbSet<ShopBrandInfo> Shopbrand { get; set; }
        public virtual DbSet<ShopBrandApplyInfo> Shopbrandapply { get; set; }
        public virtual DbSet<ShopCategoryInfo> Shopcategory { get; set; }
        public virtual DbSet<ShopFooterInfo> Shopfooter { get; set; }
        public virtual DbSet<ShopGradeInfo> Shopgrade { get; set; }
        public virtual DbSet<ShopHomeModuleInfo> Shophomemodule { get; set; }
        public virtual DbSet<ShopHomeModuleProductInfo> Shophomemoduleproduct { get; set; }
        public virtual DbSet<ShopHomeModuleTopImgInfo> Shophomemoduletopimg { get; set; }
        public virtual DbSet<ShopInvoiceConfigInfo> Shopinvoiceconfig { get; set; }
        public virtual DbSet<ShopOpenApiSettingInfo> Shopopenapisetting { get; set; }
        public virtual DbSet<ShoppingCartInfo> Shoppingcart { get; set; }
        public virtual DbSet<ShopRenewRecordInfo> Shoprenewrecord { get; set; }
        public virtual DbSet<ShopShipperInfo> Shopshipper { get; set; }
        public virtual DbSet<ShopVistiInfo> Shopvisti { get; set; }
        public virtual DbSet<ShopWdgjSettingInfo> Shopwdgjsetting { get; set; }
        public virtual DbSet<ShopWithdrawInfo> Shopwithdraw { get; set; }
        public virtual DbSet<SiteSettingInfo> Sitesetting { get; set; }
        public virtual DbSet<SiteSigninConfigInfo> Sitesigninconfig { get; set; }
        public virtual DbSet<SkuInfo> Sku { get; set; }
        public virtual DbSet<SlideAdInfo> Slidead { get; set; }
        public virtual DbSet<SpecificationValueInfo> Specificationvalue { get; set; }
        public virtual DbSet<StatisticOrderCommentInfo> Statisticordercomment { get; set; }
        public virtual DbSet<TemplateVisualizationSettingInfo> Templatevisualizationsetting { get; set; }
        public virtual DbSet<ThemeInfo> Theme { get; set; }
        public virtual DbSet<TopicInfo> Topic { get; set; }
        public virtual DbSet<TopicModuleInfo> Topicmodule { get; set; }
        public virtual DbSet<Domain.TypeInfo> Type { get; set; }
        public virtual DbSet<TypeBrandInfo> Typebrand { get; set; }
        public virtual DbSet<VerificationRecordInfo> Verificationrecord { get; set; }
        public virtual DbSet<VirtualOrderItemInfo> Virtualorderitem { get; set; }
        public virtual DbSet<VirtualProductInfo> Virtualproduct { get; set; }
        public virtual DbSet<VirtualProductItemInfo> Virtualproductitem { get; set; }
        public virtual DbSet<VShopInfo> Vshop { get; set; }
        public virtual DbSet<VShopExtendInfo> Vshopextend { get; set; }
        public virtual DbSet<WeiActivityAwardInfo> Weiactivityaward { get; set; }
        public virtual DbSet<WeiActivityInfoInfo> Weiactivityinfo { get; set; }
        public virtual DbSet<WeiActivityWinInfoInfo> Weiactivitywininfo { get; set; }
        public virtual DbSet<WeixinBasicInfo> Weixinbasic { get; set; }
        public virtual DbSet<WeixinMsgTemplateInfo> Weixinmsgtemplate { get; set; }
        public virtual DbSet<WxAccTokenInfo> Wxacctoken { get; set; }
        public virtual DbSet<WxAppletFormDataInfo> Wxappletformdata { get; set; }
        public virtual DbSet<WxCardCodeLogInfo> Wxcardcodelog { get; set; }
        public virtual DbSet<WxCardLogInfo> Wxcardlog { get; set; }
        public virtual DbSet<WxShopInfo> Wxshop { get; set; }
        public virtual DbSet<WxSmallChoiceProductInfo> Wxsmallchoiceproduct { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseMySQL("server=localhost;port=3306;user=root;password=xxxxxxxxxxxxx;database=mall33");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity<AccountInfo>(entity =>
            {
                entity.ToTable("account", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AdvancePaymentAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.Brokerage)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.CommissionAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.FreightAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.PeriodSettlement).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ProductActualPaidAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.RefundAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.RefundCommissionAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.ReturnBrokerage)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasColumnType("int(11)");
            });

            modelBuilder.Entity<AccountDetailInfo>(entity =>
            {
                entity.ToTable("accountdetail", "mall33");

                entity.HasIndex(e => e.AccountId)
                    .HasName("accountdetails_ibfk_1");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AccountId).HasColumnType("bigint(20)");

                entity.Property(e => e.BrokerageAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.CommissionAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.FreightAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.IntegralDiscount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.OrderAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderRefundsDates)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.OrderType).HasColumnType("int(11)");

                entity.Property(e => e.PaymentTypeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductActualPaidAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.RefundCommisAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.RefundTotalAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ReturnBrokerageAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.SettlementAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<AccountMetaInfo>(entity =>
            {
                entity.ToTable("accountmeta", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AccountId).HasColumnType("bigint(20)");

                entity.Property(e => e.MetaKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MetaValue)
                    .IsRequired()
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ActiveInfo>(entity =>
            {
                entity.ToTable("active", "mall33");

                entity.HasIndex(e => e.EndTime)
                    .HasName("IDX_Mall_Active_EndTime");

                entity.HasIndex(e => e.StartTime)
                    .HasName("IDX_Mall_Active_StartTime");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActiveName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ActiveStatus)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ActiveType).HasColumnType("int(11)");

                entity.Property(e => e.IsAllProduct)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.IsAllStore)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ActiveMarketServiceInfo>(entity =>
            {
                entity.ToTable("activemarketservice", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TypeId).HasColumnType("int(11)");
            });

            modelBuilder.Entity<ActiveProductInfo>(entity =>
            {
                entity.ToTable("activeproduct", "mall33");

                entity.HasIndex(e => e.ActiveId)
                    .HasName("IDX_Mall_Accts_ActiveId");

                entity.HasIndex(e => e.ProductId)
                    .HasName("IDX_Mall_Accts_ProdcutId");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.ActiveId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<AgreementInfo>(entity =>
            {
                entity.ToTable("agreement", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AgreementContent)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.AgreementType).HasColumnType("int(4)");
            });

            modelBuilder.Entity<AppbaseSafeSettingInfo>(entity =>
            {
                entity.ToTable("appbasesafesetting", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AppKey)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AppSecret)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ApplyWithdrawInfo>(entity =>
            {
                entity.ToTable("applywithdraw", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ApplyAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ApplyStatus).HasColumnType("int(11)");

                entity.Property(e => e.ApplyType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.MemId).HasColumnType("bigint(20)");

                entity.Property(e => e.NickName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpenId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PayNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Poundage)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AppMessageInfo>(entity =>
            {
                entity.ToTable("appmessage", "mall33");

                entity.Property(e => e.Id).HasColumnType("int(20)");

                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IsRead)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Sendtime).HasColumnName("sendtime");

                entity.Property(e => e.ShopBranchId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SourceId).HasColumnType("bigint(20)");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TypeId).HasColumnType("int(20)");
            });

            modelBuilder.Entity<ArticleInfo>(entity =>
            {
                entity.ToTable("article", "mall33");

                entity.HasIndex(e => e.CategoryId)
                    .HasName("FK_ArticleCategory_Article");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CategoryId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasColumnType("mediumtext");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.IconUrl)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsRelease).HasColumnType("tinyint(1)");

                entity.Property(e => e.MetaDescription)
                    .HasColumnName("Meta_Description")
                    .IsUnicode(false);

                entity.Property(e => e.MetaKeywords)
                    .HasColumnName("Meta_Keywords")
                    .IsUnicode(false);

                entity.Property(e => e.MetaTitle)
                    .HasColumnName("Meta_Title")
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArticleCategoryInfo>(entity =>
            {
                entity.ToTable("articlecategory", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.IsDefault).HasColumnType("tinyint(1)");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParentCategoryId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<Domain.AttributeInfo>(entity =>
            {
                entity.ToTable("attribute", "mall33");

                entity.HasIndex(e => e.TypeId)
                    .HasName("FK_Type_Attribute");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.IsMulti).HasColumnType("tinyint(1)");

                entity.Property(e => e.IsMust).HasColumnType("tinyint(1)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TypeId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<AttributeValueInfo>(entity =>
            {
                entity.ToTable("attributevalue", "mall33");

                entity.HasIndex(e => e.AttributeId)
                    .HasName("FK_Attribute_AttributeValue");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AttributeId).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AutoreplyInfo>(entity =>
            {
                entity.ToTable("autoreply", "mall33");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.IsOpen)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Keyword)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MatchType).HasColumnType("int(11)");

                entity.Property(e => e.MediaId)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ReplyContentType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.ReplyType).HasColumnType("int(11)");

                entity.Property(e => e.RuleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TextReply)
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BannerInfo>(entity =>
            {
                entity.ToTable("banner", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.EnableDelete)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Platform)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Position).HasColumnType("int(11)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.UrlType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<BonusInfo>(entity =>
            {
                entity.ToTable("bonus", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Blessing)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FixedAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ImagePath)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsAttention).HasColumnType("tinyint(1)");

                entity.Property(e => e.IsGuideShare).HasColumnType("tinyint(1)");

                entity.Property(e => e.IsInvalid).HasColumnType("tinyint(1)");

                entity.Property(e => e.MerchantsName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PriceType).HasColumnType("int(11)");

                entity.Property(e => e.Qrpath)
                    .HasColumnName("QRPath")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RandomAmountEnd)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.RandomAmountStart)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ReceiveCount).HasColumnType("int(11)");

                entity.Property(e => e.ReceiveHref)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ReceivePrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Style).HasColumnType("int(11)");

                entity.Property(e => e.TotalPrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.Type).HasColumnType("int(11)");
            });

            modelBuilder.Entity<BonusReceiveInfo>(entity =>
            {
                entity.ToTable("bonusreceive", "mall33");

                entity.HasIndex(e => e.BonusId)
                    .HasName("FK_Reference_1");

                entity.HasIndex(e => e.UserId)
                    .HasName("FK_UserId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BonusId).HasColumnType("bigint(20)");

                entity.Property(e => e.IsShare).HasColumnType("tinyint(1)");

                entity.Property(e => e.IsTransformedDeposit).HasColumnType("tinyint(1)");

                entity.Property(e => e.OpenId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Price).HasColumnType("decimal(18,2)");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<BrandInfo>(entity =>
            {
                entity.ToTable("brand", "mall33");

                entity.HasIndex(e => e.Id)
                    .HasName("Id_2");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.IsDeleted).HasColumnType("bit(1)");

                entity.Property(e => e.IsRecommend).HasColumnType("tinyint(1)");

                entity.Property(e => e.Logo)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.MetaDescription)
                    .HasColumnName("Meta_Description")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.MetaKeywords)
                    .HasColumnName("Meta_Keywords")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.MetaTitle)
                    .HasColumnName("Meta_Title")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RewriteName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BrowsingHistoryInfo>(entity =>
            {
                entity.ToTable("browsinghistory", "mall33");

                entity.HasIndex(e => e.MemberId)
                    .HasName("FK_Mall_BrowsingHistory_Mall_BrowsingHistory");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Mall_BrowsingHistory_Mall_Products");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.MemberId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<BusinessCategoryInfo>(entity =>
            {
                entity.ToTable("businesscategory", "mall33");

                entity.HasIndex(e => e.CategoryId)
                    .HasName("FK_Category_BusinessCategory");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CategoryId).HasColumnType("bigint(20)");

                entity.Property(e => e.CommisRate).HasColumnType("decimal(8,2)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<BusinessCategoryApplyInfo>(entity =>
            {
                entity.ToTable("businesscategoryapply", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AuditedStatus).HasColumnType("int(11)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BusinessCategoryApplyDetailInfo>(entity =>
            {
                entity.ToTable("businesscategoryapplydetail", "mall33");

                entity.HasIndex(e => e.ApplyId)
                    .HasName("FR_BussinessCateApply");

                entity.HasIndex(e => e.CategoryId)
                    .HasName("FR_BussinessCateApply_Cid");

                entity.Property(e => e.Id).HasColumnType("bigint(11)");

                entity.Property(e => e.ApplyId).HasColumnType("bigint(20)");

                entity.Property(e => e.CategoryId).HasColumnType("bigint(20)");

                entity.Property(e => e.CommisRate).HasColumnType("decimal(8,2)");
            });

            modelBuilder.Entity<CapitalInfo>(entity =>
            {
                entity.ToTable("capital", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Balance)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ChargeAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.FreezeAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.MemId).HasColumnType("bigint(20)");

                entity.Property(e => e.PresentAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<CapitalDetailInfo>(entity =>
            {
                entity.ToTable("capitaldetail", "mall33");

                entity.HasIndex(e => e.CapitalId)
                    .HasName("FK_Reference_Mall_CapitalDetail");

                entity.Property(e => e.Id)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.Amount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.CapitalId)
                    .HasColumnName("CapitalID")
                    .HasColumnType("bigint(20)");

                entity.Property(e => e.PresentAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.Remark)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SourceData)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceType).HasColumnType("int(11)");
            });

            modelBuilder.Entity<CashDepositInfo>(entity =>
            {
                entity.ToTable("cashdeposit", "mall33");

                entity.HasIndex(e => e.ShopId)
                    .HasName("FK_Mall_CashDeposit_Mall_Shops");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CurrentBalance)
                    .HasColumnType("decimal(10,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.EnableLabels)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.TotalBalance)
                    .HasColumnType("decimal(10,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<CashDepositDetailInfo>(entity =>
            {
                entity.ToTable("cashdepositdetail", "mall33");

                entity.HasIndex(e => e.CashDepositId)
                    .HasName("KF_Mall_CashDeposit_Mall_CashDepositDetail");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Balance)
                    .HasColumnType("decimal(10,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.CashDepositId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Operator)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RechargeWay).HasColumnType("int(11)");
            });

            modelBuilder.Entity<CategoryInfo>(entity =>
            {
                entity.ToTable("category", "mall33");

                entity.HasIndex(e => e.TypeId)
                    .HasName("FK_Type_Category");

                entity.Property(e => e.Id)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.CommisRate).HasColumnType("decimal(8,2)");

                entity.Property(e => e.Depth).HasColumnType("int(11)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.HasChildren).HasColumnType("tinyint(1)");

                entity.Property(e => e.Icon)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.IsDeleted).HasColumnType("bit(1)");

                entity.Property(e => e.IsShow)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.MetaDescription)
                    .HasColumnName("Meta_Description")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.MetaKeywords)
                    .HasColumnName("Meta_Keywords")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.MetaTitle)
                    .HasColumnName("Meta_Title")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParentCategoryId).HasColumnType("bigint(20)");

                entity.Property(e => e.Path)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RewriteName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SupportVirtualProduct)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.TypeId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<CategoryCashDepositInfo>(entity =>
            {
                entity.HasKey(e => e.CategoryId);

                entity.ToTable("categorycashdeposit", "mall33");

                entity.HasIndex(e => e.CategoryId)
                    .HasName("FK_Mall_CategoriesObligation_Categories");

                entity.Property(e => e.CategoryId)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.EnableNoReasonReturn)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.NeedPayCashDeposit)
                    .HasColumnType("decimal(10,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<ChargeDetailInfo>(entity =>
            {
                entity.ToTable("chargedetail", "mall33");

                entity.Property(e => e.Id)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.ChargeAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ChargeStatus).HasColumnType("int(11)");

                entity.Property(e => e.ChargeWay)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MemId).HasColumnType("bigint(20)");

                entity.Property(e => e.PresentAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<ChargeDetailShopInfo>(entity =>
            {
                entity.ToTable("chargedetailshop", "mall33");

                entity.Property(e => e.Id)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.ChargeAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ChargeStatus).HasColumnType("int(11)");

                entity.Property(e => e.ChargeWay)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<CityExpressConfigInfo>(entity =>
            {
                entity.ToTable("cityexpressconfig", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AppKey)
                    .HasColumnName("app_key")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AppSecret)
                    .HasColumnName("app_secret")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IsEnable)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.SourceId)
                    .HasColumnName("source_id")
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CollocationInfo>(entity =>
            {
                entity.ToTable("collocation", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShortDesc)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CollocationPoruductInfo>(entity =>
            {
                entity.ToTable("collocationporuduct", "mall33");

                entity.HasIndex(e => e.ColloId)
                    .HasName("FK_Collocation_CollPoruducts");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_CollPoruducts");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ColloId).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("int(11)");

                entity.Property(e => e.IsMain).HasColumnType("tinyint(1)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<CollocationSKUInfo>(entity =>
            {
                entity.ToTable("collocationsku", "mall33");

                entity.HasIndex(e => e.ColloProductId)
                    .HasName("FK_ColloPoruducts_CollSkus");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_CollSkus");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ColloProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.Price).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.SkuId)
                    .IsRequired()
                    .HasColumnName("SkuID")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SkuPirce).HasColumnType("decimal(18,2)");
            });

            modelBuilder.Entity<CouponInfo>(entity =>
            {
                entity.ToTable("coupon", "mall33");

                entity.HasIndex(e => e.ShopId)
                    .HasName("FK_Mall_Coupon_Mall_Shops");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CardLogId).HasColumnType("bigint(20)");

                entity.Property(e => e.CouponName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IntegralCover)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IsSyncWeiXin)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.NeedIntegral).HasColumnType("int(11)");

                entity.Property(e => e.Num).HasColumnType("int(11)");

                entity.Property(e => e.OrderAmount).HasColumnType("decimal(18,0)");

                entity.Property(e => e.PerMax).HasColumnType("int(11)");

                entity.Property(e => e.Price).HasColumnType("decimal(18,0)");

                entity.Property(e => e.ReceiveType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Remark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UseArea)
                    .HasColumnType("int(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.WxauditStatus)
                    .HasColumnName("WXAuditStatus")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<CouponProductInfo>(entity =>
            {
                entity.ToTable("couponproduct", "mall33");

                entity.HasIndex(e => e.CouponId)
                    .HasName("CouponId");

                entity.HasIndex(e => e.ProductId)
                    .HasName("ProductId");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.CouponId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<CouponRecordInfo>(entity =>
            {
                entity.ToTable("couponrecord", "mall33");

                entity.HasIndex(e => e.CouponId)
                    .HasName("fk_couponrecord_couponid");

                entity.HasIndex(e => e.ShopId)
                    .HasName("FK_couponrecord_shopid");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CounponSn)
                    .IsRequired()
                    .HasColumnName("CounponSN")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CounponStatus).HasColumnType("int(11)");

                entity.Property(e => e.CouponId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.WxcodeId)
                    .HasColumnName("WXCodeId")
                    .HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<CouponSendByRegisterInfo>(entity =>
            {
                entity.ToTable("couponsendbyregister", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Link)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasColumnType("int(11)");
            });

            modelBuilder.Entity<CouponSendByRegisterDetailedInfo>(entity =>
            {
                entity.ToTable("couponsendbyregisterdetailed", "mall33");

                entity.HasIndex(e => e.CouponId)
                    .HasName("FK_Reference_coupon");

                entity.HasIndex(e => e.CouponRegisterId)
                    .HasName("FK_Reference_z");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CouponId).HasColumnType("bigint(20)");

                entity.Property(e => e.CouponRegisterId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<CouponSettingInfo>(entity =>
            {
                entity.ToTable("couponsetting", "mall33");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.CouponId)
                    .HasColumnName("CouponID")
                    .HasColumnType("bigint(20)");

                entity.Property(e => e.Display).HasColumnType("int(11)");

                entity.Property(e => e.PlatForm).HasColumnType("int(11)");
            });

            modelBuilder.Entity<CustomerServiceInfo>(entity =>
            {
                entity.ToTable("customerservice", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AccountCode)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ServerStatus)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.TerminalType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Tool).HasColumnType("int(11)");

                entity.Property(e => e.Type).HasColumnType("int(11)");
            });

            modelBuilder.Entity<DistributionBrokerageInfo>(entity =>
            {
                entity.ToTable("distributionbrokerage", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BrokerageRate1)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.BrokerageRate2)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.BrokerageRate3)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.BrokerageStatus).HasColumnType("int(11)");

                entity.Property(e => e.MemberId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderItemId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.Quantity).HasColumnType("bigint(20)");

                entity.Property(e => e.RealPayAmount)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.SuperiorId1)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SuperiorId2)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SuperiorId3)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<DistributionProductInfo>(entity =>
            {
                entity.ToTable("distributionproduct", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BrokerageRate1)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.BrokerageRate2)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.BrokerageRate3)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductStatus).HasColumnType("int(11)");

                entity.Property(e => e.SaleAmount)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.SaleCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SettlementAmount)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<DistributionRankingInfo>(entity =>
            {
                entity.ToTable("distributionranking", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Amount).HasColumnType("decimal(10,2)");

                entity.Property(e => e.BatchId).HasColumnType("bigint(20)");

                entity.Property(e => e.MemberId).HasColumnType("bigint(20)");

                entity.Property(e => e.NoSettlement).HasColumnType("decimal(10,2)");

                entity.Property(e => e.Quantity).HasColumnType("int(11)");

                entity.Property(e => e.Settlement).HasColumnType("decimal(10,2)");
            });

            modelBuilder.Entity<DistributionRankingBatchInfo>(entity =>
            {
                entity.ToTable("distributionrankingbatch", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<DistributionShopRateConfigInfo>(entity =>
            {
                entity.ToTable("distributionshoprateconfig", "mall33");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.BrokerageRate1)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.BrokerageRate2)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.BrokerageRate3)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<DistributionWithdrawInfo>(entity =>
            {
                entity.ToTable("distributionwithdraw", "mall33");

                entity.Property(e => e.Id)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.Amount)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.MemberId).HasColumnType("bigint(20)");

                entity.Property(e => e.Operator)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PayNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Poundage)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.WithdrawAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.WithdrawName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.WithdrawStatus).HasColumnType("int(11)");

                entity.Property(e => e.WithdrawType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<DistributorInfo>(entity =>
            {
                entity.HasKey(e => e.MemberId);

                entity.ToTable("distributor", "mall33");

                entity.Property(e => e.MemberId)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.Balance)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.DistributionStatus).HasColumnType("int(11)");

                entity.Property(e => e.FreezeAmount)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.GradeId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.IsShowShopLogo)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.OrderCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ProductCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Remark)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.SaleAmount)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.SettlementAmount)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ShopLogo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShopName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubNumber)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SubProductCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SubSaleAmount)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.SuperiorId).HasColumnType("bigint(20)");

                entity.Property(e => e.WithdrawalsAmount)
                    .HasColumnType("decimal(20,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<DistributorGradeInfo>(entity =>
            {
                entity.ToTable("distributorgrade", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.GradeName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Quota).HasColumnType("decimal(20,2)");
            });

            modelBuilder.Entity<DistributorRecordInfo>(entity =>
            {
                entity.ToTable("distributorrecord", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Amount).HasColumnType("decimal(10,2)");

                entity.Property(e => e.Balance).HasColumnType("decimal(10,2)");

                entity.Property(e => e.MemberId).HasColumnType("bigint(20)");

                entity.Property(e => e.Remark)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Type).HasColumnType("tinyint(4)");
            });

            modelBuilder.Entity<ExpressElementInfo>(entity =>
            {
                entity.ToTable("expresselement", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ElementType).HasColumnType("int(11)");

                entity.Property(e => e.ExpressId).HasColumnType("bigint(20)");

                entity.Property(e => e.LeftTopPointX).HasColumnType("int(11)");

                entity.Property(e => e.LeftTopPointY).HasColumnType("int(11)");

                entity.Property(e => e.RightBottomPointX).HasColumnType("int(11)");

                entity.Property(e => e.RightBottomPointY).HasColumnType("int(11)");
            });

            modelBuilder.Entity<ExpressInfoInfo>(entity =>
            {
                entity.ToTable("expressinfo", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BackGroundImage)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Height).HasColumnType("int(11)");

                entity.Property(e => e.Kuaidi100Code)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KuaidiNiaoCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Logo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasColumnType("int(11)");

                entity.Property(e => e.TaobaoCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Width).HasColumnType("int(11)");
            });

            modelBuilder.Entity<FavoriteInfo>(entity =>
            {
                entity.ToTable("favorite", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_Favorite");

                entity.HasIndex(e => e.UserId)
                    .HasName("FK_Member_Favorite");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.Tags)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<FavoriteShopInfo>(entity =>
            {
                entity.ToTable("favoriteshop", "mall33");

                entity.HasIndex(e => e.ShopId)
                    .HasName("FavoriteShop_fk_1");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.Tags)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<FightGroupInfo>(entity =>
            {
                entity.ToTable("fightgroup", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActiveId).HasColumnType("bigint(20)");

                entity.Property(e => e.GroupStatus).HasColumnType("int(11)");

                entity.Property(e => e.HeadUserId).HasColumnType("bigint(20)");

                entity.Property(e => e.IsException).HasColumnType("bit(1)");

                entity.Property(e => e.JoinedNumber).HasColumnType("int(11)");

                entity.Property(e => e.LimitedHour).HasColumnType("decimal(18,2)");

                entity.Property(e => e.LimitedNumber).HasColumnType("int(11)");

                entity.Property(e => e.ProductId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<FightGroupActiveInfo>(entity =>
            {
                entity.ToTable("fightgroupactive", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActiveTimeStatus)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.GroupCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.IconUrl)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LimitQuantity)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.LimitedHour)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.LimitedNumber)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ManageAuditStatus)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ManageRemark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ManagerId).HasColumnType("bigint(20)");

                entity.Property(e => e.OkGroupCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<FightGroupActiveItemInfo>(entity =>
            {
                entity.ToTable("fightgroupactiveitem", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActiveId).HasColumnType("bigint(20)");

                entity.Property(e => e.ActivePrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ActiveStock).HasColumnType("int(20)");

                entity.Property(e => e.BuyCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.SkuId)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FightGroupOrderInfo>(entity =>
            {
                entity.ToTable("fightgrouporder", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActiveId).HasColumnType("bigint(20)");

                entity.Property(e => e.GroupId).HasColumnType("bigint(20)");

                entity.Property(e => e.IsFirstOrder).HasColumnType("bit(1)");

                entity.Property(e => e.JoinStatus).HasColumnType("int(11)");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderUserId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.Quantity)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SalePrice)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.SkuId)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FlashSaleInfo>(entity =>
            {
                entity.ToTable("flashsale", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_FSProductId3");

                entity.HasIndex(e => e.ShopId)
                    .HasName("FK_FSShopId3");

                entity.HasIndex(e => new { e.ProductId, e.Status, e.BeginDate, e.EndDate })
                    .HasName("IX_ProductId_Status_BeginDate_EndDate");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CategoryName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ImagePath)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LimitCountOfThePeople).HasColumnType("int(11)");

                entity.Property(e => e.MinPrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.SaleCount).HasColumnType("int(11)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.Status).HasColumnType("int(11)");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FlashSaleConfigInfo>(entity =>
            {
                entity.ToTable("flashsaleconfig", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.IsNormalPurchase).HasColumnType("tinyint(1)");

                entity.Property(e => e.Preheat).HasColumnType("int(11)");
            });

            modelBuilder.Entity<FlashSaleDetailInfo>(entity =>
            {
                entity.ToTable("flashsaledetail", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.FlashSaleId).HasColumnType("bigint(20)");

                entity.Property(e => e.Price).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.SkuId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TotalCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<FlashSaleRemindInfo>(entity =>
            {
                entity.ToTable("flashsaleremind", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.FlashSaleId).HasColumnType("bigint(20)");

                entity.Property(e => e.OpenId)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FloorBrandInfo>(entity =>
            {
                entity.ToTable("floorbrand", "mall33");

                entity.HasIndex(e => e.BrandId)
                    .HasName("FK_Brand_FloorBrand");

                entity.HasIndex(e => e.FloorId)
                    .HasName("FK_HomeFloor_FloorBrand");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BrandId).HasColumnType("bigint(20)");

                entity.Property(e => e.FloorId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<FloorCategoryInfo>(entity =>
            {
                entity.ToTable("floorcategory", "mall33");

                entity.HasIndex(e => e.CategoryId)
                    .HasName("FK_Category_FloorCategory");

                entity.HasIndex(e => e.FloorId)
                    .HasName("FK_HomeFloor_FloorCategory");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CategoryId).HasColumnType("bigint(20)");

                entity.Property(e => e.Depth).HasColumnType("int(11)");

                entity.Property(e => e.FloorId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<FloorProductInfo>(entity =>
            {
                entity.ToTable("floorproduct", "mall33");

                entity.HasIndex(e => e.FloorId)
                    .HasName("FK_HomeFloor_FloorProduct");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_FloorProduct");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.FloorId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.Tab).HasColumnType("int(11)");
            });

            modelBuilder.Entity<FloorTablInfo>(entity =>
            {
                entity.ToTable("floortabl", "mall33");

                entity.HasIndex(e => e.FloorId)
                    .HasName("FloorIdFK");

                entity.HasIndex(e => e.Id)
                    .HasName("Id");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.FloorId).HasColumnType("bigint(20)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FloorTablDetailInfo>(entity =>
            {
                entity.ToTable("floortabldetail", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("ProductIdFK");

                entity.HasIndex(e => e.TabId)
                    .HasName("TabIdFK");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.TabId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<FloorTopicInfo>(entity =>
            {
                entity.ToTable("floortopic", "mall33");

                entity.HasIndex(e => e.FloorId)
                    .HasName("FK_HomeFloor_FloorTopic");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.FloorId).HasColumnType("bigint(20)");

                entity.Property(e => e.TopicImage)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TopicName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TopicType).HasColumnType("int(11)");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FreightAreaContentInfo>(entity =>
            {
                entity.ToTable("freightareacontent", "mall33");

                entity.HasIndex(e => e.FreightTemplateId)
                    .HasName("FK_Freighttemalate_FreightAreaContent");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AccumulationUnit).HasColumnType("int(11)");

                entity.Property(e => e.AreaContent)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.FirstUnit).HasColumnType("int(11)");

                entity.Property(e => e.FreightTemplateId).HasColumnType("bigint(20)");

                entity.Property(e => e.IsDefault).HasColumnType("tinyint(4)");
            });

            modelBuilder.Entity<FreightAreaDetailInfo>(entity =>
            {
                entity.ToTable("freightareadetail", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CityId).HasColumnType("int(20)");

                entity.Property(e => e.CountyId).HasColumnType("int(20)");

                entity.Property(e => e.FreightAreaId).HasColumnType("bigint(20)");

                entity.Property(e => e.FreightTemplateId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProvinceId).HasColumnType("int(20)");

                entity.Property(e => e.TownIds)
                    .HasMaxLength(2000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FreightTemplateInfo>(entity =>
            {
                entity.ToTable("freighttemplate", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.IsFree).HasColumnType("int(11)");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SendTime)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShippingMethod).HasColumnType("int(11)");

                entity.Property(e => e.ShopId)
                    .HasColumnName("ShopID")
                    .HasColumnType("bigint(20)");

                entity.Property(e => e.SourceAddress).HasColumnType("int(11)");

                entity.Property(e => e.ValuationMethod).HasColumnType("int(11)");
            });

            modelBuilder.Entity<FullDiscountRuleInfo>(entity =>
            {
                entity.ToTable("fulldiscountrule", "mall33");

                entity.HasIndex(e => e.ActiveId)
                    .HasName("IDX_Mall_Fules_ActiveId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActiveId).HasColumnType("bigint(20)");

                entity.Property(e => e.Discount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.Quota).HasColumnType("decimal(18,2)");
            });

            modelBuilder.Entity<GiftInfo>(entity =>
            {
                entity.ToTable("gift", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Description).HasColumnType("longtext");

                entity.Property(e => e.GiftName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.GiftValue).HasColumnType("decimal(8,2)");

                entity.Property(e => e.ImagePath)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LimtQuantity).HasColumnType("int(11)");

                entity.Property(e => e.NeedGrade)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.NeedIntegral).HasColumnType("int(11)");

                entity.Property(e => e.RealSales)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SalesStatus).HasColumnType("int(11)");

                entity.Property(e => e.Sequence)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("100");

                entity.Property(e => e.StockQuantity).HasColumnType("int(11)");

                entity.Property(e => e.VirtualSales)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<GiftOrderInfo>(entity =>
            {
                entity.ToTable("giftorder", "mall33");

                entity.Property(e => e.Id)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.Address)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CellPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseReason)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ExpressCompanyName)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.OrderStatus).HasColumnType("int(11)");

                entity.Property(e => e.RegionFullName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegionId).HasColumnType("int(11)");

                entity.Property(e => e.ShipOrderNumber)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.ShipTo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TopRegionId).HasColumnType("int(11)");

                entity.Property(e => e.TotalIntegral).HasColumnType("int(11)");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserRemark)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GiftOrderItemInfo>(entity =>
            {
                entity.ToTable("giftorderitem", "mall33");

                entity.HasIndex(e => e.OrderId)
                    .HasName("FK_Mall_Gitem_OrderId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.GiftId).HasColumnType("bigint(20)");

                entity.Property(e => e.GiftName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.GiftValue).HasColumnType("decimal(8,3)");

                entity.Property(e => e.ImagePath)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.Quantity).HasColumnType("int(11)");

                entity.Property(e => e.SaleIntegral).HasColumnType("int(11)");
            });

            modelBuilder.Entity<HandSlideAdInfo>(entity =>
            {
                entity.ToTable("handslidead", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.ImageUrl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HomeCategoryInfo>(entity =>
            {
                entity.ToTable("homecategory", "mall33");

                entity.HasIndex(e => e.CategoryId)
                    .HasName("FK_Category_HomeCategory");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CategoryId).HasColumnType("bigint(20)");

                entity.Property(e => e.Depth).HasColumnType("int(11)");

                entity.Property(e => e.RowId).HasColumnType("int(11)");
            });

            modelBuilder.Entity<HomeCategoryRowInfo>(entity =>
            {
                entity.ToTable("homecategoryrow", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Image1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Image2)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RowId).HasColumnType("int(11)");

                entity.Property(e => e.Url1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Url2)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HomeFloorInfo>(entity =>
            {
                entity.ToTable("homefloor", "mall33");

                entity.HasIndex(e => e.Id)
                    .HasName("Id_2");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CommodityStyle).HasColumnType("int(11)");

                entity.Property(e => e.DefaultTabName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DisplayMode).HasColumnType("int(11)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.FloorName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsShow).HasColumnType("tinyint(1)");

                entity.Property(e => e.StyleLevel).HasColumnType("int(10) unsigned");

                entity.Property(e => e.SubName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ImageAdInfo>(entity =>
            {
                entity.ToTable("imagead", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ImageUrl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsTransverseAd)
                    .HasColumnName("IsTransverseAD")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.TypeId)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IntegralMallAdInfo>(entity =>
            {
                entity.ToTable("integralmallad", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActivityId).HasColumnType("bigint(20)");

                entity.Property(e => e.ActivityType).HasColumnType("int(11)");

                entity.Property(e => e.Cover)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ShowPlatform).HasColumnType("int(11)");

                entity.Property(e => e.ShowStatus).HasColumnType("int(11)");
            });

            modelBuilder.Entity<InviteRecordInfo>(entity =>
            {
                entity.ToTable("inviterecord", "mall33");

                entity.HasIndex(e => e.RegUserId)
                    .HasName("RegMember");

                entity.HasIndex(e => e.UserId)
                    .HasName("InviteMember");

                entity.Property(e => e.Id).HasColumnType("bigint(11)");

                entity.Property(e => e.InviteIntegral).HasColumnType("int(11)");

                entity.Property(e => e.RegIntegral).HasColumnType("int(11)");

                entity.Property(e => e.RegName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegUserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InviteRuleInfo>(entity =>
            {
                entity.ToTable("inviterule", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(11)");

                entity.Property(e => e.InviteIntegral).HasColumnType("int(11)");

                entity.Property(e => e.RegIntegral).HasColumnType("int(11)");

                entity.Property(e => e.ShareDesc)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ShareIcon)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShareRule)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ShareTitle)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvoiceContextInfo>(entity =>
            {
                entity.ToTable("invoicecontext", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvoiceTitleInfo>(entity =>
            {
                entity.ToTable("invoicetitle", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Address)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BankName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BankNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CellPhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Code)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvoiceContext)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("0");

                entity.Property(e => e.InvoiceType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.IsDefault).HasColumnType("tinyint(4)");

                entity.Property(e => e.Name)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RealName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegionId)
                    .HasColumnName("RegionID")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.RegisterAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RegisterPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<LabelInfo>(entity =>
            {
                entity.ToTable("label", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.LabelName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<LogInfo>(entity =>
            {
                entity.ToTable("log", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Ipaddress)
                    .IsRequired()
                    .HasColumnName("IPAddress")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PageUrl)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ManagerInfo>(entity =>
            {
                entity.ToTable("manager", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PasswordSalt)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RealName)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.RoleId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MarketServiceRecordInfo>(entity =>
            {
                entity.ToTable("marketservicerecord", "mall33");

                entity.HasIndex(e => e.MarketServiceId)
                    .HasName("FK_Mall_MarketServiceRecord_Mall_ActiveMarketService");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.MarketServiceId).HasColumnType("bigint(20)");

                entity.Property(e => e.Price)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.SettlementFlag).HasColumnType("int(16) unsigned zerofill");
            });

            modelBuilder.Entity<MarketSettingInfo>(entity =>
            {
                entity.ToTable("marketsetting", "mall33");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.Price).HasColumnType("decimal(18,2)");

                entity.Property(e => e.TypeId).HasColumnType("int(11)");
            });

            modelBuilder.Entity<MarketSettingMetaInfo>(entity =>
            {
                entity.ToTable("marketsettingmeta", "mall33");

                entity.HasIndex(e => e.MarketId)
                    .HasName("FK_Hiamll_MarketSettingMeta_ToSetting");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.MarketId).HasColumnType("int(11)");

                entity.Property(e => e.MetaKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MetaValue).IsUnicode(false);
            });

            modelBuilder.Entity<MemberInfo>(entity =>
            {
                entity.ToTable("member", "mall33");

                entity.HasIndex(e => e.CellPhone)
                    .HasName("IX_CellPhone");

                entity.HasIndex(e => e.Email)
                    .HasName("IX_Email");

                entity.HasIndex(e => e.UserName)
                    .HasName("IX_UserName")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Address)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDay).HasColumnType("date");

                entity.Property(e => e.CellPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Disabled).HasColumnType("tinyint(1)");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Expenditure)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.InviteUserId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.NetAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.Nick)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Occupation)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.OrderNumber).HasColumnType("int(11)");

                entity.Property(e => e.ParentSellerId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PasswordSalt)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PayPwd)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PayPwdSalt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Photo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Platform)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Points).HasColumnType("int(11)");

                entity.Property(e => e.Qq)
                    .HasColumnName("QQ")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RealName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegionId).HasColumnType("int(11)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Sex)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.TopRegionId).HasColumnType("int(11)");

                entity.Property(e => e.TotalAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MemberActivityDegreeInfo>(entity =>
            {
                entity.ToTable("memberactivitydegree", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.OneMonth)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.SixMonth)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.ThreeMonth)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.UserId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<MemberBuyCategoryInfo>(entity =>
            {
                entity.ToTable("memberbuycategory", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CategoryId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrdersCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<MemberConsumeStatisticInfo>(entity =>
            {
                entity.ToTable("memberconsumestatistic", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.NetAmount).HasColumnType("decimal(10,2)");

                entity.Property(e => e.OrderNumber).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<MemberContactInfo>(entity =>
            {
                entity.ToTable("membercontact", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Contact)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ServiceProvider)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserType).HasColumnType("int(11)");
            });

            modelBuilder.Entity<MemberGradeInfo>(entity =>
            {
                entity.ToTable("membergrade", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Discount)
                    .HasColumnType("decimal(8,2)")
                    .HasDefaultValueSql("10.00");

                entity.Property(e => e.GradeName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Integral).HasColumnType("int(11)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MemberGroupInfo>(entity =>
            {
                entity.ToTable("membergroup", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.StatisticsType).HasColumnType("int(11)");

                entity.Property(e => e.Total).HasColumnType("int(11)");
            });

            modelBuilder.Entity<MemberIntegralInfo>(entity =>
            {
                entity.ToTable("memberintegral", "mall33");

                entity.HasIndex(e => e.MemberId)
                    .HasName("FK_Member_MemberIntegral");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AvailableIntegrals).HasColumnType("int(11)");

                entity.Property(e => e.HistoryIntegrals).HasColumnType("int(11)");

                entity.Property(e => e.MemberId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MemberIntegralExchangeRuleInfo>(entity =>
            {
                entity.ToTable("memberintegralexchangerule", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.IntegralPerMoney).HasColumnType("int(11)");

                entity.Property(e => e.MoneyPerIntegral).HasColumnType("int(11)");
            });

            modelBuilder.Entity<MemberIntegralRecordInfo>(entity =>
            {
                entity.ToTable("memberintegralrecord", "mall33");

                entity.HasIndex(e => e.MemberId)
                    .HasName("fk_MemberId_Members");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Integral).HasColumnType("int(11)");

                entity.Property(e => e.MemberId).HasColumnType("bigint(20)");

                entity.Property(e => e.ReMark)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TypeId).HasColumnType("int(11)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MemberIntegralRecordActionInfo>(entity =>
            {
                entity.ToTable("memberintegralrecordaction", "mall33");

                entity.HasIndex(e => e.IntegralRecordId)
                    .HasName("fk_IntegralRecordId_MemberIntegralRecord");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.IntegralRecordId).HasColumnType("bigint(20)");

                entity.Property(e => e.VirtualItemId).HasColumnType("bigint(20)");

                entity.Property(e => e.VirtualItemTypeId).HasColumnType("int(11)");
            });

            modelBuilder.Entity<MemberIntegralRuleInfo>(entity =>
            {
                entity.ToTable("memberintegralrule", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Integral).HasColumnType("int(11)");

                entity.Property(e => e.TypeId).HasColumnType("int(11)");
            });

            modelBuilder.Entity<MemberLabelInfo>(entity =>
            {
                entity.ToTable("memberlabel", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.LabelId).HasColumnType("bigint(20)");

                entity.Property(e => e.MemId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<MemberOpenIdInfo>(entity =>
            {
                entity.ToTable("memberopenid", "mall33");

                entity.HasIndex(e => e.UserId)
                    .HasName("FK_Member_MemberOpenId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AppIdType).HasColumnType("int(255)");

                entity.Property(e => e.OpenId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ServiceProvider)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnionId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnionOpenId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<MemberSigninInfo>(entity =>
            {
                entity.ToTable("membersignin", "mall33");

                entity.HasIndex(e => e.UserId)
                    .HasName("IDX_Mall_MenIn_UserId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DurationDay)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.DurationDaySum)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SignDaySum)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<MenuInfo>(entity =>
            {
                entity.ToTable("menu", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Depth).HasColumnType("smallint(6)");

                entity.Property(e => e.FullIdPath)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParentId).HasColumnType("bigint(20)");

                entity.Property(e => e.Platform).HasColumnType("int(11)");

                entity.Property(e => e.Sequence).HasColumnType("smallint(6)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Url)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.UrlType).HasColumnType("int(11)");
            });

            modelBuilder.Entity<MessageLogInfo>(entity =>
            {
                entity.ToTable("messagelog", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.MessageContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.TypeId)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MobileFootMenuInfo>(entity =>
            {
                entity.ToTable("mobilefootmenu", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.MenuIcon)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Url)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MobileHomeProductInfo>(entity =>
            {
                entity.ToTable("mobilehomeproduct", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Mall_MobileHomeProducts_Mall_Products");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.PlatFormType).HasColumnType("int(11)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.Sequence).HasColumnType("smallint(6)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<MobileHomeTopicInfo>(entity =>
            {
                entity.ToTable("mobilehometopic", "mall33");

                entity.HasIndex(e => e.TopicId)
                    .HasName("FK__Mall_Mo__Topic__02C769E9");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Platform).HasColumnType("int(11)");

                entity.Property(e => e.Sequence)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.TopicId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ModuleProductInfo>(entity =>
            {
                entity.ToTable("moduleproduct", "mall33");

                entity.HasIndex(e => e.ModuleId)
                    .HasName("FK_TopicModule_ModuleProduct");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_ModuleProduct");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.ModuleId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<OpenIdInfo>(entity =>
            {
                entity.ToTable("openid", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.IsSubscribe).HasColumnType("tinyint(1)");

                entity.Property(e => e.OpenId1)
                    .IsRequired()
                    .HasColumnName("OpenId")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SubscribeTime).HasColumnType("date");
            });

            modelBuilder.Entity<OrderInfo>(entity =>
            {
                entity.ToTable("order", "mall33");

                entity.Property(e => e.Id)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.ActiveType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ActualPayAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CancelReason)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CapitalAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.CellPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseReason)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.CommisTotalAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.CouponId).HasColumnType("bigint(20)");

                entity.Property(e => e.DadaStatus)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.DeliveryType).HasColumnType("int(11)");

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ExpressCompanyName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Freight).HasColumnType("decimal(8,2)");

                entity.Property(e => e.FullDiscount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.GatewayOrderId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IntegralDiscount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.IsPrinted).HasColumnType("tinyint(1)");

                entity.Property(e => e.OrderRemarks)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.OrderStatus).HasColumnType("int(11)");

                entity.Property(e => e.OrderType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.PayRemark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.PaymentType).HasColumnType("int(11)");

                entity.Property(e => e.PaymentTypeGateway)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaymentTypeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PickupCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Platform)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ProductTotalAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ReceiveLatitude).HasDefaultValueSql("0");

                entity.Property(e => e.ReceiveLongitude).HasDefaultValueSql("0");

                entity.Property(e => e.RefundCommisAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.RefundTotalAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.RegionFullName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegionId).HasColumnType("int(11)");

                entity.Property(e => e.SellerAddress)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SellerPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SellerRemark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SellerRemarkFlag).HasColumnType("int(11)");

                entity.Property(e => e.ShipOrderNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShipTo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopBranchId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Tax).HasColumnType("decimal(8,2)");

                entity.Property(e => e.TopRegionId).HasColumnType("int(11)");

                entity.Property(e => e.TotalAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserRemark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OrderCommentInfo>(entity =>
            {
                entity.ToTable("ordercomment", "mall33");

                entity.HasIndex(e => e.OrderId)
                    .HasName("FK_Order_OrderComment");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DeliveryMark).HasColumnType("int(11)");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.PackMark).HasColumnType("int(11)");

                entity.Property(e => e.ServiceMark).HasColumnType("int(11)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OrderComplaintInfo>(entity =>
            {
                entity.ToTable("ordercomplaint", "mall33");

                entity.HasIndex(e => e.OrderId)
                    .HasName("FK_Order_OrderComplaint");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ComplaintReason)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.PlatRemark)
                    .HasMaxLength(10000)
                    .IsUnicode(false);

                entity.Property(e => e.SellerReply)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopPhone)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasColumnType("int(11)");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OrderExpressDataInfo>(entity =>
            {
                entity.ToTable("orderexpressdata", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DataContent)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.ExpressNumber)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OrderInvoiceInfo>(entity =>
            {
                entity.ToTable("orderinvoice", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Address)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BankName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BankNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CellPhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvoiceCode)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.InvoiceContext)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvoiceTitle)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvoiceType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.OrderId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.RealName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegionId)
                    .HasColumnName("RegionID")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.RegisterAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RegisterPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VatInvoiceDay)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<OrderItemInfo>(entity =>
            {
                entity.ToTable("orderitem", "mall33");

                entity.HasIndex(e => e.OrderId)
                    .HasName("FK_Order_OrderItem");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Color)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CommisRate).HasColumnType("decimal(18,2)");

                entity.Property(e => e.CostPrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.CouponDiscount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.DiscountAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.EnabledRefundAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.EnabledRefundIntegral).HasColumnType("decimal(18,2)");

                entity.Property(e => e.FlashSaleId)
                    .HasColumnType("bigint(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.FullDiscount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.IsLimitBuy)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Quantity).HasColumnType("bigint(20)");

                entity.Property(e => e.RealTotalPrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.RefundPrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ReturnQuantity).HasColumnType("bigint(20)");

                entity.Property(e => e.SalePrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.Size)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Sku)
                    .HasColumnName("SKU")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SkuId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ThumbnailsUrl)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Version)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OrderOperationLogInfo>(entity =>
            {
                entity.ToTable("orderoperationlog", "mall33");

                entity.HasIndex(e => e.OrderId)
                    .HasName("FK_Order_OrderOperationLog");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.OperateContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Operator)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<OrderPayInfo>(entity =>
            {
                entity.ToTable("orderpay", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.PayId).HasColumnType("bigint(20)");

                entity.Property(e => e.PayState).HasColumnType("tinyint(1) unsigned zerofill");
            });

            modelBuilder.Entity<OrderRefundInfo>(entity =>
            {
                entity.ToTable("orderrefund", "mall33");

                entity.HasIndex(e => e.OrderItemId)
                    .HasName("FK_OrderItem_OrderRefund");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Amount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.Applicant)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ApplyNumber).HasColumnType("int(11)");

                entity.Property(e => e.CertPic1)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CertPic2)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CertPic3)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ContactCellPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExpressCompanyName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsReturn).HasColumnType("tinyint(1)");

                entity.Property(e => e.ManagerConfirmStatus).HasColumnType("int(11)");

                entity.Property(e => e.ManagerRemark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderItemId).HasColumnType("bigint(20)");

                entity.Property(e => e.Payee)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PayeeAccount)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ReasonDetail)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.RefundAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RefundBatchNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RefundMode).HasColumnType("int(11)");

                entity.Property(e => e.RefundPayStatus)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("2");

                entity.Property(e => e.RefundPayType).HasColumnType("int(11)");

                entity.Property(e => e.ReturnPlatCommission)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ReturnQuantity)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SellerAuditStatus).HasColumnType("int(11)");

                entity.Property(e => e.SellerRemark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ShipOrderNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.VerificationCodeIds)
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OrderRefundLogInfo>(entity =>
            {
                entity.ToTable("orderrefundlog", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ApplyNumber).HasColumnType("int(11)");

                entity.Property(e => e.OperateContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Operator)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RefundId).HasColumnType("bigint(20)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Step).HasColumnType("smallint(6)");
            });

            modelBuilder.Entity<OrderVerificationCodeInfo>(entity =>
            {
                entity.ToTable("orderverificationcode", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderItemId).HasColumnType("bigint(20)");

                entity.Property(e => e.Status).HasColumnType("tinyint(4)");

                entity.Property(e => e.VerificationCode)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.VerificationUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PaymentConfigInfo>(entity =>
            {
                entity.ToTable("paymentconfig", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.IsCashOnDelivery).HasColumnType("tinyint(1)");
            });

            modelBuilder.Entity<PendingSettlementOrderInfo>(entity =>
            {
                entity.ToTable("pendingsettlementorder", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CreateDate).HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.DistributorCommission)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.DistributorCommissionReturn)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.FreightAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.IntegralDiscount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.OrderAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderType).HasColumnType("int(11)");

                entity.Property(e => e.PaymentTypeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PlatCommission)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.PlatCommissionReturn)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ProductsAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.RefundAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.SettlementAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<PhotoSpaceInfo>(entity =>
            {
                entity.ToTable("photospace", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.FileSize).HasColumnType("bigint(20)");

                entity.Property(e => e.PhotoCategoryId).HasColumnType("bigint(20)");

                entity.Property(e => e.PhotoName)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.PhotoPath)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<PhotoSpaceCategoryInfo>(entity =>
            {
                entity.ToTable("photospacecategory", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.PhotoSpaceCatrgoryName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<PlatAccountInfo>(entity =>
            {
                entity.ToTable("plataccount", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Balance)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.PendingSettlement)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.Settled)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<PlatAccountItemInfo>(entity =>
            {
                entity.ToTable("plataccountitem", "mall33");

                entity.HasIndex(e => e.AccoutId)
                    .HasName("FK_Mall_Pltem_AccoutID");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AccountNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccoutId)
                    .HasColumnName("AccoutID")
                    .HasColumnType("bigint(20)");

                entity.Property(e => e.Amount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.Balance)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.DetailId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsIncome).HasColumnType("bit(1)");

                entity.Property(e => e.ReMark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.TradeType)
                    .HasColumnType("int(4)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<PlatVisitInfo>(entity =>
            {
                entity.ToTable("platvisit", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.OrderCount).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderPayCount).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderPayUserCount).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderProductCount).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderUserCount).HasColumnType("bigint(20)");

                entity.Property(e => e.SaleAmounts).HasColumnType("decimal(18,2)");

                entity.Property(e => e.SaleCounts).HasColumnType("bigint(20)");

                entity.Property(e => e.StatisticFlag).HasColumnType("bit(1)");

                entity.Property(e => e.VisitCounts).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ProductInfo>(entity =>
            {
                entity.ToTable("product", "mall33");

                entity.HasIndex(e => e.AuditStatus)
                    .HasName("IX_AuditStatus");

                entity.HasIndex(e => e.CategoryId)
                    .HasName("FK_CategoryId");

                entity.HasIndex(e => e.IsDeleted)
                    .HasName("IX_IsDeleted");

                entity.HasIndex(e => e.SaleStatus)
                    .HasName("IX_SaleStatus");

                entity.HasIndex(e => e.ShopId)
                    .HasName("IX_ShopId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AuditStatus).HasColumnType("int(11)");

                entity.Property(e => e.BrandId).HasColumnType("bigint(20)");

                entity.Property(e => e.CategoryId).HasColumnType("bigint(20)");

                entity.Property(e => e.CategoryPath)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ColorAlias)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.EditStatus)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.FreightTemplateId).HasColumnType("bigint(20)");

                entity.Property(e => e.HasSku)
                    .HasColumnName("HasSKU")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.ImagePath)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsDeleted).HasColumnType("bit(1)");

                entity.Property(e => e.IsOpenLadder)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MarketPrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.MaxBuyCount).HasColumnType("int(11)");

                entity.Property(e => e.MeasureUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MinSalePrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductType).HasColumnType("tinyint(4)");

                entity.Property(e => e.Quantity)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SaleCounts).HasColumnType("bigint(20)");

                entity.Property(e => e.SaleStatus).HasColumnType("int(11)");

                entity.Property(e => e.ShopDisplaySequence)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShortDescription)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SizeAlias)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TypeId).HasColumnType("bigint(20)");

                entity.Property(e => e.VersionAlias)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VideoPath)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.VirtualSaleCounts)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.VistiCounts).HasColumnType("bigint(20)");

                entity.Property(e => e.Volume)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.Weight)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<ProductAttributeInfo>(entity =>
            {
                entity.ToTable("productattribute", "mall33");

                entity.HasIndex(e => e.AttributeId)
                    .HasName("FK_Attribute_ProductAttribute");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_ProductAttribute");

                entity.HasIndex(e => e.ValueId)
                    .HasName("IX_ValueId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AttributeId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.ValueId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ProductCommentInfo>(entity =>
            {
                entity.ToTable("productcomment", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_ProductComment");

                entity.HasIndex(e => e.ShopId)
                    .HasName("ShopId");

                entity.HasIndex(e => e.SubOrderId)
                    .HasName("SubOrderId");

                entity.HasIndex(e => e.UserId)
                    .HasName("UserId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AppendContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.IsHidden)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.ReplyAppendContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ReplyContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ReviewContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ReviewMark).HasColumnType("int(11)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SubOrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ProductCommentImageInfo>(entity =>
            {
                entity.ToTable("productcommentimage", "mall33");

                entity.HasIndex(e => e.CommentId)
                    .HasName("FR_CommentImages");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CommentId).HasColumnType("bigint(20)");

                entity.Property(e => e.CommentImage)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CommentType).HasColumnType("int(11)");
            });

            modelBuilder.Entity<ProductConsultationInfo>(entity =>
            {
                entity.ToTable("productconsultation", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_ProductConsultation");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ConsultationContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.ReplyContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ProductDescriptionInfo>(entity =>
            {
                entity.HasKey(e => e.ProductId);

                entity.ToTable("productdescription", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_ProductDescription");

                entity.Property(e => e.ProductId)
                    .HasColumnType("bigint(20)")
                    .ValueGeneratedNever();

                entity.Property(e => e.AuditReason)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.DescriptionPrefixId).HasColumnType("bigint(20)");

                entity.Property(e => e.DescriptiondSuffixId).HasColumnType("bigint(20)");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.MetaDescription)
                    .HasColumnName("Meta_Description")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.MetaKeywords)
                    .HasColumnName("Meta_Keywords")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.MetaTitle)
                    .HasColumnName("Meta_Title")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.MobileDescription).IsUnicode(false);
            });

            modelBuilder.Entity<ProductDescriptionTemplateInfo>(entity =>
            {
                entity.ToTable("productdescriptiontemplate", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.MobileContent)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Position).HasColumnType("int(11)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ProductLadderPriceInfo>(entity =>
            {
                entity.ToTable("productladderprice", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.MaxBath).HasColumnType("int(11)");

                entity.Property(e => e.MinBath).HasColumnType("int(11)");

                entity.Property(e => e.Price).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ProductRelationProductInfo>(entity =>
            {
                entity.ToTable("productrelationproduct", "mall33");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.Relation)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ProductShopCategoryInfo>(entity =>
            {
                entity.ToTable("productshopcategory", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_ProductShopCategory");

                entity.HasIndex(e => e.ShopCategoryId)
                    .HasName("FK_ShopCategory_ProductShopCategory");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopCategoryId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ProductVistiInfo>(entity =>
            {
                entity.ToTable("productvisti", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_ProductVisti");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderCounts)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.PayUserCounts).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.SaleAmounts).HasColumnType("decimal(18,2)");

                entity.Property(e => e.SaleCounts).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.StatisticFlag).HasColumnType("bit(1)");

                entity.Property(e => e.VisitUserCounts).HasColumnType("bigint(20)");

                entity.Property(e => e.VistiCounts).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ReceivingAddressConfigInfo>(entity =>
            {
                entity.ToTable("receivingaddressconfig", "mall33");

                entity.HasIndex(e => e.ShopId)
                    .HasName("FK_RACShopId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AddressId)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.AddressIdCity)
                    .HasColumnName("AddressId_City")
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<RechargePresentRuleInfo>(entity =>
            {
                entity.ToTable("rechargepresentrule", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ChargeAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.PresentAmount).HasColumnType("decimal(18,2)");
            });

            modelBuilder.Entity<RefundReasonInfo>(entity =>
            {
                entity.ToTable("refundreason", "mall33");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.AfterSalesText)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Sequence)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("100");
            });

            modelBuilder.Entity<RoleInfo>(entity =>
            {
                entity.ToTable("role", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.RoleName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<RolePrivilegeInfo>(entity =>
            {
                entity.ToTable("roleprivilege", "mall33");

                entity.HasIndex(e => e.RoleId)
                    .HasName("FK_Role_RolePrivilege");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Privilege).HasColumnType("int(11)");

                entity.Property(e => e.RoleId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<SearchProductInfo>(entity =>
            {
                entity.ToTable("searchproduct", "mall33");

                entity.HasIndex(e => e.BrandId)
                    .HasName("IX_BrandId");

                entity.HasIndex(e => e.CanSearch)
                    .HasName("IX_CanSearch");

                entity.HasIndex(e => e.Comments)
                    .HasName("IX_Comments");

                entity.HasIndex(e => e.FirstCateId)
                    .HasName("IX_FirstCateId");

                entity.HasIndex(e => e.OnSaleTime)
                    .HasName("IX_OnSaleTime");

                entity.HasIndex(e => e.ProductId)
                    .HasName("IX_ProductId")
                    .IsUnique();

                entity.HasIndex(e => e.ProductName)
                    .HasName("ProductName");

                entity.HasIndex(e => e.SaleCount)
                    .HasName("IX_SaleCount");

                entity.HasIndex(e => e.SalePrice)
                    .HasName("IX_SalePrice");

                entity.HasIndex(e => e.SecondCateId)
                    .HasName("IX_SecondCateId");

                entity.HasIndex(e => e.ShopId)
                    .HasName("IX_ShopId");

                entity.HasIndex(e => e.ThirdCateId)
                    .HasName("IX_ThirdCateId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AttrValues).IsUnicode(false);

                entity.Property(e => e.BrandId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.BrandLogo)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.BrandName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CanSearch)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Comments)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.FirstCateId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.FirstCateName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ImagePath)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SaleCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SalePrice)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.SecondCateId).HasColumnType("bigint(20)");

                entity.Property(e => e.SecondCateName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ThirdCateId).HasColumnType("bigint(20)");

                entity.Property(e => e.ThirdCateName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SellerSpecificationValueInfo>(entity =>
            {
                entity.ToTable("sellerspecificationvalue", "mall33");

                entity.HasIndex(e => e.ValueId)
                    .HasName("FK_SpecificationValue_SellerSpecificationValue");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.Specification).HasColumnType("int(11)");

                entity.Property(e => e.TypeId).HasColumnType("bigint(20)");

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ValueId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<SendMessageRecordInfo>(entity =>
            {
                entity.ToTable("sendmessagerecord", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ContentType).HasColumnType("int(11)");

                entity.Property(e => e.MessageType).HasColumnType("int(11)");

                entity.Property(e => e.SendContent)
                    .IsRequired()
                    .HasMaxLength(600)
                    .IsUnicode(false);

                entity.Property(e => e.SendState).HasColumnType("int(11)");

                entity.Property(e => e.ToUserLabel)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SendMessageRecordCouponInfo>(entity =>
            {
                entity.ToTable("sendmessagerecordcoupon", "mall33");

                entity.HasIndex(e => e.CouponId)
                    .HasName("FK_Reference_messageCoupon");

                entity.HasIndex(e => e.MessageId)
                    .HasName("FK_Reference_message");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CouponId).HasColumnType("bigint(20)");

                entity.Property(e => e.MessageId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<SendMessageRecordCouponSnInfo>(entity =>
            {
                entity.ToTable("sendmessagerecordcouponsn", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CouponSn)
                    .IsRequired()
                    .HasColumnName("CouponSN")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MessageId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<SensitiveWordInfo>(entity =>
            {
                entity.ToTable("sensitiveword", "mall33");

                entity.HasIndex(e => e.Id)
                    .HasName("Id");

                entity.Property(e => e.Id).HasColumnType("int(4)");

                entity.Property(e => e.CategoryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SensitiveWord1)
                    .HasColumnName("SensitiveWord")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SettledInfo>(entity =>
            {
                entity.ToTable("settled", "mall33");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("bigint(20)");

                entity.Property(e => e.BusinessType).HasColumnType("int(11)");

                entity.Property(e => e.CompanyVerificationType).HasColumnType("int(11)");

                entity.Property(e => e.IsAddress).HasColumnType("int(11)");

                entity.Property(e => e.IsAgencyCode).HasColumnType("int(11)");

                entity.Property(e => e.IsAgencyCodeLicense).HasColumnType("int(11)");

                entity.Property(e => e.IsBusinessLicense).HasColumnType("int(11)");

                entity.Property(e => e.IsBusinessLicenseCode).HasColumnType("int(11)");

                entity.Property(e => e.IsBusinessScope).HasColumnType("int(11)");

                entity.Property(e => e.IsCity).HasColumnType("int(11)");

                entity.Property(e => e.IsPeopleNumber).HasColumnType("int(11)");

                entity.Property(e => e.IsSaddress)
                    .HasColumnName("IsSAddress")
                    .HasColumnType("int(11)");

                entity.Property(e => e.IsScity)
                    .HasColumnName("IsSCity")
                    .HasColumnType("int(11)");

                entity.Property(e => e.IsSidCardUrl)
                    .HasColumnName("IsSIdCardUrl")
                    .HasColumnType("int(11)");

                entity.Property(e => e.IsSidcard)
                    .HasColumnName("IsSIDCard")
                    .HasColumnType("int(11)");

                entity.Property(e => e.IsSname)
                    .HasColumnName("IsSName")
                    .HasColumnType("int(11)");

                entity.Property(e => e.IsTaxpayerToProve).HasColumnType("int(11)");

                entity.Property(e => e.SelfVerificationType).HasColumnType("int(11)");

                entity.Property(e => e.SettlementAccountType).HasColumnType("int(11)");

                entity.Property(e => e.TrialDays).HasColumnType("int(11)");
            });

            modelBuilder.Entity<ShippingAddressInfo>(entity =>
            {
                entity.ToTable("shippingaddress", "mall33");

                entity.HasIndex(e => e.UserId)
                    .HasName("FK_Member_ShippingAddress");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AddressDetail)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsDefault).HasColumnType("tinyint(1)");

                entity.Property(e => e.IsQuick).HasColumnType("tinyint(1)");

                entity.Property(e => e.Latitude).HasDefaultValueSql("0");

                entity.Property(e => e.Longitude).HasDefaultValueSql("0");

                entity.Property(e => e.Phone)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegionId).HasColumnType("int(11)");

                entity.Property(e => e.ShipTo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShippingFreeGroupInfo>(entity =>
            {
                entity.ToTable("shippingfreegroup", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ConditionNumber)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ConditionType).HasColumnType("int(11)");

                entity.Property(e => e.TemplateId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShippingFreeRegionInfo>(entity =>
            {
                entity.ToTable("shippingfreeregion", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.GroupId).HasColumnType("bigint(20)");

                entity.Property(e => e.RegionId).HasColumnType("int(11)");

                entity.Property(e => e.RegionPath)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TemplateId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopInfo>(entity =>
            {
                entity.ToTable("shop", "mall33");

                entity.HasIndex(e => e.IsSelf)
                    .HasName("IX_ShopIsSelf");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AutoAllotOrder).HasColumnType("tinyint(1)");

                entity.Property(e => e.BankAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BankAccountNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BankCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BankName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BankPhoto)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BankRegionId).HasColumnType("int(11)");

                entity.Property(e => e.BusinessLicenceNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessLicenceNumberPhoto)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessLicenceRegionId).HasColumnType("int(11)");

                entity.Property(e => e.BusinessLicenseCert)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessSphere)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessType)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.CompanyAddress)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEmployeeCount).HasColumnType("int(11)");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyRegionId).HasColumnType("int(11)");

                entity.Property(e => e.CompanyRegisteredCapital).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ContactsEmail)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ContactsName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ContactsPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FreeFreight).HasColumnType("decimal(18,2)");

                entity.Property(e => e.Freight).HasColumnType("decimal(18,2)");

                entity.Property(e => e.GeneralTaxpayerPhot)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.GradeId).HasColumnType("bigint(20)");

                entity.Property(e => e.Idcard)
                    .HasColumnName("IDCard")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdcardUrl)
                    .HasColumnName("IDCardUrl")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IdcardUrl2)
                    .HasColumnName("IDCardUrl2")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IsAutoPrint)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.IsOpenTopImageAd)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.IsSelf).HasColumnType("tinyint(1)");

                entity.Property(e => e.LegalPerson)
                    .HasColumnName("legalPerson")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Logo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrganizationCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrganizationCodePhoto)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OtherCert)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.PayPhoto)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PayRemark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.PrintCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ProductCert)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.RefuseReason)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SenderAddress)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SenderName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SenderPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SenderRegionId)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopStatus).HasColumnType("int(11)");

                entity.Property(e => e.Stage)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SubDomains)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TaxRegistrationCertificate)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TaxRegistrationCertificatePhoto)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TaxpayerId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Theme)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.WeiXinAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.WeiXinImg)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.WeiXinNickName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.WeiXinOpenId)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.WeiXinSex)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.WeiXinTrueName)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShopAccountInfo>(entity =>
            {
                entity.ToTable("shopaccount", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Balance)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.PendingSettlement)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ReMark)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Settled)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShopAccountItemInfo>(entity =>
            {
                entity.ToTable("shopaccountitem", "mall33");

                entity.HasIndex(e => e.AccoutId)
                    .HasName("FK_Mall_Shtem_AccoutID");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AccountNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccoutId)
                    .HasColumnName("AccoutID")
                    .HasColumnType("bigint(20)");

                entity.Property(e => e.Amount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.Balance)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.DetailId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsIncome).HasColumnType("bit(1)");

                entity.Property(e => e.ReMark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SettlementCycle).HasColumnType("int(11)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TradeType)
                    .HasColumnType("int(4)")
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<ShopBonusInfo>(entity =>
            {
                entity.ToTable("shopbonus", "mall33");

                entity.HasIndex(e => e.ShopId)
                    .HasName("FK_zzzShopId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CardColor)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CardSubtitle)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CardTitle)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Count).HasColumnType("int(11)");

                entity.Property(e => e.GrantPrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.IsInvalid).HasColumnType("tinyint(1)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Qrpath)
                    .IsRequired()
                    .HasColumnName("QRPath")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.RandomAmountEnd).HasColumnType("decimal(18,2)");

                entity.Property(e => e.RandomAmountStart).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ReceiveCount).HasColumnType("int(11)");

                entity.Property(e => e.ShareDetail)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ShareImg)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShareTitle)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.SynchronizeCard).HasColumnType("tinyint(1)");

                entity.Property(e => e.UseState).HasColumnType("int(11)");

                entity.Property(e => e.UsrStatePrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.WxcardState)
                    .HasColumnName("WXCardState")
                    .HasColumnType("int(255)");
            });

            modelBuilder.Entity<ShopBonusGrantInfo>(entity =>
            {
                entity.ToTable("shopbonusgrant", "mall33");

                entity.HasIndex(e => e.ShopBonusId)
                    .HasName("FK_ShopBonusId");

                entity.HasIndex(e => e.UserId)
                    .HasName("FK_zzzUserID");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BonusQr)
                    .IsRequired()
                    .HasColumnName("BonusQR")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopBonusId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopBonusReceiveInfo>(entity =>
            {
                entity.ToTable("shopbonusreceive", "mall33");

                entity.HasIndex(e => e.BonusGrantId)
                    .HasName("FK_BonusGrantId");

                entity.HasIndex(e => e.UserId)
                    .HasName("FK_useUserID");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BonusGrantId).HasColumnType("bigint(20)");

                entity.Property(e => e.OpenId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Price).HasColumnType("decimal(18,2)");

                entity.Property(e => e.State).HasColumnType("int(11)");

                entity.Property(e => e.UsedOrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Wxhead)
                    .HasColumnName("WXHead")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Wxname)
                    .HasColumnName("WXName")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShopBranchInfo>(entity =>
            {
                entity.ToTable("shopbranch", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AddressDetail)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AddressId).HasColumnType("int(11)");

                entity.Property(e => e.AddressPath)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPhone)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactUser)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DaDaShopId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DeliveFee)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.DeliveTotalFee)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.EnableSellerManager)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.FreeMailFee)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.IsAboveSelf)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.IsAutoPrint)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.IsFreeMail)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.IsRecommend)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.IsShelvesProduct)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.IsStoreDelive)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.Latitude).HasDefaultValueSql("0");

                entity.Property(e => e.Longitude).HasDefaultValueSql("0");

                entity.Property(e => e.PrintCount)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.RecommendSequence)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ServeRadius)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopBranchName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopImages)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasColumnType("int(11)");

                entity.Property(e => e.StoreOpenEndTime).HasDefaultValueSql("20:00:00");

                entity.Property(e => e.StoreOpenStartTime).HasDefaultValueSql("08:00:00");
            });

            modelBuilder.Entity<ShopBranchIntagInfo>(entity =>
            {
                entity.ToTable("shopbranchintag", "mall33");

                entity.HasIndex(e => e.ShopBranchId)
                    .HasName("FK_ShopBranchId");

                entity.HasIndex(e => e.ShopBranchTagId)
                    .HasName("FK_ShopBranchTagId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopBranchId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopBranchTagId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopBranchManagerInfo>(entity =>
            {
                entity.ToTable("shopbranchmanager", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PasswordSalt)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RealName)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ShopBranchId).HasColumnType("bigint(20)");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShopBranchSKUInfo>(entity =>
            {
                entity.ToTable("shopbranchsku", "mall33");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopBranchId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.SkuId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasColumnType("int(11)");

                entity.Property(e => e.Stock).HasColumnType("int(11)");
            });

            modelBuilder.Entity<ShopBranchTagInfo>(entity =>
            {
                entity.ToTable("shopbranchtag", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Title)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShopBrandInfo>(entity =>
            {
                entity.ToTable("shopbrand", "mall33");

                entity.HasIndex(e => e.BrandId)
                    .HasName("BrandId");

                entity.HasIndex(e => e.Id)
                    .HasName("Id");

                entity.HasIndex(e => e.ShopId)
                    .HasName("ShopId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BrandId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopBrandApplyInfo>(entity =>
            {
                entity.ToTable("shopbrandapply", "mall33");

                entity.HasIndex(e => e.BrandId)
                    .HasName("FK_BrandId");

                entity.HasIndex(e => e.Id)
                    .HasName("Id");

                entity.HasIndex(e => e.ShopId)
                    .HasName("FK_ShopId");

                entity.Property(e => e.Id).HasColumnType("int(11)");

                entity.Property(e => e.ApplyMode).HasColumnType("int(11)");

                entity.Property(e => e.AuditStatus).HasColumnType("int(11)");

                entity.Property(e => e.AuthCertificate)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.BrandId).HasColumnType("bigint(20)");

                entity.Property(e => e.BrandName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Logo)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.PlatRemark)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopCategoryInfo>(entity =>
            {
                entity.ToTable("shopcategory", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.IsShow).HasColumnType("tinyint(1)");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParentCategoryId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopFooterInfo>(entity =>
            {
                entity.ToTable("shopfooter", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Footer)
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopGradeInfo>(entity =>
            {
                entity.ToTable("shopgrade", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ChargeStandard).HasColumnType("decimal(8,2)");

                entity.Property(e => e.ImageLimit).HasColumnType("int(11)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductLimit).HasColumnType("int(11)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.TemplateLimit).HasColumnType("int(11)");
            });

            modelBuilder.Entity<ShopHomeModuleInfo>(entity =>
            {
                entity.ToTable("shophomemodule", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("int(11)");

                entity.Property(e => e.IsEnable).HasColumnType("tinyint(1)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.Url)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShopHomeModuleProductInfo>(entity =>
            {
                entity.ToTable("shophomemoduleproduct", "mall33");

                entity.HasIndex(e => e.HomeModuleId)
                    .HasName("FK_ShopHomeModule_ShopHomeModuleProduct");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_ShopHomeModuleProduct");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("int(11)");

                entity.Property(e => e.HomeModuleId).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopHomeModuleTopImgInfo>(entity =>
            {
                entity.ToTable("shophomemoduletopimg", "mall33");

                entity.HasIndex(e => e.HomeModuleId)
                    .HasName("FK_SFTHomeModuleId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DisplaySequence).HasColumnType("int(11)");

                entity.Property(e => e.HomeModuleId).HasColumnType("bigint(20)");

                entity.Property(e => e.ImgPath)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Url)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShopInvoiceConfigInfo>(entity =>
            {
                entity.ToTable("shopinvoiceconfig", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.IsElectronicInvoice)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.IsInvoice)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.IsPlainInvoice)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.IsVatInvoice)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.PlainInvoiceRate)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.ShopId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.VatInvoiceDay)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.VatInvoiceRate)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");
            });

            modelBuilder.Entity<ShopOpenApiSettingInfo>(entity =>
            {
                entity.ToTable("shopopenapisetting", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AppKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AppSecreat)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsEnable)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.IsRegistered)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShoppingCartInfo>(entity =>
            {
                entity.ToTable("shoppingcart", "mall33");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_ShoppingCart");

                entity.HasIndex(e => e.ShopBranchId)
                    .HasName("shoppingcarts_ibfk_3");

                entity.HasIndex(e => e.UserId)
                    .HasName("FK_Member_ShoppingCart");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.Quantity).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopBranchId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SkuId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopRenewRecordInfo>(entity =>
            {
                entity.ToTable("shoprenewrecord", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Amount).HasColumnType("decimal(10,2)");

                entity.Property(e => e.OperateContent)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.OperateType).HasColumnType("int(1)");

                entity.Property(e => e.Operator)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopShipperInfo>(entity =>
            {
                entity.ToTable("shopshipper", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IsDefaultGetGoods)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.IsDefaultSendGoods)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.IsDefaultVerification)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Latitude).HasDefaultValueSql("0");

                entity.Property(e => e.Longitude).HasDefaultValueSql("0");

                entity.Property(e => e.RegionId)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShipperName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShipperTag)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.TelPhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WxOpenId)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Zipcode)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShopVistiInfo>(entity =>
            {
                entity.ToTable("shopvisti", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.JointRate)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.OrderAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.OrderCount).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderPayCount).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderPayUserCount).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderProductCount).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderRefundAmount)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.OrderRefundCount)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.OrderRefundProductCount)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.OrderUserCount).HasColumnType("bigint(20)");

                entity.Property(e => e.SaleAmounts).HasColumnType("decimal(18,2)");

                entity.Property(e => e.SaleCounts).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopBranchId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.StatisticFlag).HasColumnType("bit(1)");

                entity.Property(e => e.UnitPrice)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValueSql("0.00");

                entity.Property(e => e.VistiCounts).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ShopWdgjSettingInfo>(entity =>
            {
                entity.ToTable("shopwdgjsetting", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.IsEnable)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.UCode)
                    .IsRequired()
                    .HasColumnName("uCode")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.USign)
                    .IsRequired()
                    .HasColumnName("uSign")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShopWithdrawInfo>(entity =>
            {
                entity.ToTable("shopwithdraw", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Account)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CashAmount).HasColumnType("decimal(18,2)");

                entity.Property(e => e.CashNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CashType).HasColumnType("int(11)");

                entity.Property(e => e.PlatRemark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SellerId).HasColumnType("bigint(20)");

                entity.Property(e => e.SellerName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SerialNo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.ShopName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShopRemark)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasColumnType("int(11)");
            });

            modelBuilder.Entity<SiteSettingInfo>(entity =>
            {
                entity.ToTable("sitesetting", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Key)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SiteSigninConfigInfo>(entity =>
            {
                entity.ToTable("sitesigninconfig", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.DayIntegral)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.DurationCycle)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.DurationReward)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.IsEnable).HasColumnType("tinyint(1)");
            });

            modelBuilder.Entity<SkuInfo>(entity =>
            {
                entity.HasKey(e => e.AutoId);

                entity.ToTable("sku", "mall33");

                entity.HasIndex(e => e.AutoId)
                    .HasName("AutoId");

                entity.HasIndex(e => e.Id)
                    .HasName("Id");

                entity.HasIndex(e => e.ProductId)
                    .HasName("FK_Product_Sku");

                entity.Property(e => e.AutoId).HasColumnType("bigint(20)");

                entity.Property(e => e.Color)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CostPrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.SafeStock)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SalePrice).HasColumnType("decimal(18,2)");

                entity.Property(e => e.ShowPic)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Size)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Sku1)
                    .HasColumnName("Sku")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Stock).HasColumnType("bigint(20)");

                entity.Property(e => e.Version)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SlideAdInfo>(entity =>
            {
                entity.ToTable("slidead", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DisplaySequence).HasColumnType("bigint(20)");

                entity.Property(e => e.ImageUrl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.TypeId)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SpecificationValueInfo>(entity =>
            {
                entity.ToTable("specificationvalue", "mall33");

                entity.HasIndex(e => e.TypeId)
                    .HasName("FK_Type_SpecificationValue");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Specification).HasColumnType("int(11)");

                entity.Property(e => e.TypeId).HasColumnType("bigint(20)");

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StatisticOrderCommentInfo>(entity =>
            {
                entity.ToTable("statisticordercomment", "mall33");

                entity.HasIndex(e => e.ShopId)
                    .HasName("statisticordercomments_ibfk_1");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CommentKey).HasColumnType("int(11)");

                entity.Property(e => e.CommentValue).HasColumnType("decimal(10,4)");

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<TemplateVisualizationSettingInfo>(entity =>
            {
                entity.ToTable("templatevisualizationsetting", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CurrentTemplateName)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<ThemeInfo>(entity =>
            {
                entity.ToTable("theme", "mall33");

                entity.Property(e => e.ThemeId).HasColumnType("bigint(20)");

                entity.Property(e => e.ClassifiedsColor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FrameColor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsUse)
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'");

                entity.Property(e => e.MainColor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SecondaryColor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TypeId).HasColumnType("int(11)");

                entity.Property(e => e.WritingColor)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TopicInfo>(entity =>
            {
                entity.ToTable("topic", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BackgroundImage)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FrontCoverImage)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsRecommend).HasColumnType("tinyint(1) unsigned zerofill");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PlatForm)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.SelfDefineText).IsUnicode(false);

                entity.Property(e => e.ShopId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Tags)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TopImage)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TopicModuleInfo>(entity =>
            {
                entity.ToTable("topicmodule", "mall33");

                entity.HasIndex(e => e.TopicId)
                    .HasName("FK_Topic_TopicModule");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TitleAlign).HasColumnType("int(11)");

                entity.Property(e => e.TopicId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<Domain.TypeInfo>(entity =>
            {
                entity.ToTable("type", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ColorAlias)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsDeleted).HasColumnType("bit(1)");

                entity.Property(e => e.IsSupportColor).HasColumnType("tinyint(1)");

                entity.Property(e => e.IsSupportSize).HasColumnType("tinyint(1)");

                entity.Property(e => e.IsSupportVersion).HasColumnType("tinyint(1)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SizeAlias)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VersionAlias)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TypeBrandInfo>(entity =>
            {
                entity.ToTable("typebrand", "mall33");

                entity.HasIndex(e => e.BrandId)
                    .HasName("FK_Brand_TypeBrand");

                entity.HasIndex(e => e.TypeId)
                    .HasName("FK_Type_TypeBrand");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BrandId).HasColumnType("bigint(20)");

                entity.Property(e => e.TypeId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<VerificationRecordInfo>(entity =>
            {
                entity.ToTable("verificationrecord", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.VerificationCodeIds)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.VerificationUser)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VirtualOrderItemInfo>(entity =>
            {
                entity.ToTable("virtualorderitem", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Content)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.OrderId).HasColumnType("bigint(20)");

                entity.Property(e => e.OrderItemId).HasColumnType("bigint(20)");

                entity.Property(e => e.VirtualProductItemName)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.VirtualProductItemType).HasColumnType("tinyint(4)");
            });

            modelBuilder.Entity<VirtualProductInfo>(entity =>
            {
                entity.ToTable("virtualproduct", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.EffectiveType).HasColumnType("tinyint(4)");

                entity.Property(e => e.Hour).HasColumnType("int(11)");

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.SupportRefundType).HasColumnType("tinyint(4)");

                entity.Property(e => e.UseNotice)
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.ValidityType).HasColumnType("bit(1)");
            });

            modelBuilder.Entity<VirtualProductItemInfo>(entity =>
            {
                entity.ToTable("virtualproductitem", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ProductId).HasColumnType("bigint(20)");

                entity.Property(e => e.Required).HasColumnType("bit(1)");

                entity.Property(e => e.Type).HasColumnType("tinyint(4)");
            });

            modelBuilder.Entity<VShopInfo>(entity =>
            {
                entity.ToTable("vshop", "mall33");

                entity.HasIndex(e => e.ShopId)
                    .HasName("FK_vshop_shopinfo");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.BackgroundImage)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.BuyNum)
                    .HasColumnName("buyNum")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Description)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.HomePageTitle)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsOpen)
                    .HasColumnType("tinyint(1)")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.Logo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.State).HasColumnType("int(11)");

                entity.Property(e => e.Tags)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.VisitNum).HasColumnType("int(11)");

                entity.Property(e => e.Wxlogo)
                    .HasColumnName("WXLogo")
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VShopExtendInfo>(entity =>
            {
                entity.ToTable("vshopextend", "mall33");

                entity.HasIndex(e => e.VshopId)
                    .HasName("FK_vshopextend_vshop");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.Sequence).HasColumnType("int(11)");

                entity.Property(e => e.State).HasColumnType("int(11)");

                entity.Property(e => e.Type).HasColumnType("int(11)");

                entity.Property(e => e.VshopId)
                    .HasColumnName("VShopId")
                    .HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<WeiActivityAwardInfo>(entity =>
            {
                entity.ToTable("weiactivityaward", "mall33");

                entity.HasIndex(e => e.ActivityId)
                    .HasName("FK_Mall_WeiActivityAward_2");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActivityId).HasColumnType("bigint(20)");

                entity.Property(e => e.AwardCount).HasColumnType("int(11)");

                entity.Property(e => e.AwardLevel).HasColumnType("int(11)");

                entity.Property(e => e.AwardType).HasColumnType("int(11)");

                entity.Property(e => e.BonusId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.CouponId)
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.Integral).HasColumnType("int(11)");
            });

            modelBuilder.Entity<WeiActivityInfoInfo>(entity =>
            {
                entity.ToTable("weiactivityinfo", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActivityDetails)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ActivityTitle)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ActivityType).HasColumnType("int(11)");

                entity.Property(e => e.ActivityUrl)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.CodeUrl)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ConsumePoint).HasColumnType("int(11)");

                entity.Property(e => e.ParticipationCount).HasColumnType("int(11)");

                entity.Property(e => e.ParticipationType).HasColumnType("int(11)");
            });

            modelBuilder.Entity<WeiActivityWinInfoInfo>(entity =>
            {
                entity.ToTable("weiactivitywininfo", "mall33");

                entity.HasIndex(e => e.ActivityId)
                    .HasName("FK_Mall_WeiActivityWinInfo_W2");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.ActivityId).HasColumnType("bigint(20)");

                entity.Property(e => e.AwardId).HasColumnType("bigint(20)");

                entity.Property(e => e.AwardName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IsWin).HasColumnType("tinyint(1)");

                entity.Property(e => e.UserId).HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<WeixinBasicInfo>(entity =>
            {
                entity.ToTable("weixinbasic", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AccessToken)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.AppId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ticket)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WeixinMsgTemplateInfo>(entity =>
            {
                entity.ToTable("weixinmsgtemplate", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.IsOpen).HasColumnType("tinyint(1)");

                entity.Property(e => e.MessageType).HasColumnType("int(11)");

                entity.Property(e => e.TemplateId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TemplateNum)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.UserInWxApplet)
                    .HasColumnType("tinyint(4) unsigned zerofill")
                    .HasDefaultValueSql("0000");
            });

            modelBuilder.Entity<WxAccTokenInfo>(entity =>
            {
                entity.ToTable("wxacctoken", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AccessToken)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.AppId)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WxAppletFormDataInfo>(entity =>
            {
                entity.ToTable("wxappletformdata", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.EventId).HasColumnType("bigint(20)");

                entity.Property(e => e.EventValue)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FormId)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WxCardCodeLogInfo>(entity =>
            {
                entity.ToTable("wxcardcodelog", "mall33");

                entity.HasIndex(e => e.CardId)
                    .HasName("IDX_Mall_WXLog_CardId");

                entity.HasIndex(e => e.CardLogId)
                    .HasName("FK_Mall_WXLog_CardLogId");

                entity.HasIndex(e => e.Code)
                    .HasName("IDX_Mall_WXLog_Code");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.CardId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardLogId).HasColumnType("bigint(20)");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeStatus)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.CouponCodeId).HasColumnType("bigint(20)");

                entity.Property(e => e.CouponType).HasColumnType("int(11)");

                entity.Property(e => e.OpenId)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WxCardLogInfo>(entity =>
            {
                entity.ToTable("wxcardlog", "mall33");

                entity.HasIndex(e => e.CardId)
                    .HasName("IDX_Mall_WXCardLog_CardId");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AppId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AppSecret)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AuditStatus)
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("0");

                entity.Property(e => e.CardColor)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CardId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardSubTitle)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CardTitle)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CouponId).HasColumnType("bigint(20)");

                entity.Property(e => e.CouponType).HasColumnType("int(11)");
            });

            modelBuilder.Entity<WxShopInfo>(entity =>
            {
                entity.ToTable("wxshop", "mall33");

                entity.Property(e => e.Id).HasColumnType("bigint(20)");

                entity.Property(e => e.AppId)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AppSecret)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.FollowUrl)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ShopId).HasColumnType("bigint(20)");

                entity.Property(e => e.Token)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WxSmallChoiceProductInfo>(entity =>
            {
                entity.HasKey(e => e.ProductId);

                entity.ToTable("wxsmallchoiceproduct", "mall33");

                entity.Property(e => e.ProductId)
                    .HasColumnType("int(11)")
                    .ValueGeneratedNever();
            });
        }
    }
}
